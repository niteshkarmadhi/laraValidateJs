{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChtprrtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpvtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACltttttttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtrvrpBA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AApBA;AAAA;AAAA;AAsBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AALA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA","sources":["webpack://laravalidatejs/webpack/universalModuleDefinition","webpack://laravalidatejs/./src/constant/validationMessages.js","webpack://laravalidatejs/./node_modules/validatorjs/src/async.js","webpack://laravalidatejs/./node_modules/validatorjs/src/attributes.js","webpack://laravalidatejs/./node_modules/validatorjs/src/errors.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ar.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/az.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/be.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/bg.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/bs.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ca.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/cs.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/cy.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/da.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/de.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/el.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/en.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/es.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/et.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/eu.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/fa.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/fi.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/fr.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/hr.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/hu.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/id.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/it.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ja.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ka.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ko.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/lt.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/lv.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/mk.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/mn.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ms.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/nb_NO.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/nl.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/pl.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/pt.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/pt_BR.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ro.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ru.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/se.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/sl.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/sq.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/sr.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/sv.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/tr.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ua.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/uk.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/vi.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/zh.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/zh_TW.js","webpack://laravalidatejs/./node_modules/validatorjs/src/lang/ sync ^\\.\\/.*$","webpack://laravalidatejs/./node_modules/validatorjs/src/messages.js","webpack://laravalidatejs/./node_modules/validatorjs/src/rules.js","webpack://laravalidatejs/./node_modules/validatorjs/src/validator.js","webpack://laravalidatejs/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://laravalidatejs/webpack/bootstrap","webpack://laravalidatejs/webpack/runtime/compat get default export","webpack://laravalidatejs/webpack/runtime/define property getters","webpack://laravalidatejs/webpack/runtime/hasOwnProperty shorthand","webpack://laravalidatejs/webpack/runtime/make namespace object","webpack://laravalidatejs/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"React\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, (__WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","export const validationMessages = {\r\n    accepted: \":attribute must be accepted.\",\r\n    after: \":attribute must be after :after.\",\r\n    after_or_equal: \":attribute must be equal or after :after_or_equal.\",\r\n    alpha: \":attribute must contain only alphabetic characters.\",\r\n    alpha_dash:\r\n      \":attribute may only contain alpha-numeric characters, as well as dashes and underscores.\",\r\n    alpha_num: \":attribute must be alphanumeric.\",\r\n    before: \":attribute must be before :before.\",\r\n    before_or_equal: \":attribute must be equal or before :before_or_equal.\",\r\n    between: {\r\n      numeric: \":attribute must be between :min and :max.\",\r\n      string: \":attribute must be between :min and :max characters.\",\r\n    },\r\n    confirmed: \":attribute confirmation does not match.\",\r\n    email: \":attribute format is invalid.\",\r\n    date: \":attribute is not a valid date format.\",\r\n    def: \":attribute attribute has errors.\",\r\n    digits: \":attribute must be :digits digits.\",\r\n    digits_between: \":attribute must be between :min and :max digits.\",\r\n    different: \":attribute and :different must be different.\",\r\n    in: \"selected :attribute is invalid.\",\r\n    integer: \":attribute must be an integer.\",\r\n    hex: \":attribute should have hexadecimal format\",\r\n    min: {\r\n      numeric: \":attribute must be at least :min.\",\r\n      string: \":attribute must be at least :min characters.\",\r\n    },\r\n    max: {\r\n      numeric: \":attribute may not be greater than :max.\",\r\n      string: \":attribute may not be greater than :max characters.\",\r\n    },\r\n    not_in: \"selected :attribute is invalid.\",\r\n    numeric: \":attribute must be a number.\",\r\n    present: \":attribute must be present (but can be empty).\",\r\n    required: \":attribute is required.\",\r\n    required_if: \":attribute is required when :other is :value.\",\r\n    required_unless: \":attribute is required when :other is not :value.\",\r\n    required_with: \":attribute is required when :field is not empty.\",\r\n    required_with_all: \":attribute is required when :fields are not empty.\",\r\n    required_without: \":attribute is required when :field is empty.\",\r\n    required_without_all: \":attribute is required when :fields are empty.\",\r\n    same: \":attribute and :same fields must match.\",\r\n    size: {\r\n      numeric: \":attribute must be :size.\",\r\n      string: \":attribute must be :size characters.\",\r\n    },\r\n    string: \":attribute must be a string.\",\r\n    url: \":attribute format is invalid.\",\r\n    regex: \":attribute format is invalid.\",\r\n    attributes: {},\r\n  };\r\n  ","function AsyncResolvers(onFailedOne, onResolvedAll) {\n  this.onResolvedAll = onResolvedAll;\n  this.onFailedOne = onFailedOne;\n  this.resolvers = {};\n  this.resolversCount = 0;\n  this.passed = [];\n  this.failed = [];\n  this.firing = false;\n}\n\nAsyncResolvers.prototype = {\n\n  /**\n   * Add resolver\n   *\n   * @param {Rule} rule\n   * @return {integer}\n   */\n  add: function(rule) {\n    var index = this.resolversCount;\n    this.resolvers[index] = rule;\n    this.resolversCount++;\n    return index;\n  },\n\n  /**\n   * Resolve given index\n   *\n   * @param  {integer} index\n   * @return {void}\n   */\n  resolve: function(index) {\n    var rule = this.resolvers[index];\n    if (rule.passes === true) {\n      this.passed.push(rule);\n    } else if (rule.passes === false) {\n      this.failed.push(rule);\n      this.onFailedOne(rule);\n    }\n\n    this.fire();\n  },\n\n  /**\n   * Determine if all have been resolved\n   *\n   * @return {boolean}\n   */\n  isAllResolved: function() {\n    return (this.passed.length + this.failed.length) === this.resolversCount;\n  },\n\n  /**\n   * Attempt to fire final all resolved callback if completed\n   *\n   * @return {void}\n   */\n  fire: function() {\n\n    if (!this.firing) {\n      return;\n    }\n\n    if (this.isAllResolved()) {\n      this.onResolvedAll(this.failed.length === 0);\n    }\n\n  },\n\n  /**\n   * Enable firing\n   *\n   * @return {void}\n   */\n  enableFiring: function() {\n    this.firing = true;\n  }\n\n};\n\nmodule.exports = AsyncResolvers;\n","var replacements = {\n\n  /**\n   * Between replacement (replaces :min and :max)\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  between: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      min: parameters[0],\n      max: parameters[1]\n    });\n  },\n\n  /**\n   * Digits-Between replacement (replaces :min and :max)\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  digits_between: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      min: parameters[0],\n      max: parameters[1]\n    });\n  },\n\n  /**\n   * Required_if replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_if: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      other: this._getAttributeName(parameters[0]),\n      value: parameters[1]\n    });\n  },\n\n  /**\n   * Required_unless replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_unless: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      other: this._getAttributeName(parameters[0]),\n      value: parameters[1]\n    });\n  },\n\n  /**\n   * Required_with replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_with: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      field: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * Required_with_all replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_with_all: function(template, rule) {\n    var parameters = rule.getParameters();\n    var getAttributeName = this._getAttributeName.bind(this);\n    return this._replacePlaceholders(rule, template, {\n      fields: parameters.map(getAttributeName).join(', ')\n    });\n  },\n\n  /**\n   * Required_without replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_without: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      field: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * Required_without_all replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  required_without_all: function(template, rule) {\n    var parameters = rule.getParameters();\n    var getAttributeName = this._getAttributeName.bind(this);\n    return this._replacePlaceholders(rule, template, {\n      fields: parameters.map(getAttributeName).join(', ')\n    });\n  },\n\n  /**\n   * After replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  after: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      after: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * Before replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  before: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      before: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * After_or_equal replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  after_or_equal: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      after_or_equal: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * Before_or_equal replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  before_or_equal: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      before_or_equal: this._getAttributeName(parameters[0])\n    });\n  },\n\n  /**\n   * Same replacement.\n   *\n   * @param  {string} template\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  same: function(template, rule) {\n    var parameters = rule.getParameters();\n    return this._replacePlaceholders(rule, template, {\n      same: this._getAttributeName(parameters[0])\n    });\n  },\n};\n\nfunction formatter(attribute) {\n  return attribute.replace(/[_\\[]/g, ' ').replace(/]/g, '');\n}\n\nmodule.exports = {\n  replacements: replacements,\n  formatter: formatter\n};\n","var Errors = function() {\n  this.errors = {};\n};\n\nErrors.prototype = {\n  constructor: Errors,\n\n  /**\n   * Add new error message for given attribute\n   *\n   * @param  {string} attribute\n   * @param  {string} message\n   * @return {void}\n   */\n  add: function(attribute, message) {\n    if (!this.has(attribute)) {\n      this.errors[attribute] = [];\n    }\n\n    if (this.errors[attribute].indexOf(message) === -1) {\n      this.errors[attribute].push(message);\n    }\n  },\n\n  /**\n   * Returns an array of error messages for an attribute, or an empty array\n   *\n   * @param  {string} attribute A key in the data object being validated\n   * @return {array} An array of error messages\n   */\n  get: function(attribute) {\n    if (this.has(attribute)) {\n      return this.errors[attribute];\n    }\n\n    return [];\n  },\n\n  /**\n   * Returns the first error message for an attribute, false otherwise\n   *\n   * @param  {string} attribute A key in the data object being validated\n   * @return {string|false} First error message or false\n   */\n  first: function(attribute) {\n    if (this.has(attribute)) {\n      return this.errors[attribute][0];\n    }\n\n    return false;\n  },\n\n  /**\n   * Get all error messages from all failing attributes\n   *\n   * @return {Object} Failed attribute names for keys and an array of messages for values\n   */\n  all: function() {\n    return this.errors;\n  },\n\n  /**\n   * Determine if there are any error messages for an attribute\n   *\n   * @param  {string}  attribute A key in the data object being validated\n   * @return {boolean}\n   */\n  has: function(attribute) {\n    if (this.errors.hasOwnProperty(attribute)) {\n      return true;\n    }\n\n    return false;\n  }\n};\n\nmodule.exports = Errors;\n","var Messages = require('./messages');\n\nrequire('./lang/en');\n\nvar require_method = require;\n\nvar container = {\n\n  messages: {},\n\n  /**\n   * Set messages for language\n   *\n   * @param {string} lang\n   * @param {object} rawMessages\n   * @return {void}\n   */\n  _set: function(lang, rawMessages) {\n    this.messages[lang] = rawMessages;\n  },\n\n  /**\n   * Set message for given language's rule.\n   *\n   * @param {string} lang\n   * @param {string} attribute\n   * @param {string|object} message\n   * @return {void}\n   */\n  _setRuleMessage: function(lang, attribute, message) {\n    this._load(lang);\n    if (message === undefined) {\n      message = this.messages[lang].def;\n    }\n\n    this.messages[lang][attribute] = message;\n  },\n\n  /**\n   * Load messages (if not already loaded)\n   *\n   * @param  {string} lang\n   * @return {void}\n   */\n  _load: function(lang) {\n    if (!this.messages[lang]) {\n      try {\n        var rawMessages = require_method('./lang/' + lang);\n        this._set(lang, rawMessages);\n      } catch (e) {}\n    }\n  },\n\n  /**\n   * Get raw messages for language\n   *\n   * @param  {string} lang\n   * @return {object}\n   */\n  _get: function(lang) {\n    this._load(lang);\n    return this.messages[lang];\n  },\n\n  /**\n   * Make messages for given language\n   *\n   * @param  {string} lang\n   * @return {Messages}\n   */\n  _make: function(lang) {\n    this._load(lang);\n    return new Messages(lang, this.messages[lang]);\n  }\n\n};\n\nmodule.exports = container;\n","module.exports = {\n  accepted: \"الصفة :attribute يجب أن تكون مقبولة\",\n  after: \"الصفة :attribute يجب أن تكون بعد الصفة :after.\",\n  after_or_equal: \"الصفة :attribute يجب أن تكون مساوية أو بعد الصفة :after_or_equal.\",\n  alpha: \"حقل الصفة  :attribute يجب أن تحتوي على أحرف فقط\",\n  alpha_dash: \"حقل الصفة :attribute مسموح بأن يحتوي على حروف و أرقام و شرطة و شرطة منخفضة\",\n  alpha_num: \"حقل الصفة :attribute يجب أن يحتوي على أحرف و أرقام\",\n  before: \"الصفة :attribute يجب أن تكون قبل :before.\",\n  before_or_equal: \"الصفة :attribute يجب أن تكون مساوية أو قبل الصفة :before_or_equal.\",\n  between: \"حقل الصفة :attribute يجب أن يكون بين :min و :max.\",\n  confirmed: \"تأكيد الصفة :attribute غير متطابق.\",\n  email: \"الصفة :attribute صيغتها غير صحيحة\",\n  date: \"الصفة :attribute صيغتها ليست تاريخ صحيح\",\n  def: \"الصفة :attribute تحتوي على أخطاء\",\n  digits: \"الصفة :attribute يجب أن تكون :digits أرقام.\",\n  digits_between: \"يجب أن يحتوي :attribute بين :min و :max رقمًا/أرقام .\",\n  different: \"الصفة :attribute و الصفة :different يجب أن تكونا مختلفتين\",\n  in: \"الصفة :attribute المختارة، غير صحيحة.\",\n  integer: \"الصفة :attribute يجب أن تكون عدد صحيح\",\n  hex: \"حقل الصفة :attribute يجب أن يحتوي على صيغة هكسيديسمل\",\n  min: {\n    numeric: \"الصفة :attribute يجب أن تكون :min على الأقل\",\n    string: \"الصفة :attribute يجب أن تكون :min حرف على الأقل.\"\n  },\n  max: {\n    numeric: \"الصفة :attribute لا يمكن أن تكون أكبر من  :max.\",\n    string: \"الصفة :attribute يجب أن لا تكون أكثر من :max حرف.\"\n  },\n  not_in: \"الصفة :attribute المختارة غير صحيحة.\",\n  numeric: \"الصفة :attribute يجب أن تكون رقما.\",\n  present: \"حقل الصفة :attribute يجب أن يكون معرفا ، يمكن أن يكون فارغا.\",\n  required: \"حقل الصفة :attribute مطلوب.\",\n  required_if: \"حقل الصفة :attribute مطلوب حين تكون قيمة الحقل :other تساوي :value.\",\n  required_unless: \"حقل الصفة :attribute مطلوب حين تكون قيم الحقل :other لا تساوي :value.\",\n  required_with: \"حقل الصفة :attribute مطلوب حين يكون الحقا :field غير فارغ.\",\n  required_with_all: \"حقل الصفة :attribute مطلوب حين تكون الحقول :fields غير فارغة.\",\n  required_without: \"حقل الصفة :attribute مطلوب حين يكون الحقل :field فارغا.\",\n  required_without_all: \"حقل الصفة :attribute مطلوب حين تكون الحقول :fields فارغة.\",\n  same: \"حقل الصفة :attribute و حقل الصفة :same يجب أن يتطابقا.\",\n  size: {\n    numeric: \"الصفة :attribute يجب أن تكون :size.\",\n    string: \"الصفة :attribute يجب أن تكون :size حرفا.\"\n  },\n  string: \"الصفة :attribute يجب أن تكون نص.\",\n  url: \"الصفة :attribute صياغتها غير صحيحة.\",\n  regex: \"الصفة :attribute صياغتها غير صحيحة.\",\n  attributes: {\n    username: \"اسم المستخدم\",\n    password: \"كلمة المرور\",\n    email: \"البريد الالكتروني\",\n    website: \"الموقع الالكتروني\",\n    firstname: \"الاسم الاول\",\n    lastname: \"الاسم الاخير\",\n    subject: \"الموضوع\",\n    city: \"المدينة\",\n    region: \"المنطقة\",\n    country: \"الدولة\",\n    street: \"الشارع\",\n    zipcode: \"الرمز البريدي\",\n    phone: \"رقم الهاتف\",\n    mobile: \"رقم الجوال\"\n  }\n};\n","module.exports = {\n  accepted: \":attribute qəbul edilməlidir\",\n  active_url: \":attribute doğru URL deyil\",\n  after: \":attribute :date tarixindən sonra olmalıdır\",\n  after_or_equal: \":attribute :date tarixi ilə eyni və ya sonra olmalıdır\",\n  alpha: \":attribute yalnız hərflərdən ibarət ola bilər\",\n  alpha_dash: \":attribute yalnız hərf, rəqəm və tire simvolundan ibarət ola bilər\",\n  alpha_num: \":attribute yalnız hərf və rəqəmlərdən ibarət ola bilər\",\n  array: \":attribute massiv formatında olmalıdır\",\n  before: \":attribute :date tarixindən əvvəl olmalıdır\",\n  before_or_equal: \":attribute :date tarixindən əvvəl və ya bərabər olmalıdır\",\n  between: {\n    numeric: \":attribute :min ilə :max arasında olmalıdır\",\n    file: \":attribute :min ilə :max KB ölçüsü intervalında olmalıdır\",\n    string: \":attribute :min ilə :max simvolu intervalında olmalıdır\",\n    array: \":attribute :min ilə :max intervalında hissədən ibarət olmalıdır\"\n  },\n  boolean: \" :attribute doğru və ya yanlış ola bilər\",\n  confirmed: \" :attribute doğrulanması yanlışdır\",\n  date: \" :attribute tarix formatında olmalıdır\",\n  date_format: \" :attribute :format formatında olmalıdır\",\n  different: \" :attribute və :other fərqli olmalıdır\",\n  digits: \" :attribute :digits rəqəmli olmalıdır\",\n  digits_between: \" :attribute :min ilə :max rəqəmləri intervalında olmalıdır\",\n  dimensions: \" :attribute doğru şəkil ölçülərində deyil\",\n  distinct: \" :attribute dublikat qiymətlidir\",\n  email: \" :attribute doğru email formatında deyil\",\n  exists: \" seçilmiş :attribute yanlışdır\",\n  file: \" :attribute fayl formatında olmalıdır\",\n  filled: \" :attribute qiyməti olmalıdır\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  image: \" :attribute şəkil formatında olmalıdır\",\n  in: \" seçilmiş :attribute yanlışdır\",\n  in_array: \" :attribute :other qiymətləri arasında olmalıdır\",\n  integer: \" :attribute tam ədəd olmalıdır\",\n  hex: \"The :attribute field should have hexadecimal format\",\n  ip: \" :attribute İP adres formatında olmalıdır\",\n  ipv4: \" :attribute İPv4 adres formatında olmalıdır\",\n  ipv6: \" :attribute İPv6 adres formatında olmalıdır\",\n  json: \" :attribute JSON formatında olmalıdır\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \" :attribute maksiumum :max rəqəmdən ibarət ola bilər\",\n    file: \" :attribute maksimum :max KB ölçüsündə ola bilər\",\n    string: \" :attribute maksimum :max simvoldan ibarət ola bilər\",\n    array: \" :attribute maksimum :max hədd'dən ibarət ola bilər\"\n  },\n  mimes: \" :attribute :values tipində fayl olmalıdır\",\n  mimetypes: \" :attribute :values tipində fayl olmalıdır\",\n  min: {\n    numeric: \" :attribute minimum :min rəqəmdən ibarət ola bilər\",\n    file: \" :attribute minimum :min KB ölçüsündə ola bilər\",\n    string: \" :attribute minimum :min simvoldan ibarət ola bilər\",\n    array: \" :attribute minimum :min hədd'dən ibarət ola bilər\"\n  },\n  not_in: \" seçilmiş :attribute yanlışdır\",\n  numeric: \" :attribute rəqəmlərdən ibarət olmalıdır\",\n  present: \" :attribute iştirak etməlidir\",\n  regex: \" :attribute formatı yanlışdır\",\n  required: \" :attribute mütləqdir\",\n  required_if: \" :attribute (:other :value ikən) mütləqdir\",\n  required_unless: \" :attribute (:other :values 'ə daxil ikən) mütləqdir\",\n  required_with: \" :attribute (:values var ikən) mütləqdir\",\n  required_with_all: \" :attribute (:values var ikən) mütləqdir\",\n  required_without: \" :attribute (:values yox ikən) mütləqdir\",\n  required_without_all: \" :attribute (:values yox ikən) mütləqdir\",\n  same: \" :attribute və :other eyni olmalıdır\",\n  size: {\n    numeric: \" :attribute :size ölçüsündə olmalıdır\",\n    file: \" :attribute :size KB ölçüsündə olmalıdır\",\n    string: \" :attribute :size simvoldan ibarət olmalıdır\",\n    array: \" :attribute :size hədd'dən ibarət olmalıdır\"\n  },\n  string: \" :attribute hərf formatında olmalıdır\",\n  timezone: \" :attribute ərazi formatında olmalıdır\",\n  unique: \" :attribute artıq iştirak edib\",\n  uploaded: \" :attribute yüklənməsi mümkün olmadı\",\n  url: \" :attribute formatı yanlışdır\"\n};\n","module.exports = {\n  accepted: \"Вы павінны прыняць :attribute.\",\n  active_url: \"Поле :attribute утрымлівае несапраўдны URL.\",\n  after: \"У полі :attribute павінна быць дата пасля :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Поле :attribute можа мець толькі літары.\",\n  alpha_dash: \"Поле :attribute можа мець толькі літары, лічбы і злучок.\",\n  alpha_num: \"Поле :attribute можа мець толькі літары і лічбы.\",\n  array: \"Поле :attribute павінна быць масівам.\",\n  before: \"У полі :attribute павінна быць дата да :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Поле :attribute павінна быць паміж :min і :max.\",\n    file: \"Памер файла ў поле :attribute павінен быць паміж :min і :max кілабайт.\",\n    string: \"Колькасць сiмвалаў у поле :attribute павінна быць паміж :min і :max.\",\n    array: \"Колькасць элементаў у поле :attribute павінна быць паміж :min і :max.\"\n  },\n  boolean: \"Поле :attribute павінна мець значэнне лагічнага тыпу.\",\n  confirmed: \"Поле :attribute не супадае з пацвярджэннем.\",\n  date: \"Поле :attribute не з'яўляецца датай.\",\n  date_format: \"Поле :attribute не адпавядае фармату :format.\",\n  different: \"Палі :attribute і :other павінны адрознівацца.\",\n  digits: \"Даўжыня лічбавага поля :attribute павінна быць :digits.\",\n  digits_between: \"Даўжыня лічбавага поля :attribute павінна быць паміж :min і :max.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \"Поле :attribute павінна быць сапраўдным электронным адрасам.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Поле :attribute абавязкова для запаўнення.\",\n  exists: \"Выбранае значэнне для :attribute некарэктна.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Поле :attribute павінна быць малюнкам.\",\n  in: \"Выбранае значэнне для :attribute памылкова.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \"Поле :attribute павінна быць цэлым лікам.\",\n  ip: \"Поле :attribute дпавінна быць сапраўдным IP-адрасам.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"Поле :attribute павінна быць JSON радком.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Поле :attribute не можа быць больш :max.\",\n    file: \"Памер файла ў поле :attribute не можа быць больш :max кілабайт).\",\n    string: \"Колькасць сiмвалаў у поле :attribute не можа перавышаць :max.\",\n    array: \"Колькасць элементаў у поле :attribute не можа перавышаць :max.\"\n  },\n  mimes: \"Поле :attribute павінна быць файлам аднаго з наступных тыпаў: :values.\",\n  mimetypes: \"Поле :attribute павінна быць файлам аднаго з наступных тыпаў: :values.\",\n  min: {\n    numeric: \"Поле :attribute павінна быць не менш :min.\",\n    file: \"Памер файла ў полее :attribute павінен быць не менш :min кілабайт.\",\n    string: \"Колькасць сiмвалаў у поле :attribute павінна быць не менш :min.\",\n    array: \"Колькасць элементаў у поле :attribute павінна быць не менш :min.\"\n  },\n  not_in: \"Выбранае значэнне для :attribute памылкова.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Поле :attribute павінна быць лікам.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Поле :attribute мае памылковы фармат.\",\n  required: \"Поле :attribute абавязкова для запаўнення.\",\n  required_if: \"Поле :attribute абавязкова для запаўнення, калі :other раўняецца :value.\",\n  required_unless: \"Поле :attribute абавязкова для запаўнення, калі :other не раўняецца :values.\",\n  required_with: \"Поле :attribute абавязкова для запаўнення, калі :values ўказана.\",\n  required_with_all: \"Поле :attribute абавязкова для запаўнення, калі :values ўказана.\",\n  required_without: \"Поле :attribute абавязкова для запаўнення, калі :values не ўказана.\",\n  required_without_all: \"Поле :attribute абавязкова для запаўнення, калі ні адно з :values не ўказана.\",\n  same: \"Значэнне :attribute павінна супадаць з :other.\",\n  size: {\n    numeric: \"Поле :attribute павінна быць :size.\",\n    file: \"Размер файла в поле :attribute павінен быць :size кілабайт.\",\n    string: \"Колькасць сiмвалаў у поле :attribute павінна быць :size.\",\n    array: \"Колькасць элементаў у поле :attribute павінна быць :size.\"\n  },\n  string: \"Поле :attribute павінна быць радком.\",\n  timezone: \"Поле :attribute павінна быць сапраўдным гадзінным поясам.\",\n  unique: \"Такое значэнне поля :attribute ўжо існуе.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Поле :attribute мае памылковы фармат.\"\n};\n","module.exports = {\n  accepted: \"Трябва да приемете :attribute.\",\n  active_url: \"Полето :attribute не е валиден URL адрес.\",\n  after: \"Полето :attribute трябва да бъде дата след :date.\",\n  after_or_equal: \"Полето :attribute трябва да бъде дата след или равна на :date.\",\n  alpha: \"Полето :attribute трябва да съдържа само букви.\",\n  alpha_dash: \"Полето :attribute трябва да съдържа само букви, цифри, долна черта и тире.\",\n  alpha_num: \"Полето :attribute трябва да съдържа само букви и цифри.\",\n  array: \"Полето :attribute трябва да бъде масив.\",\n  before: \"Полето :attribute трябва да бъде дата преди :date.\",\n  before_or_equal: \"Полето :attribute трябва да бъде дата преди или равна на :date.\",\n  between: {\n    numeric: \"Полето :attribute трябва да бъде между :min и :max.\",\n    file: \"Полето :attribute трябва да бъде между :min и :max килобайта.\",\n    string: \"Полето :attribute трябва да бъде между :min и :max знака.\",\n    array: \"Полето :attribute трябва да има между :min - :max елемента.\"\n  },\n  boolean: \"Полето :attribute трябва да съдържа Да или Не\",\n  confirmed: \"Полето :attribute не е потвърдено.\",\n  date: \"Полето :attribute не е валидна дата.\",\n  date_format: \"Полето :attribute не е във формат :format.\",\n  different: \"Полетата :attribute и :other трябва да са различни.\",\n  digits: \"Полето :attribute трябва да има :digits цифри.\",\n  digits_between: \"Полето :attribute трябва да има между :min и :max цифри.\",\n  dimensions: \"Невалидни размери за снимка :attribute.\",\n  distinct: \"Данните в полето :attribute се дублират.\",\n  email: \"Полето :attribute е в невалиден формат.\",\n  exists: \"Избранато поле :attribute вече съществува.\",\n  file: \"Полето :attribute трябва да бъде файл.\",\n  filled: \"Полето :attribute е задължително.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Полето :attribute трябва да бъде изображение.\",\n  in: \"Избраното поле :attribute е невалидно.\",\n  in_array: \"Полето :attribute не съществува в :other.\",\n  integer: \"Полето :attribute трябва да бъде цяло число.\",\n  ip: \"Полето :attribute трябва да бъде IP адрес.\",\n  ipv4: \"Полето :attribute трябва да бъде IPv4 адрес.\",\n  ipv6: \"Полето :attribute трябва да бъде IPv6 адрес.\",\n  json: \"Полето :attribute трябва да бъде JSON низ.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Полето :attribute трябва да бъде по-малко от :max.\",\n    file: \"Полето :attribute трябва да бъде по-малко от :max килобайта.\",\n    string: \"Полето :attribute трябва да бъде по-малко от :max знака.\",\n    array: \"Полето :attribute трябва да има по-малко от :max елемента.\"\n  },\n  mimes: \"Полето :attribute трябва да бъде файл от тип: :values.\",\n  mimetypes: \"Полето :attribute трябва да бъде файл от тип: :values.\",\n  min: {\n    numeric: \"Полето :attribute трябва да бъде минимум :min.\",\n    file: \"Полето :attribute трябва да бъде минимум :min килобайта.\",\n    string: \"Полето :attribute трябва да бъде минимум :min знака.\",\n    array: \"Полето :attribute трябва има минимум :min елемента.\"\n  },\n  not_in: \"Избраното поле :attribute е невалидно.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Полето :attribute трябва да бъде число.\",\n  present: \"Полето :attribute трябва да съествува.\",\n  regex: \"Полето :attribute е в невалиден формат.\",\n  required: \"Полето :attribute е задължително.\",\n  required_if: \"Полето :attribute се изисква, когато :other е :value.\",\n  required_unless: \"Полето :attribute се изисква, освен ако :other не е в :values.\",\n  required_with: \"Полето :attribute се изисква, когато :values има стойност.\",\n  required_with_all: \"Полето :attribute е задължително, когато :values имат стойност.\",\n  required_without: \"Полето :attribute се изисква, когато :values няма стойност.\",\n  required_without_all: \"Полето :attribute се изисква, когато никое от полетата :values няма стойност.\",\n  same: \"Полетата :attribute и :other трябва да съвпадат.\",\n  size: {\n    numeric: \"Полето :attribute трябва да бъде :size.\",\n    file: \"Полето :attribute трябва да бъде :size килобайта.\",\n    string: \"Полето :attribute трябва да бъде :size знака.\",\n    array: \"Полето :attribute трябва да има :size елемента.\"\n  },\n  string: \"Полето :attribute трябва да бъде знаков низ.\",\n  timezone: \"Полето :attribute трябва да съдържа валидна часова зона.\",\n  unique: \"Полето :attribute вече съществува.\",\n  uploaded: \"Неуспешно качване на :attribute.\",\n  url: \"Полето :attribute е в невалиден формат.\"\n};\n","module.exports = {\n  accepted: \"Polje :attribute mora biti prihvaćeno.\",\n  active_url: \"Polje :attribute nije validan URL.\",\n  after: \"Polje :attribute mora biti datum poslije :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Polje :attribute može sadržati samo slova.\",\n  alpha_dash: \"Polje :attribute može sadržati samo slova, brojeve i povlake.\",\n  alpha_num: \"Polje :attribute može sadržati samo slova i brojeve.\",\n  attributes: {},\n  array: \"Polje :attribute mora biti niz.\",\n  before: \"Polje :attribute mora biti datum prije :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Polje :attribute mora biti izmedju :min - :max.\",\n    file: \"Fajl :attribute mora biti izmedju :min - :max kilobajta.\",\n    string: \"Polje :attribute mora biti izmedju :min - :max karaktera.\",\n    array: \"Polje :attribute mora biti između :min - :max karaktera.\"\n  },\n  boolean: \"Polje :attribute mora biti tačno ili netačno\",\n  confirmed: \"Potvrda polja :attribute se ne poklapa.\",\n  date: \"Polje :attribute nema ispravan datum.\",\n  date_format: \"Polje :attribute nema odgovarajući format :format.\",\n  different: \"Polja :attribute i :other moraju biti različita.\",\n  digits: \"Polje :attribute mora da sadži :digits brojeve.\",\n  digits_between: \"Polje :attribute mora biti između :min i :max broja.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \"Format polja :attribute mora biti validan email.\",\n  exists: \"Odabrano polje :attribute nije validno.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Polje :attribute je obavezno.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Polje :attribute mora biti slika.\",\n  in: \"Odabrano polje :attribute nije validno.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \"Polje :attribute mora biti broj.\",\n  ip: \"Polje :attribute mora biti validna IP adresa.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"The :attribute must be a valid JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Polje :attribute mora biti manje od :max.\",\n    file: \"Polje :attribute mora biti manje od :max kilobajta.\",\n    string: \"Polje :attribute mora sadržati manje od :max karaktera.\",\n    array: \"Polje :attribute mora sadržati manje od :max karaktera.\"\n  },\n  mimes: \"Polje :attribute mora biti fajl tipa: :values.\",\n  mimetypes: \"Polje :attribute mora biti fajl tipa: :values.\",\n  min: {\n    numeric: \"Polje :attribute mora biti najmanje :min.\",\n    file: \"Fajl :attribute mora biti najmanje :min kilobajta.\",\n    string: \"Polje :attribute mora sadržati najmanje :min karaktera.\",\n    array: \"Polje :attribute mora sadržati najmanje :min karaktera.\"\n  },\n  not_in: \"Odabrani element polja :attribute nije validan.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Polje :attribute mora biti broj.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Polje :attribute ima neispravan format.\",\n  required: \"Polje :attribute je obavezno.\",\n  required_if: \"Polje :attribute je obavezno kada :other je :value.\",\n  required_unless: \"The :attribute field is required unless :other is in :values.\",\n  required_with: \"Polje :attribute je obavezno kada je :values prikazano.\",\n  required_with_all: \"Polje :attribute je obavezno kada je :values prikazano.\",\n  required_without: \"Polje :attribute je obavezno kada :values nije prikazano.\",\n  required_without_all: \"Polje :attribute je obavezno kada nijedno :values nije prikazano.\",\n  same: \"Polja :attribute i :other se moraju poklapati.\",\n  size: {\n    numeric: \"Polje :attribute mora biti :size.\",\n    file: \"Fajl :attribute mora biti :size kilobajta.\",\n    string: \"Polje :attribute mora biti :size karaktera.\",\n    array: \"Polje :attribute mora biti :size karaktera.\"\n  },\n  string: \"Polje :attribute mora sadrzavati slova.\",\n  timezone: \"Polje :attribute mora biti ispravna vremenska zona.\",\n  unique: \"Polje :attribute već postoji.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Format polja :attribute nije validan.\"\n};\n","module.exports = {\n  accepted: 'El camp :attribute pot ser aceptat.',\n  after: 'El camp :attribute pot ser una data posterior a :after.',\n  alpha: 'El camp :attribute només pot contenir lletras.',\n  alpha_dash: 'El camp :attribute només pot contenir lletras, nombres y guions.',\n  alpha_num: 'El camp :attribute només pot contenir lletras y nombres.',\n  attributes: {},\n  between: 'El camp :attribute té que estar entre :min - :max.',\n  confirmed: 'La confirmació de :attribute no coincideix.',\n  different: 'El camp :attribute y :other poden ser diferents.',\n  digits: 'El camp :attribute pot tindre :digits dígitos.',\n  digits_between: 'El camp  :attribute ha de tenir entre :min i :max dígits.',\n  email: 'El camp :attribute no es un correu válido.',\n  'in': 'El camp :attribute es invàlid.',\n  integer: 'El camp :attribute pot ser un nombre enter.',\n  hex: 'El camp :attribute hauria de tenir format hexadecimal',\n  max: {\n    numeric: 'El camp :attribute no pot ser mayor a :max.',\n    string: 'El camp :attribute no pot ser mayor que :max caràcters.'\n  },\n  min: {\n    numeric: 'La mida del camp :attribute pot ser de al menys :min.',\n    string: 'El camp :attribute pot contenir al menys :min caràcters.'\n  },\n  not_in: 'El camp :attribute es invàlid.',\n  numeric: 'El camp :attribute pot ser numéric.',\n  present: 'El camp de :attribute pot estar present (però pot estar buit).',\n  regex: 'El format del camp :attribute es invàlid.',\n  required: 'El camp :attribute es obligatori.',\n  required_if: 'El camp :attribute es obligatori quan :other es :value.',\n  same: 'El camp :attribute y :other poden coincidir.',\n  size: {\n    numeric: 'La mida del camp :attribute pot ser :size.',\n    string: 'El camp :attribute pot contenir :size caràcters.'\n  },\n  url: 'El format de :attribute es invàlid.'\n};\n","module.exports = {\n  accepted: \":attribute musí být přijat.\",\n  active_url: \":attribute není platnou URL adresou.\",\n  after: \":attribute musí být datum po :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \":attribute může obsahovat pouze písmena.\",\n  alpha_dash:\n    \":attribute může obsahovat pouze písmena, číslice, pomlčky a podtržítka. České znaky (á, é, í, ó, ú, ů, ž, š, č, ř, ď, ť, ň) nejsou podporovány.\",\n  alpha_num: \":attribute může obsahovat pouze písmena a číslice.\",\n  attributes: {},\n  array: \":attribute musí být pole.\",\n  before: \":attribute musí být datum před :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \":attribute musí být hodnota mezi :min a :max.\",\n    file: \":attribute musí být větší než :min a menší než :max Kilobytů.\",\n    string: \":attribute musí být delší než :min a kratší než :max znaků.\",\n    array: \":attribute musí obsahovat nejméně :min a nesmí obsahovat více než :max prvků.\"\n  },\n  boolean: \":attribute musí být true nebo false\",\n  confirmed: \":attribute nebylo odsouhlaseno.\",\n  date: \":attribute musí být platné datum.\",\n  date_format: \":attribute není platný formát data podle :format.\",\n  different: \":attribute a :other se musí lišit.\",\n  digits: \":attribute musí být :digits pozic dlouhé.\",\n  digits_between: \":attribute musí být dlouhé nejméně :min a nejvíce :max pozic.\",\n  dimensions: \":attribute má neplatné rozměry.\",\n  distinct: \":attribute má duplicitní hodnotu.\",\n  email: \":attribute není platný formát.\",\n  exists: \"Zvolená hodnota pro :attribute není platná.\",\n  file: \":attribute musí být soubor.\",\n  filled: \":attribute musí být vyplněno.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute musí být obrázek.\",\n  in: \"Zvolená hodnota pro :attribute je neplatná.\",\n  in_array: \":attribute není obsažen v :other.\",\n  integer: \":attribute musí být celé číslo.\",\n  ip: \":attribute musí být platnou IP adresou.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \":attribute musí být platný JSON řetězec.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":attribute musí být nižší než :max.\",\n    file: \":attribute musí být menší než :max Kilobytů.\",\n    string: \":attribute musí být kratší než :max znaků.\",\n    array: \":attribute nesmí obsahovat více než :max prvků.\"\n  },\n  mimes: \":attribute musí být jeden z následujících datových typů :values.\",\n  mimetypes: \":attribute musí být jeden z následujících datových typů :values.\",\n  min: {\n    numeric: \":attribute musí být větší než :min.\",\n    file: \":attribute musí být větší než :min Kilobytů.\",\n    string: \":attribute musí být delší než :min znaků.\",\n    array: \":attribute musí obsahovat více než :min prvků.\"\n  },\n  not_in: \"Zvolená hodnota pro :attribute je neplatná.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":attribute musí být číslo.\",\n  present: \":attribute musí být vyplněno.\",\n  regex: \":attribute nemá správný formát.\",\n  required: \":attribute musí být vyplněno.\",\n  required_if: \":attribute musí být vyplněno pokud :other je :value.\",\n  required_unless: \":attribute musí být vyplněno dokud :other je v :value.\",\n  required_with: \":attribute musí být vyplněno pokud :field je vyplněno.\",\n  required_with_all: \":attribute musí být vyplněno pokud :fields je zvoleno.\",\n  required_without: \":attribute musí být vyplněno pokud :field není vyplněno.\",\n  required_without_all: \":attribute musí být vyplněno pokud není žádné z :fields zvoleno.\",\n  same: \":attribute a :other se musí shodovat.\",\n  size: {\n    numeric: \":attribute musí být přesně :size.\",\n    file: \":attribute musí mít přesně :size Kilobytů.\",\n    string: \":attribute musí být přesně :size znaků dlouhý.\",\n    array: \":attribute musí obsahovat právě :size prvků.\"\n  },\n  string: \":attribute musí být řetězec znaků.\",\n  timezone: \":attribute musí být platná časová zóna.\",\n  unique: \":attribute musí být unikátní.\",\n  uploaded: \"Nahrávání :attribute se nezdařilo.\",\n  url: \"Formát :attribute je neplatný.\"\n};\n","module.exports = {\n  accepted: \"Rhaid derbyn :attribute.\",\n  active_url: \"Nid yw :attribute yn URL dilys.\",\n  after: \"Rhaid i :attribute fod yn ddyddiad sydd ar ôl :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Dim ond llythrennau'n unig gall :attribute gynnwys.\",\n  alpha_dash: \"Dim ond llythrennau, rhifau a dash yn unig gall :attribute gynnwys.\",\n  alpha_num: \"Dim ond llythrennau a rhifau yn unig gall :attribute gynnwys.\",\n  attributes: {},\n  array: \"Rhaid i :attribute fod yn array.\",\n  before: \"Rhaid i :attribute fod yn ddyddiad sydd cyn :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Rhaid i :attribute fod rhwng :min a :max.\",\n    file: \"Rhaid i :attribute fod rhwng :min a :max kilobytes.\",\n    string: \"Rhaid i :attribute fod rhwng :min a :max nodyn.\",\n    array: \"Rhaid i :attribute fod rhwng :min a :max eitem.\"\n  },\n  boolean: \"Rhaid i'r maes :attribute fod yn wir neu gau.\",\n  confirmed: \"Nid yw'r cadarnhad :attribute yn gyfwerth.\",\n  date: \"Nid yw :attribute yn ddyddiad dilys.\",\n  date_format: \"Nid yw :attribute yn y fformat :format.\",\n  different: \"Rhaid i :attribute a :other fod yn wahanol.\",\n  digits: \"Rhaid i :attribute fod yn :digits digid.\",\n  digits_between: \"Rhaid i :attribute fod rhwng :min a :max digid.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \"Rhaid i :attribute fod yn gyfeiriad ebost dilys.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Rhaid cynnwys :attribute.\",\n  exists: \"Nid yw :attribute yn ddilys.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Rhaid i :attribute fod yn lun.\",\n  in: \"Nid yw :attribute yn ddilys.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \"Rhaid i :attribute fod yn integer.\",\n  ip: \"Rhaid i :attribute fod yn gyfeiriad IP dilys.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"The :attribute must be a valid JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Ni chai :attribute fod yn fwy na :max.\",\n    file: \"Ni chai :attribute fod yn fwy na :max kilobytes.\",\n    string: \"Ni chai :attribute fod yn fwy na :max nodyn.\",\n    array: \"Ni chai :attribute fod yn fwy na :max eitem.\"\n  },\n  mimes: \"Rhaid i :attribute fod yn ffeil o'r math: :values.\",\n  mimetypes: \"Rhaid i :attribute fod yn ffeil o'r math: :values.\",\n  min: {\n    numeric: \"Rhaid i :attribute fod o leiaf :min.\",\n    file: \"Rhaid i :attribute fod o leiaf :min kilobytes.\",\n    string: \"Rhaid i :attribute fod o leiaf :min nodyn.\",\n    array: \"Rhaid i :attribute fod o leiaf :min eitem.\"\n  },\n  not_in: \"Nid yw :attribute yn ddilys.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Rhaid i :attribute fod yn rif.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Nid yw fformat :attribute yn ddilys.\",\n  required: \"Rhaid cynnwys :attribute.\",\n  required_if: \"Rhaid cynnwys :attribute pan mae :other yn :value.\",\n  required_unless: \"The :attribute field is required unless :other is in :values.\",\n  required_with: \"Rhaid cynnwys :attribute pan mae :values yn bresennol.\",\n  required_with_all: \"Rhaid cynnwys :attribute pan mae :values yn bresennol.\",\n  required_without: \"Rhaid cynnwys :attribute pan nad oes :values yn bresennol.\",\n  required_without_all: \"Rhaid cynnwys :attribute pan nad oes :values yn bresennol.\",\n  same: \"Rhaid i :attribute a :other fod yn gyfwerth.\",\n  size: {\n    numeric: \"Rhaid i :attribute fod yn :size.\",\n    file: \"Rhaid i :attribute fod yn :size kilobytes.\",\n    string: \"Rhaid i :attribute fod yn :size nodyn.\",\n    array: \"Rhaid i :attribute fod yn :size eitem.\"\n  },\n  string: \"The :attribute must be a string.\",\n  timezone: \"Rhaid i :attribute fod yn timezone dilys.\",\n  unique: \"Mae :attribute eisoes yn bodoli.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Nid yw fformat :attribute yn ddilys.\"\n};\n","module.exports = {\n  accepted: ':attribute skal accepteres.',\n  after: ':attribute skal være en dato efter :after.',\n  after_or_equal: ':attribute skal være en dato efter eller lig med :after_or_equal.',\n  alpha: ':attribute må kun bestå af bogstaver.',\n  alpha_dash: ':attribute må kun bestå af bogstaver, tal og bindestreger.',\n  alpha_num: ':attribute må kun bestå af bogstaver og tal.',\n  before: ':attribute skal være en dato før :before.',\n  before_or_equal: ':attribute skal være en dato før eller lig med :before_or_equal.',\n  between: ':attribute skal være mellem :min og :max.',\n  confirmed: ':attribute er ikke det samme som bekræftelsesfeltet.',\n  email: ':attribute skal være en gyldig email.',\n  date: ':attribute er ikke en gyldig dato.',\n  def: ':attribute attributen har fejl.',\n  digits: ':attribute skal have :digits cifre.',\n  digits_between: ':attribute skal have mellem :min og :max cifre.',\n  different: ':attribute og :different skal være forskellige.',\n  in: 'Det valgte :attribute er ugyldigt.',\n  integer: ':attribute skal være et heltal.',\n  hex: ':attribute skal have hexadecimalt format',\n  min: {\n    numeric: ':attribute skal være mindst :min.',\n    string: ':attribute skal være mindst :min tegn.'\n  },\n  max: {\n    numeric: ':attribute skal være højest :max.',\n    string: ':attribute skal være højest :max tegn.'\n  },\n  not_in: 'Den valgte :attribute er ugyldig',\n  numeric: ':attribute skal være et tal.',\n  present: ':attribute skal være tilstede.',\n  required: ':attribute skal udfyldes.',\n  required_if: ':attribute skal udfyldes når :other er :value.',\n  required_unless: ':attribute er påkrævet medmindre :other findes i :values.',\n  required_with: ':attribute skal udfyldes når :field er udfyldt.',\n  required_with_all: ':attribute skal udfyldes når :fields er udfyldt.',\n  required_without: ':attribute skal udfyldes når :field ikke er udfyldt.',\n  required_without_all: ':attribute skal udfyldes når ingen af :fields er udfyldt.',\n  same: ':attribute og :same skal være ens.',\n  size: {\n    numeric: ':attribute skal være :size.',\n    string: ':attribute skal være :size tegn lang.'\n  },\n  string: ':attribute skal være en streng.',\n  url: ':attribute formatet er ugyldigt.',\n  regex: ':attribute formatet er ugyldigt.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Das :attribute Feld muss akzeptiert werden.',\n  after: 'Das :attribute muss ein Datum nach dem :after sein.',\n  after_or_equal: 'Das :attribute Datum muss kleiner oder gleich dem :after_or_equal sein.',\n  alpha: 'Das :attribute Feld darf nur aus Buchstaben bestehen.',\n  alpha_dash: 'Das :attribute Feld darf nur aus Buchstaben, Zahlen, Binde- und Unterstrichen bestehen.',\n  alpha_num: 'Das :attribute Feld darf nur aus Buchstaben und Zahlen bestehen.',\n  before: 'Das :attribute muss ein Datum vor dem :before sein.',\n  before_or_equal: 'Das :attribute Datum muss größer oder gleich dem :before_or_equal sein.',\n  between: 'Das :attribute Feld muss zwischen :min und :max liegen.',\n  confirmed: 'Das :attribute Feld stimmt nicht mit der Bestätigung überein.',\n  email: 'Das :attribute Format ist ungültig.',\n  date: 'Das :attribute Feld muss ein gültiges Datum sein.',\n  def: 'Das :attribute Feld hat Fehler.',\n  digits: 'Das :attribute Feld muss :digits Stellen haben.',\n  digits_between: 'Das :attribute Feld muss zwischen :min und :max Stellen haben.',\n  different: 'Die Felder :attribute und :different müssen sich unterscheiden.',\n  in: 'Der gewählte Wert für :attribute ist ungültig.',\n  integer: 'Das :attribute Feld muss eine ganze Zahl sein.',\n  hex: 'Das :attribute Feld sollte hexadezimal sein',\n  min: {\n    numeric: 'Das :attribute Feld muss mindestens :min sein.',\n    string: 'Das :attribute Feld muss mindestens :min Zeichen lang sein.'\n  },\n  max: {\n    numeric: 'Das :attribute Feld darf maximal :max sein.',\n    string: 'Das :attribute Feld darf maximal :max Zeichen haben.'\n  },\n  not_in: 'Der gewählte Wert für :attribute ist ungültig.',\n  numeric: 'Das :attribute Feld muss eine Zahl sein.',\n  present: 'Das Feld :attribute muss vorhanden sein (kann aber leer sein).',\n  required: 'Das :attribute Feld muss ausgefüllt sein.',\n  required_if: 'Das :attribute Feld muss ausgefüllt sein, wenn :other :value ist.',\n  same: 'Die Felder :attribute und :same müssen übereinstimmen.',\n  size: {\n    numeric: 'Das :attribute Feld muss gleich :size sein.',\n    string: 'Das :attribute Feld muss :size Zeichen lang sein.'\n  },\n  string: 'Das :attribute Feld muss ein Satz sein.',\n  url: 'Das Format von :attribute ist ungültig.',\n  regex: 'Das :attribute Format ist ungültig.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Το πεδίο :attribute πρέπει να γίνει αποδεκτό.',\n  after: 'Το πεδίο :attribute πρέπει να είναι μία ημερομηνία μετά από :after.',\n  alpha: 'Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα.',\n  alpha_dash: 'Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα, αριθμούς, και παύλες.',\n  alpha_num: 'Το πεδίο :attribute μπορεί να περιέχει μόνο γράμματα και αριθμούς.',\n  between: 'Το πεδίο :attribute πρέπει να είναι μεταξύ :min και :max.',\n  confirmed: 'Η επιβεβαίωση του :attribute δεν ταιριάζει.',\n  email: 'Το πεδίο :attribute πρέπει να είναι μία έγκυρη διεύθυνση email.',\n  date: 'Το πεδίο :attribute δεν είναι έγκυρη ημερομηνία.',\n  def: 'Το πεδίο :attribute περιέχει σφάλματα.',\n  digits: 'Το πεδίο :attribute πρέπει να είναι :digits ψηφία.',\n  digits_between: 'Το πεδίο :attribute πρέπει να είναι μεταξύ :min και :max ψηφία.',\n  different: 'Το πεδίο :attribute  και :different πρέπει να είναι διαφορετικά.',\n  in: 'Το επιλεγμένο :attribute δεν είναι έγκυρο.',\n  integer: 'Το πεδίο :attribute πρέπει να είναι ακέραιος.',\n  hex: 'Το πεδίο :attribute πρέπει να είναι σε δεκαεξαδική μορφή.',\n  min: {\n    numeric: 'Το πεδίο :attribute πρέπει να είναι τουλάχιστον :min.',\n    string: 'Το πεδίο :attribute πρέπει να έχει τουλάχιστον :min χαρακτήρες.'\n  },\n  max: {\n    numeric: 'Το πεδίο :attribute δεν μπορεί να είναι μεγαλύτερο από :max.',\n    string: 'Το πεδίο :attribute δεν μπορεί να έχει περισσότερους από :max χαρακτήρες.'\n  },\n  not_in: 'Το επιλεγμένο :attribute δεν είναι αποδεκτό.',\n  numeric: 'Το πεδίο :attribute πρέπει να είναι αριθμός.',\n  present: 'The :attribute field must be present (but can be empty).',\n  required: 'Το πεδίο :attribute είναι απαραίτητο.',\n  required_if: 'Το πεδίο :attribute είναι απαραίτητο όταν το πεδίο :other είναι :value.',\n  same: 'Τα πεδία :attribute και :same πρέπει να είναι ίδια.',\n  size: {\n    numeric: 'Το πεδίο :attribute πρέπει να είναι :size.',\n    string: 'Το πεδίο :attribute πρέπει να είναι :size χαρακτήρες.'\n  },\n  string: 'Το πεδίο :attribute πρέπει να είναι αλφαριθμητικό.',\n  url: 'Το πεδίο :attribute δεν είναι έγκυρη διεύθυνση URL.',\n  regex: 'Η μορφή του :attribute δεν είναι αποδεκτή.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'The :attribute must be accepted.',\n  after: 'The :attribute must be after :after.',\n  after_or_equal: 'The :attribute must be equal or after :after_or_equal.',\n  alpha: 'The :attribute field must contain only alphabetic characters.',\n  alpha_dash: 'The :attribute field may only contain alpha-numeric characters, as well as dashes and underscores.',\n  alpha_num: 'The :attribute field must be alphanumeric.',\n  before: 'The :attribute must be before :before.',\n  before_or_equal: 'The :attribute must be equal or before :before_or_equal.',\n  between: {\n    numeric: 'The :attribute field must be between :min and :max.',\n    string: 'The :attribute field must be between :min and :max characters.',\n  },\n  confirmed: 'The :attribute confirmation does not match.',\n  email: 'The :attribute format is invalid.',\n  date: 'The :attribute is not a valid date format.',\n  def: 'The :attribute attribute has errors.',\n  digits: 'The :attribute must be :digits digits.',\n  digits_between: 'The :attribute field must be between :min and :max digits.',\n  different: 'The :attribute and :different must be different.',\n  in: 'The selected :attribute is invalid.',\n  integer: 'The :attribute must be an integer.',\n  hex: 'The :attribute field should have hexadecimal format',\n  min: {\n    numeric: 'The :attribute must be at least :min.',\n    string: 'The :attribute must be at least :min characters.'\n  },\n  max: {\n    numeric: 'The :attribute may not be greater than :max.',\n    string: 'The :attribute may not be greater than :max characters.'\n  },\n  not_in: 'The selected :attribute is invalid.',\n  numeric: 'The :attribute must be a number.',\n  present: 'The :attribute field must be present (but can be empty).',\n  required: 'The :attribute field is required.',\n  required_if: 'The :attribute field is required when :other is :value.',\n  required_unless: 'The :attribute field is required when :other is not :value.',\n  required_with: 'The :attribute field is required when :field is not empty.',\n  required_with_all: 'The :attribute field is required when :fields are not empty.',\n  required_without: 'The :attribute field is required when :field is empty.',\n  required_without_all: 'The :attribute field is required when :fields are empty.',\n  same: 'The :attribute and :same fields must match.',\n  size: {\n    numeric: 'The :attribute must be :size.',\n    string: 'The :attribute must be :size characters.'\n  },\n  string: 'The :attribute must be a string.',\n  url: 'The :attribute format is invalid.',\n  regex: 'The :attribute format is invalid.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'El campo :attribute debe ser aceptado.',\n  after: 'El campo :attribute debe ser una fecha posterior a :after.',\n  alpha: 'El campo :attribute solo debe contener letras.',\n  alpha_dash: 'El campo :attribute solo debe contener letras, números y guiones.',\n  alpha_num: 'El campo :attribute solo debe contener letras y números.',\n  attributes: {},\n  between: 'El campo :attribute tiene que estar entre :min - :max.',\n  confirmed: 'La confirmación de :attribute no coincide.',\n  different: 'El campo :attribute y :other deben ser diferentes.',\n  digits: 'El campo :attribute debe tener :digits dígitos.',\n  digits_between: 'El campo :attribute debe tener entre :min y :max dígitos.',\n  email: 'El campo :attribute no es un correo válido.',\n  in: 'El campo :attribute es inválido.',\n  integer: 'El campo :attribute debe ser un número entero.',\n  hex: 'El campo :attribute debe tener formato hexadecimal.',\n  max: {\n    numeric: 'El campo :attribute no debe ser mayor a :max.',\n    string: 'El campo :attribute no debe ser mayor que :max caracteres.'\n  },\n  min: {\n    numeric: 'El tamaño del campo :attribute debe ser de al menos :min.',\n    string: 'El campo :attribute debe contener al menos :min caracteres.'\n  },\n  not_in: 'El campo :attribute es inválido.',\n  numeric: 'El campo :attribute debe ser numérico.',\n  present: 'El campo de :attribute debe estar presente (pero puede estar vacío).',\n  regex: 'El formato del campo :attribute es inválido.',\n  required: 'El campo :attribute es obligatorio.',\n  required_if: 'El campo :attribute es obligatorio cuando :other es :value.',\n  same: 'El campo :attribute y :other deben coincidir.',\n  size: {\n    numeric: 'El tamaño del campo :attribute debe ser :size.',\n    string: 'El campo :attribute debe contener :size caracteres.'\n  },\n  url: 'El formato de :attribute es inválido.'\n};\n","module.exports = {\n  accepted: \":attribute tuleb aktsepteerida.\",\n  active_url: \":attribute ei ole kehtiv URL.\",\n  after: \":attribute peab olema kuupäev pärast :date.\",\n  after_or_equal: \":attribute peab olema kuupäev pärast või samastuma :date.\",\n  alpha: \":attribute võib sisaldada vaid tähemärke.\",\n  alpha_dash: \":attribute võib sisaldada vaid tähti, numbreid ja kriipse.\",\n  alpha_num: \":attribute võib sisaldada vaid tähti ja numbreid.\",\n  attributes: {},\n  array: \":attribute peab olema massiiv.\",\n  before: \":attribute peab olema kuupäev enne :date.\",\n  before_or_equal: \":attribute peab olema kuupäev enne või samastuma :date.\",\n  between: {\n    numeric: \":attribute peab olema :min ja :max vahel.\",\n    file: \":attribute peab olema :min ja :max kilobaidi vahel.\",\n    string: \":attribute peab olema :min ja :max tähemärgi vahel.\",\n    array: \":attribute peab olema :min ja :max kirje vahel.\"\n  },\n  boolean: \":attribute väli peab olema tõene või väär.\",\n  confirmed: \":attribute kinnitus ei vasta.\",\n  date: \":attribute pole kehtiv kuupäev.\",\n  date_format: \":attribute ei vasta formaadile :format.\",\n  different: \":attribute ja :other peavad olema erinevad.\",\n  digits: \":attribute peab olema :digits numbrit.\",\n  digits_between: \":attribute peab olema :min ja :max numbri vahel.\",\n  dimensions: \":attribute on valed pildi suurused.\",\n  distinct: \":attribute väljal on topeltväärtus.\",\n  email: \":attribute peab olema kehtiv e-posti aadress.\",\n  exists: \"Valitud :attribute on vigane.\",\n  file: \":attribute peab olema fail.\",\n  filled: \":attribute väli on nõutav.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute peab olema pilt.\",\n  in: \"Valitud :attribute on vigane.\",\n  in_array: \":attribute väli ei eksisteeri :other sees.\",\n  integer: \":attribute peab olema täisarv.\",\n  ip: \":attribute peab olema kehtiv IP aadress.\",\n  ipv4: \":attribute peab olema kehtiv IPv4 aadress.\",\n  ipv6: \":attribute peab olema kehtiv IPv6 aadress.\",\n  json: \":attribute peab olema kehtiv JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":attribute ei tohi olla suurem kui :max.\",\n    file: \":attribute ei tohi olla suurem kui :max kilobaiti.\",\n    string: \":attribute ei tohi olla suurem kui :max tähemärki.\",\n    array: \":attribute ei tohi sisaldada rohkem kui :max kirjet.\"\n  },\n  mimes: \":attribute peab olema :values tüüpi.\",\n  mimetypes: \":attribute peab olema :values tüüpi.\",\n  min: {\n    numeric: \":attribute peab olema vähemalt :min.\",\n    file: \":attribute peab olema vähemalt :min kilobaiti.\",\n    string: \":attribute peab olema vähemalt :min tähemärki.\",\n    array: \":attribute peab olema vähemalt :min kirjet.\"\n  },\n  not_in: \"Valitud :attribute on vigane.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":attribute peab olema number.\",\n  present: \":attribute väli peab olema esindatud.\",\n  regex: \":attribute vorming on vigane.\",\n  required: \":attribute väli on nõutud.\",\n  required_if: \":attribute väli on nõutud, kui :other on :value.\",\n  required_unless: \":attribute väli on nõutud, välja arvatud, kui :other on :values.\",\n  required_with: \":attribute väli on nõutud, kui :values on esindatud.\",\n  required_with_all: \":attribute väli on nõutud, kui :values on esindatud.\",\n  required_without: \":attribute väli on nõutud, kui :values ei ole esindatud.\",\n  required_without_all: \":attribute väli on nõutud, kui ükski :values pole esindatud.\",\n  same: \":attribute ja :other peavad sobima.\",\n  size: {\n    numeric: \":attribute peab olema :size.\",\n    file: \":attribute peab olema :size kilobaiti.\",\n    string: \":attribute peab olema :size tähemärki.\",\n    array: \":attribute peab sisaldama :size kirjet.\"\n  },\n  string: \":attribute peab olema string.\",\n  timezone: \":attribute peab olema kehtiv tsoon.\",\n  unique: \":attribute on juba hõivatud.\",\n  uploaded: \":attribute ei õnnestunud laadida.\",\n  url: \":attribute vorming on vigane.\"\n};\n","module.exports = {\n  accepted: \":attribute onartua izan behar da.\",\n  active_url: \":attribute ez da baliozko URL bat.\",\n  after: \":attribute :date osteko data izan behar da.\",\n  after_or_equal: \":attribute :date osteko data edo data berdina izan behar da.\",\n  alpha: \":attribute hizkiak besterik ezin ditu izan.\",\n  alpha_dash: \":attribute hizkiak, zenbakiak eta marrak besterik ezin ditu izan.\",\n  alpha_num: \":attribute hizkiak eta zenbakiak besterik ezin ditu izan.\",\n  attributes: {},\n  array: \":attribute bilduma izan behar da.\",\n  before: \":attribute :date aurreko data izan behar da.\",\n  before_or_equal: \":attribute :date aurreko data edo data berdina izan behar da.\",\n  between: {\n    numeric: \":attribute :min eta :max artean egon behar da.\",\n    file: \":attribute-k :min eta :max kilobyte arteko pisua izan behar du.\",\n    string: \":attribute :min eta :max karaktere artean egon behar da.\",\n    array: \":attribute-k :min eta :max arteko ale kantitatea euki behar du.\"\n  },\n  boolean: \":attribute-ren balioa egia edo gezurra izan behar da.\",\n  confirmed: \":attribute-ren konfirmazioa ez dator bat.\",\n  date: \":attribute ez da baliozko data.\",\n  date_format: \":attribute datak ez du :format formatua.\",\n  different: \":attribute eta :other ezberdinak izan behar dira.\",\n  digits: \":attribute-k :digits digitu euki behar ditu.\",\n  digits_between: \":attribute-k :min eta :max arteko digitu kantitatea euki behar du.\",\n  dimensions: \":attribute-k ez ditu irudi neurri aproposak.\",\n  distinct: \":attribute-k balio bikoiztua dauka.\",\n  email: \":attribute-k baliozko posta helbidea euki behar du.\",\n  exists: \"Hautatutako :attribute baliogabea da.\",\n  file: \":attribute fitxategi bat izan behar da.\",\n  filled: \":attribute-k balioren bat euki behar du.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute irudi bat izan behar da.\",\n  in: \"Hautatutako :attribute baliogabea da.\",\n  in_array: \":attribute ez da :other-en existizen.\",\n  integer: \":attribute zenbaki osoa izan behar da.\",\n  ip: \":attribute baliozko IP helbidea izan behar da.\",\n  ipv4: \":attribute baliozko IPv4 helbidea izan behar da.\",\n  ipv6: \":attribute baliozko IPv6 helbidea izan behar da.\",\n  json: \":attribute-k baliozko JSON karaktere-katea euki behar du.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":attribute ezin da :max baino handiagoa izan.\",\n    file: \":attribute-k ezin du :max kilobyte baino gehiagoko pisua euki.\",\n    string: \":attribute-k ezin du :max karaktere baino gehiago euki.\",\n    array: \":attribute-k ezin du :max ale baino gehiago euki.\"\n  },\n  mimes: \":attribute :values motatako fitxategia izan behar da.\",\n  mimetypes: \":attribute :values motatako fitxategia izan behar da.\",\n  min: {\n    numeric: \":attribute-k gutxienez :min-eko tamaina izan behar du.\",\n    file: \":attribute-k gutxienez :min kilobyteko pisua euki behar du.\",\n    string: \":attribute-k gutxienez :min karaktere euki behar ditu.\",\n    array: \":attribute-k gutxienez :min ale euki behar ditu.\"\n  },\n  not_in: \"Hautatutako :attribute baliogabea da.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":attribute zenbaki bat izan behar da.\",\n  present: \":attribute bertan egon behar da.\",\n  regex: \":attribute-k ez dauka formatu egokirik.\",\n  required: \":attribute derrigorrezkoa da.\",\n  required_if: \":attribute derrigorrezkoa da :other :value denean.\",\n  required_unless: \":attribute derrigorrezkoa da :other :values-en egon ezean.\",\n  required_with: \":attribute derrigorrezkoa da :values bertan dagoenean.\",\n  required_with_all: \":attribute derrigorrezkoa da :values bertan dagoenean.\",\n  required_without: \":attribute derrigorrezkoa da :values bertan ez dagoenean.\",\n  required_without_all: \":attribute derrigorrezkoa da :values bertan ez dagoenean.\",\n  same: \":attribute eta :other bat etorri behar dira.\",\n  size: {\n    numeric: \":attribute-k :size-eko tamaina izan behar du.\",\n    file: \":attribute-k :size kilobyteko pisua euki behar du.\",\n    string: \":attribute-k :size karaktere euki beha ditu.\",\n    array: \":attribute-k :size ale euki behar ditu.\"\n  },\n  string: \":attribute karaktere-katea izan behar da.\",\n  timezone: \":attribute baliozko gunea izan behar da.\",\n  unique: \":attribute jadanik erregistratua izan da.\",\n  uploaded: \":attribute igotzerakoan huts egin du.\",\n  url: \":attribute-k ez dauka formatu egokirik.\"\n};\n","module.exports = {\n  accepted: 'فیلد :attribute می بایست تایید شود',\n  alpha: 'فیلد :attribute می بایست فقط شامل حروف انگلیسی باشد',\n  alpha_dash: 'فیلد :attribute می بایست فقط شامل حروف انگلیسی و خط تیره و زیرخط باشد',\n  alpha_num: 'فیلد :attribute می بایست فقط شامل حروف و اعداد باشد',\n  between: 'فیلد :attribute می بایست بزرگتر از :min و کوچکتر از :max باشد',\n  confirmed: 'تطبیق فیلد :attribute صحیح نمی باشد',\n  email: 'فرمت ایمیل وارد شده در :attribute صحیح نمی‌باشد',\n  date: 'تاریخ درج شده در فیلد :attribute صحیح نیست',\n  def: 'فیلد :attribute اشکال دارد',\n  digits: 'فیلد :attribute می بایست شامل :digits رقم باشد',\n  digits_between: ':attribute باید بین :min و :max رقم باشد.',\n  different: 'فیلد :attribute می بایست مقداری غیر از :different داشته باشد',\n  in: 'فیلد :attribute انتخاب شده صحیح نمی باشد',\n  integer: 'فیلد :attribute می بایست عددی باشد',\n  hex: 'فیلد :attribute باید در فرمت مبنای ۱۶ باشد',\n  min: {\n    numeric: 'فیلد :attribute می بایست از :min بزرگتر باشد',\n    string: 'فیلد :attribute بایستی حداقل :min کاراکتر طول داشته باشد'\n  },\n  max: {\n    numeric: 'فیلد :attribute می بایست از :max کوچکتر باشد',\n    string: 'فیلد :attribute نباید بیشتر از :max کاراکتر طول داشته باشد'\n  },\n  not_in: 'فیلد :attribute انتخاب شده صحیح نمی باشد',\n  numeric: 'فیلد :attribute می بایست عددی باشد',\n  present: 'The :attribute field must be present (but can be empty).',\n  required: 'فیلد :attribute الزامی است',\n  required_if: 'در صورت دادن :value به :other تکمیل فیلد :attribute الزامی است',\n  same: 'فیلد :attribute می بایست با فیلد :same یکی باشد',\n  size: {\n    numeric: 'فیلد :attribute می بایست :size باشد',\n    string: 'فیلد :attribute می بایست :size کاراکتر طول داشته باشد'\n  },\n  string: 'فیلد :attribute می بایست متنی باشد',\n  url: 'آدرس فیلد :attribute صحیح نمی باشد',\n  regex: 'فرمت آدرس :attribute صحیح نمی باشد',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attribute on oltava hyväksytty.',\n  after: ':attribute on oltava :after jälkeen.',\n  after_or_equal: ':attribute täytyy olla sama kuin :after_or_equal tai sen jälkeen.',\n  alpha: ':attribute kenttä saa sisältää ainoastaan kirjaimia.',\n  alpha_dash: ':attribute kenttä saa sisältää ainoastaan kirjaimia tai numeroita, sekä pisteitä ja alaviivoja.',\n  alpha_num: ':attribute kenttä saa sisältää ainoastaan kirjaimia tai numeroita.',\n  before: ':attribute on oltava ennen kuin :before.',\n  before_or_equal: ':attribute on oltava sama tai ennen kuin :before_or_equal.',\n  between: ':attribute on oltava :min ja :max väliltä.',\n  confirmed: ':attribute vahvistus ei täsmää.',\n  email: ':attribute on väärässä muodossa.',\n  date: ':attribute ei ole päivämäärä.',\n  def: ':attribute sisältää virheitä.',\n  digits: ':attribute on oltava :digits numeroa pitkä.',\n  digits_between: 'Kentän :attribute arvon tulee olla :min - :max numeroa.',\n  different: ':attribute ei saa olla yhtä kuin :different.',\n  in: 'Valittu :attribute ei kelpaa.',\n  integer: ':attribute ei ole numero.',\n  hex: ':attribute on oltava heksadesimaali.',\n  min: {\n    numeric: ':attribute on oltava vähintään :min.',\n    string: ':attribute on oltava vähintään :min merkkiä pitkä.'\n  },\n  max: {\n    numeric: ':attribute on oltava enintään :max.',\n    string: ':attribute on oltava enintään :max merkkiä pitkä.'\n  },\n  not_in: 'Valittu :attribute ei kelpaa.',\n  numeric: ':attribute on oltava numero.',\n  present: ':attribute kenttä on oltava (mutta saa olla tyhjä).',\n  required: ':attribute kenttä on pakollinen.',\n  required_if: ':attribute kenttä on pakollinen, jos kenttä :other on :value.',\n  required_unless: ':attribute kenttä on pakollinen, jos kenttä :other ei ole :value.',\n  required_with: ':attribute kenttä on pakollinen, jos kenttä :field ei ole tyhjä.',\n  required_with_all: ':attribute kenttä on pakollinen, jos kentät :fields eivät ole tyhjiä.',\n  required_without: ':attribute kenttä on pakollinen, jos kenttä :field on tyhjä.',\n  required_without_all: ':attribute kenttä on pakollinen, jos kentät :fields ovat tyhjiä.',\n  same: ':attribute ja :same on oltava samat.',\n  size: {\n    numeric: ':attribute on oltava :size.',\n    string: ':attribute on oltava :size merkkiä pitkä.'\n  },\n  string: ':attribute on oltava merkkijono.',\n  url: ':attribute on väärässä muodossa.',\n  regex: ':attribute on väärässä muodossa.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Le champ :attribute doit être accepté.',\n  alpha: 'Le champ :attribute ne peut contenir que des caractères alphabétiques.',\n  alpha_dash: 'Le champ :attribute ne peut contenir que des caractères alphanumériques, des tirets et des underscores.',\n  alpha_num: 'Le champ :attribute ne peut contenir que des caractères alphanumériques.',\n  between: 'La longueur du champ :attribute doit être comprise entre :min and :max.',\n  confirmed: 'Le champ :attribute n\\'est pas confirmé.',\n  email: 'Le champ :attribute contient un format invalide.',\n  def: 'Le champ :attribute contient un attribut erroné.',\n  digits: 'Le champ :attribute doit être composé de :digits chiffres.',\n  digits_between: 'Le champ :attribute doit contenir entre :min et :max chiffres.',\n  different: 'Les champs :attribute et :different doivent être différents.',\n  in: 'Le champ :attribute est invalide.',\n  integer: 'Le champ :attribute doit être un entier.',\n  hex: 'Le champ :attribute doit être au format hexadécimal.',\n  min: {\n    numeric: 'Le champ :attribute doit être supérieur à :min.',\n    string: 'Le champ :attribute doit contenir plus de :min caractères.'\n  },\n  max: {\n    numeric: 'Le champ :attribute doit être inférieur à :max.',\n    string: 'Le champ :attribute doit contenir moins de :max caractères.'\n  },\n  not_in: 'Le champ :attribute est invalide.',\n  numeric: 'Le champ :attribute doit être un chiffre.',\n  present: 'Le champ :attribute doit être présent (mais peut être vide).',\n  required: 'Le champ :attribute est requis.',\n  required_if: 'Le champ :attribute est requis quand :other est :value.',\n  same: 'Les champs :attribute et :same doivent correspondre.',\n  size: {\n    numeric: 'Le champ :attribute doit être égal à :size.',\n    string: 'Le champ :attribute doit contenir :size caractères.'\n  },\n  url: 'Le format du champ :attribute est invalide.',\n  regex: 'Le format du champ :attribute est invalide.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: \"Polje :attribute mora biti prihvaćeno.\",\n  active_url: \"Polje :attribute nije ispravan URL.\",\n  after: \"Polje :attribute mora biti datum nakon :date.\",\n  after_or_equal: \"Polje :attribute mora biti datum veći ili jednak :date.\",\n  alpha: \"Polje :attribute smije sadržavati samo slova.\",\n  alpha_dash: \"Polje :attribute smije sadržavati samo slova, brojeve i crtice.\",\n  alpha_num: \"Polje :attribute smije sadržavati samo slova i brojeve.\",\n  attributes: {},\n  array: \"Polje :attribute mora biti niz.\",\n  before: \"Polje :attribute mora biti datum prije :date.\",\n  before_or_equal: \"Polje :attribute mora biti datum manji ili jednak :date.\",\n  between: {\n    numeric: \"Polje :attribute mora biti između :min - :max.\",\n    file: \"Polje :attribute mora biti između :min - :max kilobajta.\",\n    string: \"Polje :attribute mora biti između :min - :max znakova.\",\n    array: \"Polje :attribute mora imati između :min - :max stavki.\"\n  },\n  boolean: \"Polje :attribute mora biti false ili true.\",\n  confirmed: \"Potvrda polja :attribute se ne podudara.\",\n  date: \"Polje :attribute nije ispravan datum.\",\n  date_format: \"Polje :attribute ne podudara s formatom :format.\",\n  different: \"Polja :attribute i :other moraju biti različita.\",\n  digits: \"Polje :attribute mora sadržavati :digits znamenki.\",\n  digits_between: \"Polje :attribute mora imati između :min i :max znamenki.\",\n  dimensions: \"Polje :attribute ima neispravne dimenzije slike.\",\n  distinct: \"Polje :attribute ima dupliciranu vrijednost.\",\n  email: \"Polje :attribute mora biti ispravna e-mail adresa.\",\n  exists: \"Odabrano polje :attribute nije ispravno.\",\n  file: \"Polje :attribute mora biti datoteka.\",\n  filled: \"Polje :attribute je obavezno.\",\n  gt: {\n    numeric: \"Polje :attribute mora biti veće od :value.\",\n    file: \"Polje :attribute mora biti veće od :value kilobajta.\",\n    string: \"Polje :attribute mora biti veće od :value karaktera.\",\n    array: \"Polje :attribute mora biti veće od :value stavki.\"\n  },\n  gte: {\n    numeric: \"Polje :attribute mora biti veće ili jednako :value.\",\n    file: \"Polje :attribute mora biti veće ili jednako :value kilobajta.\",\n    string: \"Polje :attribute mora biti veće ili jednako :value znakova.\",\n    array: \"Polje :attribute mora imati :value stavki ili više.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Polje :attribute mora biti slika.\",\n  in: \"Odabrano polje :attribute nije ispravno.\",\n  in_array: \"Polje :attribute ne postoji u :other.\",\n  integer: \"Polje :attribute mora biti broj.\",\n  ip: \"Polje :attribute mora biti ispravna IP adresa.\",\n  ipv4: \"Polje :attribute mora biti ispravna IPv4 adresa.\",\n  ipv6: \"Polje :attribute mora biti ispravna IPv6 adresa.\",\n  json: \"Polje :attribute mora biti ispravan JSON string.\",\n  lt: {\n    numeric: \"Polje :attribute mora biti manje od :value.\",\n    file: \"Polje :attribute mora biti manje od :value kilobajta.\",\n    string: \"Polje :attribute mora biti manje od :value znakova.\",\n    array: \"Polje :attribute mora biti manje od :value stavki.\"\n  },\n  lte: {\n    numeric: \"Polje :attribute mora biti manje ili jednako :value.\",\n    file: \"Polje :attribute mora biti manje ili jednako :value kilobajta.\",\n    string: \"Polje :attribute mora biti manje ili jednako :value znakova.\",\n    array: \"Polje :attribute ne smije imati više od :value stavki.\"\n  },\n  max: {\n    numeric: \"Polje :attribute mora biti manje od :max.\",\n    file: \"Polje :attribute mora biti manje od :max kilobajta.\",\n    string: \"Polje :attribute mora sadržavati manje od :max znakova.\",\n    array: \"Polje :attribute ne smije imati više od :max stavki.\"\n  },\n  mimes: \"Polje :attribute mora biti datoteka tipa: :values.\",\n  mimetypes: \"Polje :attribute mora biti datoteka tipa: :values.\",\n  min: {\n    numeric: \"Polje :attribute mora biti najmanje :min.\",\n    file: \"Polje :attribute mora biti najmanje :min kilobajta.\",\n    string: \"Polje :attribute mora sadržavati najmanje :min znakova.\",\n    array: \"Polje :attribute mora sadržavati najmanje :min stavki.\"\n  },\n  not_in: \"Odabrano polje :attribute nije ispravno.\",\n  not_regex: \"Format polja :attribute je neispravan.\",\n  numeric: \"Polje :attribute mora biti broj.\",\n  present: \"Polje :attribute mora biti prisutno.\",\n  regex: \"Polje :attribute se ne podudara s formatom.\",\n  required: \"Polje :attribute je obavezno.\",\n  required_if: \"Polje :attribute je obavezno kada polje :other sadrži :value.\",\n  required_unless: \"Polje :attribute je obavezno osim :other je u :values.\",\n  required_with: \"Polje :attribute je obavezno kada postoji polje :values.\",\n  required_with_all: \"Polje :attribute je obavezno kada postje polja :values.\",\n  required_without: \"Polje :attribute je obavezno kada ne postoji polje :values.\",\n  required_without_all: \"Polje :attribute je obavezno kada nijedno od polja :values ne postoji.\",\n  same: \"Polja :attribute i :other se moraju podudarati.\",\n  size: {\n    numeric: \"Polje :attribute mora biti :size.\",\n    file: \"Polje :attribute mora biti :size kilobajta.\",\n    string: \"Polje :attribute mora biti :size znakova.\",\n    array: \"Polje :attribute mora sadržavati :size stavki.\"\n  },\n  string: \"Polje :attribute mora biti string.\",\n  timezone: \"Polje :attribute mora biti ispravna vremenska zona.\",\n  unique: \"Polje :attribute već postoji.\",\n  uploaded: \"Polje :attribute nije uspešno učitano.\",\n  url: \"Polje :attribute nije ispravnog formata.\"\n};\n","module.exports = {\n  accepted: \"A(z) :attribute el kell legyen fogadva!\",\n  active_url: \"A(z) :attribute nem érvényes url!\",\n  after: \"A(z) :attribute :date utáni dátum kell, hogy legyen!\",\n  after_or_equal: \"A(z) :attribute nem lehet korábbi dátum, mint :date!\",\n  alpha: \"A(z) :attribute kizárólag betűket tartalmazhat!\",\n  alpha_dash: \"A(z) :attribute kizárólag betűket, számokat és kötőjeleket tartalmazhat!\",\n  alpha_num: \"A(z) :attribute kizárólag betűket és számokat tartalmazhat!\",\n  attributes: {},\n  array: \"A(z) :attribute egy tömb kell, hogy legyen!\",\n  before: \"A(z) :attribute :date előtti dátum kell, hogy legyen!\",\n  before_or_equal: \"A(z) :attribute nem lehet későbbi dátum, mint :date!\",\n  between: {\n    numeric: \"A(z) :attribute :min és :max közötti szám kell, hogy legyen!\",\n    file: \"A(z) :attribute mérete :min és :max kilobájt között kell, hogy legyen!\",\n    string: \"A(z) :attribute hossza :min és :max karakter között kell, hogy legyen!\",\n    array: \"A(z) :attribute :min - :max közötti elemet kell, hogy tartalmazzon!\"\n  },\n  boolean: \"A(z) :attribute mező csak true vagy false értéket kaphat!\",\n  confirmed: \"A(z) :attribute nem egyezik a megerősítéssel.\",\n  date: \"A(z) :attribute nem érvényes dátum.\",\n  date_format: \"A(z) :attribute nem egyezik az alábbi dátum formátummal :format!\",\n  different: \"A(z) :attribute és :other értékei különbözőek kell, hogy legyenek!\",\n  digits: \"A(z) :attribute :digits számjegyű kell, hogy legyen!\",\n  digits_between: \"A(z) :attribute értéke :min és :max közötti számjegy lehet!\",\n  dimensions: \"A(z) :attribute felbontása nem megfelelő.\",\n  distinct: \"A(z) :attribute értékének egyedinek kell lennie!\",\n  email: \"A(z) :attribute nem érvényes email formátum.\",\n  exists: \"A(z) :attribute már létezik.\",\n  file: \"A(z) :attribute fájl kell, hogy legyen!\",\n  filled: \"A(z) :attribute megadása kötelező!\",\n  gt: {\n    numeric: \"A(z) :attribute nagyobb kell, hogy legyen, mint :value!\",\n    file: \"A(z) :attribute mérete nagyobb kell, hogy legyen, mint :value kilobájt.\",\n    string: \"A(z) :attribute hosszabb kell, hogy legyen, mint :value karakter.\",\n    array: \"A(z) :attribute több, mint :value elemet kell, hogy tartalmazzon.\"\n  },\n  gte: {\n    numeric: \"A(z) :attribute nagyobb vagy egyenlő kell, hogy legyen, mint :value!\",\n    file: \"A(z) :attribute mérete nem lehet kevesebb, mint :value kilobájt.\",\n    string: \"A(z) :attribute hossza nem lehet kevesebb, mint :value karakter.\",\n    array: \"A(z) :attribute legalább :value elemet kell, hogy tartalmazzon.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"A(z) :attribute képfájl kell, hogy legyen!\",\n  in: \"A kiválasztott :attribute érvénytelen.\",\n  in_array: \"A(z) :attribute értéke nem található a(z) :other értékek között.\",\n  integer: \"A(z) :attribute értéke szám kell, hogy legyen!\",\n  ip: \"A(z) :attribute érvényes IP cím kell, hogy legyen!\",\n  ipv4: \"A(z) :attribute érvényes IPv4 cím kell, hogy legyen!\",\n  ipv6: \"A(z) :attribute érvényes IPv6 cím kell, hogy legyen!\",\n  json: \"A(z) :attribute érvényes JSON szöveg kell, hogy legyen!\",\n  lt: {\n    numeric: \"A(z) :attribute kisebb kell, hogy legyen, mint :value!\",\n    file: \"A(z) :attribute mérete kisebb kell, hogy legyen, mint :value kilobájt.\",\n    string: \"A(z) :attribute rövidebb kell, hogy legyen, mint :value karakter.\",\n    array: \"A(z) :attribute kevesebb, mint :value elemet kell, hogy tartalmazzon.\"\n  },\n  lte: {\n    numeric: \"A(z) :attribute kisebb vagy egyenlő kell, hogy legyen, mint :value!\",\n    file: \"A(z) :attribute mérete nem lehet több, mint :value kilobájt.\",\n    string: \"A(z) :attribute hossza nem lehet több, mint :value karakter.\",\n    array: \"A(z) :attribute legfeljebb :value elemet kell, hogy tartalmazzon.\"\n  },\n  max: {\n    numeric: \"A(z) :attribute értéke nem lehet nagyobb, mint :max!\",\n    file: \"A(z) :attribute mérete nem lehet több, mint :max kilobájt.\",\n    string: \"A(z) :attribute hossza nem lehet több, mint :max karakter.\",\n    array: \"A(z) :attribute legfeljebb :max elemet kell, hogy tartalmazzon.\"\n  },\n  mimes: \"A(z) :attribute kizárólag az alábbi fájlformátumok egyike lehet: :values.\",\n  mimetypes: \"A(z) :attribute kizárólag az alábbi fájlformátumok egyike lehet: :values.\",\n  min: {\n    numeric: \"A(z) :attribute értéke nem lehet kisebb, mint :min!\",\n    file: \"A(z) :attribute mérete nem lehet kevesebb, mint :min kilobájt.\",\n    string: \"A(z) :attribute hossza nem lehet kevesebb, mint :min karakter.\",\n    array: \"A(z) :attribute legalább :min elemet kell, hogy tartalmazzon.\"\n  },\n  not_in: \"A(z) :attribute értéke érvénytelen.\",\n  not_regex: \"A(z) :attribute formátuma érvénytelen.\",\n  numeric: \"A(z) :attribute szám kell, hogy legyen!\",\n  present: \"A(z) :attribute mező nem található!\",\n  regex: \"A(z) :attribute formátuma érvénytelen.\",\n  required: \"A(z) :attribute megadása kötelező!\",\n  required_if: \"A(z) :attribute megadása kötelező, ha a(z) :other értéke :value!\",\n  required_unless: \"A(z) :attribute megadása kötelező, ha a(z) :other értéke nem :values!\",\n  required_with: \"A(z) :attribute megadása kötelező, ha a(z) :values érték létezik.\",\n  required_with_all: \"A(z) :attribute megadása kötelező, ha a(z) :values értékek léteznek.\",\n  required_without: \"A(z) :attribute megadása kötelező, ha a(z) :values érték nem létezik.\",\n  required_without_all: \"A(z) :attribute megadása kötelező, ha egyik :values érték sem létezik.\",\n  same: \"A(z) :attribute és :other mezőknek egyezniük kell!\",\n  size: {\n    numeric: \"A(z) :attribute értéke :size kell, hogy legyen!\",\n    file: \"A(z) :attribute mérete :size kilobájt kell, hogy legyen!\",\n    string: \"A(z) :attribute hossza :size karakter kell, hogy legyen!\",\n    array: \"A(z) :attribute :size elemet kell tartalmazzon!\"\n  },\n  string: \"A(z) :attribute szöveg kell, hogy legyen.\",\n  timezone: \"A(z) :attribute nem létező időzona.\",\n  unique: \"A(z) :attribute már foglalt.\",\n  uploaded: \"A(z) :attribute feltöltése sikertelen.\",\n  url: \"A(z) :attribute érvénytelen link.\"\n};\n","module.exports = {\n  accepted: ':attribute harus disetujui.',\n  after: ':attribute harus setelah :after.',\n  after_or_equal: ':attribute harus sama dengan atau setelah :after_or_equal.',\n  alpha: ':attribute hanya boleh berisi huruf.',\n  alpha_dash: ':attribute hanya boleh berisi huruf, - atau _.',\n  alpha_num: ':attribute hanya boleh berisi huruf dan angka.',\n  before: ':attribute harus sebelum :before.',\n  before_or_equal: ':attribute harus sama dengan atau sebelum :before_or_equal.',\n  between: ':attribute harus berisi antara :min dan :max.',\n  confirmed: ':attribute konfirmasi tidak sama.',\n  email: ':attribute harus berupa email.',\n  date: ':attribute format tanggal tidak benar.',\n  def: ':attribute attribute has errors.',\n  digits: ':attribute harus :digits digit.',\n  digits_between: 'Isian :attribute harus antara angka :min dan :max.',\n  different: ':attribute dan :different harus berbeda.',\n  in: ':attribute tidak benar.',\n  integer: ':attribute harus berupa angka.',\n  hex: ':attribute harus berformat heksadesimal',\n  min: {\n    numeric: ':attribute minimal :min.',\n    string: ':attribute minimal :min karakter.'\n  },\n  max: {\n    numeric: ':attribute harus lebih kecil :max.',\n    string: ':attribute maksimal :max karakter.'\n  },\n  not_in: ':attribute tidak benar.',\n  numeric: ':attribute harus berupa angka.',\n  present: ':attribute harus ada (tapi boleh kosong).',\n  required: ':attribute tidak boleh kosong.',\n  required_if: ':attribute harus di isi jika :other berisi :value.',\n  required_unless: ':attribute harus di isi jika :other tidak berisi :value.',\n  required_with: ':attribute harus di isi jika :field tidak kosong.',\n  required_with_all: ':attribute harus di isi jika :fields tidak kosong.',\n  required_without: ':attribute harus di isi jika :field kosong.',\n  required_without_all: ':attribute harus di isi jika :fields kosong.',\n  same: ':attribute dan :same harus sama.',\n  size: {\n    numeric: ':attribute harus berisi :size.',\n    string: ':attribute harus berisi :size karakter.'\n  },\n  string: ':attribute harus berupa string.',\n  url: ':attribute harus berupa format url.',\n  regex: ':attribute format tidak benar.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Il campo :attribute deve essere accettato.',\n  alpha: 'Il campo :attribute deve contenere sono caratteri alfabetici.',\n  alpha_dash: 'Il campo :attribute può contenere solo caratteri alfanumerici oltre a trattini e trattini bassi.',\n  alpha_num: 'Il campo :attribute deve essere alfanumerico.',\n  between: 'Il campo :attribute deve essere compreso tra :min e :max.',\n  confirmed: 'Il campo conferma :attribute non è uguale.',\n  email: 'Il formato dell\\'attributo :attribute non è valido.',\n  def: 'Gli attributi del campo :attribute contengono degli errori.',\n  digits: 'Il campo :attribute deve essere di :digits cifre.',\n  digits_between: 'Il campo :attribute deve essere tra :min e :max cifre.',\n  different: 'Il campo :attribute e :different devo essere diversi.',\n  in: 'Il valore del campo :attribute non è valido.',\n  integer: 'Il campo :attribute deve essere un valore intero.',\n  hex: 'Il campo :attribute deve essere in formato esadecimale',\n  min: {\n    numeric: 'Il campo :attribute deve essere maggiore o uguale di :min.',\n    string: 'Il campo :attribute deve essere composto da almeno :min caratteri.'\n  },\n  max: {\n    numeric: 'Il campo :attribute deve essere minore o uguale di :max.',\n    string: 'Il campo :attribute deve essere composto da massimo :max caratteri.'\n  },\n  not_in: 'Il campo :attribute non è valido.',\n  numeric: 'Il campo :attribute deve essere un numero.',\n  present: 'Il campo :attribute deve essere presente (ma può essere vuoto).',\n  required: 'Il campo :attribute è richiesto.',\n  required_if: 'Il campo :attribute è richiesto quando il campo :other è uguale a :value.',\n  same: 'I campi :attribute e :same devono essere uguali.',\n  size: {\n    numeric: 'La dimensione del campo :attribute deve essere uguale a :size.',\n    string: 'Il campo :attribute deve essere di :size caratteri.'\n  },\n  string: 'Il campo :attribute deve essere una stringa.',\n  url: 'Il formato del campo :attribute non è valido.',\n  regex: 'Il formato del campo :attribute non è valido.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attributeを確認してください。',\n  after: ':attributeは:afterより後の日付を入力してください。',\n  after_or_equal: ':attributeは:after_or_equal以降の日付を入力してください。',\n  alpha: ':attributeは英字のみで入力してください。',\n  alpha_dash: ':attributeは英字とダッシュと下線のみで入力してください。',\n  alpha_num: ':attributeは英数字のみで入力してください。',\n  before: ':attributeは:beforeより前の日付を入力してください。',\n  before_or_equal: ':attributeは:before_or_equal以前の日付を入力してください。',\n  between: {\n    numeric: ':attributeは:min〜:maxの間で指定してください',\n    string: ':attributeは:min〜:max文字を入力してください'\n  },\n  confirmed: ':attributeは確認が一致しません。',\n  email: ':attributeは正しいメールアドレスを入力してください。',\n  date: ':attributeは正しい日付形式を入力してください',\n  def: ':attributeは検証エラーが含まれています。',\n  digits: ':attributeは:digitsの数字のみで入力してください。',\n  digits_between: ':attributeは、:min桁から:max桁にしてください。',\n  different: ':attributeと:differentは同じであってはなりません。',\n  in: '選択された:attributeは無効です。',\n  integer: ':attributeは整数で入力してください。',\n  hex: ':attributeは16進数で入力してください。',\n  min: {\n    numeric: ':attributeは:min以上で入力してください。',\n    string: ':attributeは:min文字以上で入力してください。'\n  },\n  max: {\n    numeric: ':attributeは:max以下で入力してください。',\n    string: ':attributeは:max文字以下で入力してください。'\n  },\n  not_in: '選択された:attributeは無効です。',\n  numeric: ':attributeは数値で入力してください。',\n  present: ':attributeを入力してください（空欄も可能です）。',\n  required: ':attributeは必須です。',\n  required_if: ':otherは:valueになったら:attributeは必須です。',\n  required_unless: ':otherが:valueでなければ:attributeは必須です。',\n  required_with: ':fieldが空欄でなければ:attributeは必須です。',\n  required_with_all: ':fieldsが空欄でなければ:attributeは必須です。',\n  required_without: ':fieldが空欄なら:attributeは必須です。',\n  required_without_all: ':fieldsが空欄なら:attributeは必須です。',\n  same: ':attributeと:sameは同じでなければなりません。',\n  size: {\n    numeric: ':attributeは:sizeを入力してください。',\n    string: ':attributeは:size文字で入力してください。'\n  },\n  string: ':attributeは文字のみで入力してください。',\n  url: ':attributeは正しいURIを入力してください。',\n  regex: ':attributeの値はパターンにマッチする必要があります。',\n  attributes: {}\n};\n","module.exports = {\n  accepted: \":attribute უნდა იყოს მონიშნული.\",\n  active_url: \":attribute უნდა იყოს URL მისამართი.\",\n  after: \":attribute უნდა იყოს :date-ის შემდეგ.\",\n  after_or_equal: \":attribute უნდა იყოს :date-ის შემდეგ ან მისი ტოლი.\",\n  alpha: \":attribute უნდა შეიცავდეს მხოლოდ ასოებს.\",\n  alpha_dash: \":attribute უნდა შეიცავდეს მხოლოდ ასოებს, რიცხვებს და ტირეებს.\",\n  alpha_num: \":attribute უნდა შეიცავდეს მხოლოდ ასოებს და რიცხვებს.\",\n  attributes: {},\n  array: \":attribute უნდა იყოს მასივი.\",\n  before: \":attribute უნდა იყოს :date-მდე.\",\n  before_or_equal: \":attribute უნდა იყოს :date-მდე ან მისი ტოლი.\",\n  between: {\n    numeric: \":attribute უნდა იყოს :min-სა და :max-ს შორის.\",\n    file: \":attribute უნდა იყოს :min-სა და :max კილობაიტს შორის.\",\n    string: \":attribute უნდა იყოს :min-სა და :max სიმბოლოს შორის.\",\n    array: \":attribute-ის რაოდენობა უნდა იყოს :min-დან :max-მდე.\"\n  },\n  boolean: \":attribute უნდა იყოს true, false, 0 ან 1.\",\n  confirmed: \":attribute არ ემთხვევა დადასტურებას.\",\n  date: \":attribute შეიცავს თარიღის არასწორ ფორმატს.\",\n  date_format: \":attribute არ ემთხვევა თარიღის ფორმატს: :format.\",\n  different: \":attribute და :other არ უნდა ემთხვეოდეს ერთმანეთს.\",\n  digits: \":attribute უნდა შედგებოდეს :digits ციფრისგან.\",\n  digits_between: \":attribute უნდა შედგებოდეს :min-დან :max ციფრამბდე.\",\n  dimensions: \":attribute შეიცავს სურათის არასწორ ზომებს.\",\n  distinct: \":attribute უნდა იყოს უნიკალური.\",\n  email: \":attribute უნდა იყოს სწორი ელ.ფოსტა.\",\n  exists: \"ასეთი :attribute არ არსებობს.\",\n  file: \":attribute უნდა იყოს ფაილი.\",\n  filled: \":attribute აუცილებელია.\",\n  gt: {\n    numeric: \":attribute უნდა იყოს :value-ზე მეტი.\",\n    file: \":attribute უნდა იყოს :value კილობაიტზე მეტი.\",\n    string: \":attribute უნდა შეიცავდეს :value სიმბოლოზე მეტს.\",\n    array: \":attribute უნდა შეიცავლდეს :value ელემენტზე მეტს.\"\n  },\n  gte: {\n    numeric: \":attribute უნდა იყოს მინიმუმ :value.\",\n    file: \":attribute უნდა იყოს მინიმუმ :value კილობაიტი.\",\n    string: \":attribute უნდა შეიცავდეს მინიმუმ :value სიმბოლოს.\",\n    array: \":attribute უნდა შეიცავდეს მინიმუმ :value ელემენტს.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute უნდა იყოს სურათი.\",\n  in: \"მითითებული :attribute არასწორია.\",\n  in_array: \":attribute უნდა არსებობდეს :other-ში.\",\n  integer: \":attribute უნდა იყოს მთელი რიცხვი.\",\n  ip: \":attribute უნდა იყოს IP მისამართი.\",\n  ipv4: \":attribute უნდა იყოს IPv4 მისამართი.\",\n  ipv6: \":attribute უნდა იყოს IPv6 მისამართი.\",\n  json: \":attribute უნდა იყოს JSON ტიპის.\",\n  lt: {\n    numeric: \":attribute უნდა იყოს :value-ზე ნაკლები.\",\n    file: \":attribute უნდა იყოს :value კილობაიტზე ნაკლები.\",\n    string: \":attribute უნდა შეიცავდეს :value სიმბოლოზე ნაკლებს.\",\n    array: \":attribute უნდა შეიცავლდეს :value ელემენტზე ნაკლებს.\"\n  },\n  lte: {\n    numeric: \":attribute უნდა იყოს მაქსიმუმ :value.\",\n    file: \":attribute უნდა იყოს მაქსიმუმ :value კილობაიტი.\",\n    string: \":attribute უნდა შეიცავდეს მაქსიმუმ :value სიმბოლოს.\",\n    array: \":attribute უნდა შეიცავდეს მაქსიმუმ :value ელემენტს.\"\n  },\n  max: {\n    numeric: \":attribute არ უნდა აღემატებოდეს :max-ს.\",\n    file: \":attribute არ უნდა აღემატებოდეს :max კილობაიტს.\",\n    string: \":attribute არ უნდა აღემატებოდეს :max სიმბოლოს.\",\n    array: \":attribute-ის რაოდენობა არ უნდა აღემატებოდეს :max-ს.\"\n  },\n  mimes: \":attribute უნდა იყოს შემდეგი ტიპის: :values.\",\n  mimetypes: \":attribute უნდა იყოს შემდეგი ტიპის: :values.\",\n  min: {\n    numeric: \":attribute უნდა იყოს მინიმუმ :min.\",\n    file: \":attribute უნდა იყოს მინიმუმ :min კილობაიტი.\",\n    string: \":attribute უნდა შეიცავდეს მინიმუმ :min სიმბოლოს.\",\n    array: \":attribute უნდა იყოს მინიმუმ :min.\"\n  },\n  not_in: \"მითითებული :attribute არასწორია.\",\n  not_regex: \":attribute არასწორ ფორმატშია.\",\n  numeric: \":attribute უნდა იყოს რიცხვი.\",\n  present: \":attribute უნდა არსებობდეს, თუნდაც ცარიელი.\",\n  regex: \":attribute არ ემთხვევა ფორმატს.\",\n  required: \":attribute აუცილებელია.\",\n  required_if: \":attribute აუცილებელია, თუ :other-ის მნიშვნელობა ემთხვევა :value-ს.\",\n  required_unless: \":attribute აუცილებელია, თუ :values არ შეიცავს :other-ს.\",\n  required_with: \":attribute აუცილებელია, თუ :values მითითებულია.\",\n  required_with_all: \":attribute აუცილებელია, თუ :values მითითებულია.\",\n  required_without: \":attribute აუცილებელია, თუ :values არ არის მითითებული.\",\n  required_without_all: \":attribute აუცილებელია, თუ :values არ არის მითითებული.\",\n  same: \":attribute და :other უნდა ემთხვეოდეს ერთმანეთს.\",\n  size: {\n    numeric: \":attribute უნდა იყოს :size-ის ტოლი.\",\n    file: \":attribute უნდა იყოს :size კილობაიტი.\",\n    string: \":attribute უნდა შედგებოდეს :size სიმბოლოსგან.\",\n    array: \":attribute უნდა შეიცავდეს :size ელემენტს.\"\n  },\n  string: \":attribute უნდა იყოს ტექსტი.\",\n  timezone: \":attribute უნდა იყოს სასაათო სარტყელი.\",\n  unique: \"ასეთი :attribute უკვე არსებობს.\",\n  uploaded: \":attribute-ის ატვირთვა ვერ მოხერხდა.\",\n  url: \":attribute უნდა იყოს URL მისამართი.\"\n};\n","module.exports = {\n  accepted: \":attribute을(를) 동의해야 합니다.\",\n  active_url: \":attribute은(는) 유효한 URL이 아닙니다.\",\n  after: \":attribute은(는) :date 이후 날짜여야 합니다.\",\n  after_or_equal: \":attribute은(는) :date 이후 날짜이거나 같은 날짜여야 합니다.\",\n  alpha: \":attribute은(는) 문자만 포함할 수 있습니다.\",\n  alpha_dash: \":attribute은(는) 문자, 숫자, 대쉬(-)만 포함할 수 있습니다.\",\n  alpha_num: \":attribute은(는) 문자와 숫자만 포함할 수 있습니다.\",\n  attributes: {},\n  array: \":attribute은(는) 배열이어야 합니다.\",\n  before: \":attribute은(는) :date 이전 날짜여야 합니다.\",\n  before_or_equal: \":attribute은(는) :date 이전 날짜이거나 같은 날짜여야 합니다.\",\n  between: {\n    numeric: \":attribute은(는) :min에서 :max 사이여야 합니다.\",\n    file: \":attribute은(는) :min에서 :max 킬로바이트 사이여야 합니다.\",\n    string: \":attribute은(는) :min에서 :max 문자 사이여야 합니다.\",\n    array: \":attribute은(는) :min에서 :max 개의 항목이 있어야 합니다.\"\n  },\n  boolean: \":attribute은(는) true 또는 false 이어야 합니다.\",\n  confirmed: \":attribute 확인 항목이 일치하지 않습니다.\",\n  date: \":attribute은(는) 유효한 날짜가 아닙니다.\",\n  date_format: \":attribute이(가) :format 형식과 일치하지 않습니다.\",\n  different: \":attribute와(과) :other은(는) 서로 달라야 합니다.\",\n  digits: \":attribute은(는) :digits 자리 숫자여야 합니다.\",\n  digits_between: \":attribute)은(는) :min에서 :max 자리 사이여야 합니다.\",\n  dimensions: \":attribute은(는) 유효하지 않는 이미지 크기입니다.\",\n  distinct: \":attribute 필드에 중복된 값이 있습니다.\",\n  email: \":attribute은(는) 유효한 이메일 주소여야 합니다.\",\n  exists: \"선택된 :attribute은(는) 유효하지 않습니다.\",\n  file: \":attribute은(는) 파일이어야 합니다.\",\n  filled: \":attribute 필드는 값이 있어야 합니다.\",\n  gt: {\n    numeric: \":attribute의 값은 :value보다 커야 합니다.\",\n    file: \":attribute의 용량은 :value킬로바이트보다 커야 합니다.\",\n    string: \":attribute의 길이는 :value보다 길어야 합니다.\",\n    array: \":attribute의 항목수는 :value개 보다 많아야 합니다.\"\n  },\n  gte: {\n    numeric: \":attribute의 값은 :value보다 같거나 커야 합니다.\",\n    file: \":attribute의 용량은 :value킬로바이트보다 같거나 커야 합니다.\",\n    string: \":attribute의 길이는 :value보다 같거나 길어야 합니다.\",\n    array: \":attribute의 항목수는 :value개 보다 같거나 많아야 합니다.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute은(는) 이미지여야 합니다.\",\n  in: \"선택된 :attribute은(는) 유효하지 않습니다.\",\n  in_array: \":attribute 필드는 :other에 존재하지 않습니다.\",\n  integer: \":attribute은(는) 정수여야 합니다.\",\n  ip: \":attribute은(는) 유효한 IP 주소여야 합니다.\",\n  ipv4: \":attribute은(는) 유효한 IPv4 주소여야 합니다.\",\n  ipv6: \":attribute은(는) 유효한 IPv6 주소여야 합니다.\",\n  json: \":attribute은(는) JSON 문자열이어야 합니다.\",\n  lt: {\n    numeric: \":attribute의 값은 :value보다 작아야 합니다.\",\n    file: \":attribute의 용량은 :value킬로바이트보다 작아야 합니다.\",\n    string: \":attribute의 길이는 :value보다 짧아야 합니다.\",\n    array: \":attribute의 항목수는 :value개 보다 작아야 합니다.\"\n  },\n  lte: {\n    numeric: \":attribute의 값은 :value보다 같거나 작아야 합니다.\",\n    file: \":attribute의 용량은 :value킬로바이트보다 같거나 작아야 합니다.\",\n    string: \":attribute의 길이는 :value보다 같거나 짧아야 합니다.\",\n    array: \":attribute의 항목수는 :value개 보다 같거나 작아야 합니다.\"\n  },\n  max: {\n    numeric: \":attribute은(는) :max보다 클 수 없습니다.\",\n    file: \":attribute은(는) :max킬로바이트보다 클 수 없습니다.\",\n    string: \":attribute은(는) :max자보다 클 수 없습니다.\",\n    array: \":attribute은(는) :max개보다 많을 수 없습니다.\"\n  },\n  mimes: \":attribute은(는) 다음의 파일 형식이어야 합니다: :values.\",\n  mimetypes: \":attribute은(는) 다음의 파일 형식이어야 합니다: :values.\",\n  min: {\n    numeric: \":attribute은(는) 최소한 :min이어야 합니다.\",\n    file: \":attribute은(는) 최소한 :min킬로바이트이어야 합니다.\",\n    string: \":attribute은(는) 최소한 :min자이어야 합니다.\",\n    array: \":attribute은(는) 최소한 :min개의 항목이 있어야 합니다.\"\n  },\n  not_in: \"선택된 :attribute이(가) 유효하지 않습니다.\",\n  not_regex: \":attribute의 형식이 올바르지 않습니다.\",\n  numeric: \":attribute은(는) 숫자여야 합니다.\",\n  present: \":attribute 필드가 있어야 합니다.\",\n  regex: \":attribute 형식이 유효하지 않습니다.\",\n  required: \":attribute 필드는 필수입니다.\",\n  required_if: \":other이(가) :value 일 때 :attribute 필드는 필수입니다.\",\n  required_unless: \":other이(가) :value에 없다면 :attribute 필드는 필수입니다.\",\n  required_with: \":values이(가) 있는 경우 :attribute 필드는 필수입니다.\",\n  required_with_all: \":values이(가) 모두 있는 경우 :attribute 필드는 필수입니다.\",\n  required_without: \":values이(가) 없는 경우 :attribute 필드는 필수입니다.\",\n  required_without_all: \":values이(가) 모두 없는 경우 :attribute 필드는 필수입니다.\",\n  same: \":attribute와(과) :other은(는) 일치해야 합니다.\",\n  size: {\n    numeric: \":attribute은(는) :size (이)여야 합니다.\",\n    file: \":attribute은(는) :size킬로바이트여야 합니다.\",\n    string: \":attribute은(는) :size자여야 합니다.\",\n    array: \":attribute은(는) :size개의 항목을 포함해야 합니다.\"\n  },\n  string: \":attribute은(는) 문자열이어야 합니다.\",\n  timezone: \":attribute은(는) 올바른 시간대 이어야 합니다.\",\n  unique: \":attribute은(는) 이미 사용 중입니다.\",\n  uploaded: \":attribute을(를) 업로드하지 못했습니다.\",\n  url: \":attribute 형식은 유효하지 않습니다.\"\n};\n","module.exports = {\n  accepted: \"Laukas :attribute turi būti priimtas.\",\n  active_url: \"Laukas :attribute nėra galiojantis internetinis adresas.\",\n  after: \"Lauko :attribute reikšmė turi būti po :date datos.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Laukas :attribute gali turėti tik raides.\",\n  alpha_dash: \"Laukas :attribute gali turėti tik raides, skaičius ir brūkšnelius.\",\n  alpha_num: \"Laukas :attribute gali turėti tik raides ir skaičius.\",\n  attributes: {},\n  array: \"Laukas :attribute turi būti masyvas.\",\n  before: \"Laukas :attribute turi būti data prieš :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Lauko :attribute reikšmė turi būti tarp :min ir :max.\",\n    file: \"Failo dydis lauke :attribute turi būti tarp :min ir :max kilobaitų.\",\n    string: \"Simbolių skaičius lauke :attribute turi būti tarp :min ir :max.\",\n    array: \"Elementų skaičius lauke :attribute turi turėti nuo :min iki :max.\"\n  },\n  boolean: \"Lauko reikšmė :attribute turi būti 'taip' arba 'ne'.\",\n  confirmed: \"Lauko :attribute patvirtinimas nesutampa.\",\n  date: \"Lauko :attribute reikšmė nėra galiojanti data.\",\n  date_format: \"Lauko :attribute reikšmė neatitinka formato :format.\",\n  different: \"Laukų :attribute ir :other reikšmės turi skirtis.\",\n  digits: \"Laukas :attribute turi būti sudarytas iš :digits skaitmenų.\",\n  digits_between: \"Laukas :attribute tuti turėti nuo :min iki :max skaitmenų.\",\n  dimensions: \"Lauke :attribute įkeltas paveiksliukas neatitinka išmatavimų reikalavimo.\",\n  distinct: \"Laukas :attribute pasikartoja.\",\n  email: \"Lauko :attribute reikšmė turi būti galiojantis el. pašto adresas.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Laukas :attribute turi būti užpildytas.\",\n  exists: \"Pasirinkta negaliojanti :attribute reikšmė.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Lauko :attribute reikšmė turi būti paveikslėlis.\",\n  in: \"Pasirinkta negaliojanti :attribute reikšmė.\",\n  in_array: \"Laukas :attribute neegzistuoja :other lauke.\",\n  integer: \"Lauko :attribute reikšmė turi būti sveikasis skaičius.\",\n  ip: \"Lauko :attribute reikšmė turi būti galiojantis IP adresas.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"Lauko :attribute reikšmė turi būti JSON tekstas.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Lauko :attribute reikšmė negali būti didesnė nei :max.\",\n    file: \"Failo dydis lauke :attribute reikšmė negali būti didesnė nei :max kilobaitų.\",\n    string: \"Simbolių kiekis lauke :attribute reikšmė negali būti didesnė nei :max simbolių.\",\n    array: \"Elementų kiekis lauke :attribute negali turėti daugiau nei :max elementų.\"\n  },\n  mimes: \"Lauko reikšmė :attribute turi būti failas vieno iš sekančių tipų: :values.\",\n  mimetypes: \"Lauko reikšmė :attribute turi būti failas vieno iš sekančių tipų: :values.\",\n  min: {\n    numeric: \"Lauko :attribute reikšmė turi būti ne mažesnė nei :min.\",\n    file: \"Failo dydis lauke :attribute turi būti ne mažesnis nei :min kilobaitų.\",\n    string: \"Simbolių kiekis lauke :attribute turi būti ne mažiau nei :min.\",\n    array: \"Elementų kiekis lauke :attribute turi būti ne mažiau nei :min.\"\n  },\n  not_in: \"Pasirinkta negaliojanti reikšmė :attribute.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Lauko :attribute reikšmė turi būti skaičius.\",\n  present: \"Laukas :attribute turi egzistuoti.\",\n  regex: \"Negaliojantis lauko :attribute formatas.\",\n  required: \"Privaloma užpildyti lauką :attribute.\",\n  required_if: \"Privaloma užpildyti lauką :attribute kai :other yra :value.\",\n  required_unless: \"Laukas :attribute yra privalomas, nebent :other yra tarp :values reikšmių.\",\n  required_with: \"Privaloma užpildyti lauką :attribute kai pateikta :values.\",\n  required_with_all: \"Privaloma užpildyti lauką :attribute kai pateikta :values.\",\n  required_without: \"Privaloma užpildyti lauką :attribute kai nepateikta :values.\",\n  required_without_all: \"Privaloma užpildyti lauką :attribute kai nepateikta nei viena iš reikšmių :values.\",\n  same: \"Laukai :attribute ir :other turi sutapti.\",\n  size: {\n    numeric: \"Lauko :attribute reikšmė turi būti :size.\",\n    file: \"Failo dydis lauke :attribute turi būti :size kilobaitai.\",\n    string: \"Simbolių skaičius lauke :attribute turi būti :size.\",\n    array: \"Elementų kiekis lauke :attribute turi būti :size.\"\n  },\n  string: \"Laukas :attribute turi būti tekstinis.\",\n  timezone: \"Lauko :attribute reikšmė turi būti galiojanti laiko zona.\",\n  unique: \"Tokia :attribute reikšmė jau pasirinkta.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Negaliojantis lauko :attribute formatas.\"\n};\n","module.exports = {\n  accepted: \" :attribute ir jābūt pieņemtam.\",\n  active_url: \" :attribute ir ar nederīgu linku.\",\n  after: \" :attribute ir jābūt ar datumu pēc :datums.\",\n  after_or_equal: \" :attribute ir jābūt ar datumu pēc vai vienādu ar :datums.\",\n  alpha: \" :attribute var saturēt tikai burtus.\",\n  alpha_dash: \" :attribute var saturēt tikai burtus, nummurus un atstarpes.\",\n  alpha_num: \" :attribute var tikai saturēt burtus un nummurus.\",\n  attributes: {},\n  array: \" :attribute ir jābūt sakārtotam.\",\n  before: \" :attribute ir jābūt ar datumu pirms :datums.\",\n  before_or_equal: \" :attribute ir jābūt ar datumu pirms vai vienādu ar :datums.\",\n  between: {\n    numeric: \" :attribute jābūt starp :min un :max.\",\n    file: \" :attribute jābūt starp :min un :max kilobaiti.\",\n    string: \" :attribute jābūt no :min līdz :max zīmēm.\",\n    array: \" :attribute jābūt no :min līdz :max vienībām.\"\n  },\n  boolean: \" :attribute laiciņam jābūt atbilstošam vai neatbilstošam.\",\n  confirmed: \" :attribute apstiprinājums neatbilst.\",\n  date: \" :attribute nav derīgs.\",\n  date_format: \" :attribute neatbilst formātam :format.\",\n  different: \" :attribute un :other ir jābūt citiem.\",\n  digits: \" :attribute ir jābūt :digits ciparam.\",\n  digits_between: \" :attribute ir jābūt :min un :max ciparam.\",\n  dimensions: \" :attribute ir nederīgs attēla izmērs.\",\n  distinct: \" :attribute laikam ir dubulta vērtība.\",\n  email: \" :attribute derīgam e-pastam.\",\n  exists: \"Izvēlētais :attribute ir nederīgs.\",\n  file: \" :attribute jābūt failam.\",\n  filled: \":attribute lauks ir nepieciešams.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \" :attribute jābūt attēlam.\",\n  in: \"Izvēlētais :attribute ir nederīgs.\",\n  in_array: \" :attribute laiks neeksistē :cits.\",\n  integer: \" :attribute ir jabūt skaitim.\",\n  ip: \" :attribute jābūt derīgai IP adresei.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \" :attribute jābūt derīgai JSON virknei.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \" :attribute nedrīkst pārsniegt :max.\",\n    file: \" :attribute nedrīkst pārsniegt :max kilobaiti.\",\n    string: \" :attribute nedrīkst pārsniegt :max zīmes.\",\n    array: \" :attribute nedrīkst pārsniegt :max vienības.\"\n  },\n  mimes: \" :attribute jābūt faila tipam: :values\",\n  mimetypes: \" :attribute jābūt faile tipam: :values.\",\n  min: {\n    numeric: \" :attribute jābūt vismaz :min.\",\n    file: \" :attribute jābūt vismaz :min kilobaiti.\",\n    string: \" :attribute jābūt vismaz :min zīmes.\",\n    array: \" :attribute jāsatur vismaz :min vienības.\"\n  },\n  not_in: \" izvēlieties :attribute ir nederīgs.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \" :attribute jābūt skaitlim.\",\n  present: \" :attribute laikums ir nepieciešams.\",\n  regex: \" :attribute formāts ir nederīgs.\",\n  required: \" :attribute laukums ir nepieciešams.\",\n  required_if: \" :attribute laukums ir nepieciešams, ja vien :other ir :values.\",\n  required_unless: \" :attribute laukums ir nepieciešams, ja vien :other ir :values.\",\n  required_with: \" :attribute laukums ir nepieciešams, kad :values ir pieejama.\",\n  required_with_all: \" :attribute laukums ir nepieciešams, kad :values ir pieejama.\",\n  required_without: \" :attribute laukums ir nepieciešams, kad :values nav pieejama.\",\n  required_without_all: \" :attribute laukums ir nepieciešams, kad neviena no :values nav pieejama.\",\n  same: \" :attribute un :citiem ir jāsakrīt.\",\n  size: {\n    numeric: \" :attribute jābūt :size.\",\n    file: \" :attribute jābūt :size kilobaiti.\",\n    string: \" :attribute jābūt :size zīmes.\",\n    array: \" :attribute jāsatur :size vienības.\"\n  },\n  string: \" :attribute jābūt virknē.\",\n  timezone: \" :attribute jābūt derīgā zonā.\",\n  unique: \" :attribute jau ir aizņemts.\",\n  uploaded: \" :attribute netika augšuplādēts.\",\n  url: \" :attribute formāts ir nederīgs.\"\n};\n","module.exports = {\n  accepted: \"Полето :attribute мора да биде прифатено.\",\n  active_url: \"Полето :attribute не е валиден URL.\",\n  after: \"Полето :attribute мора да биде датум после :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Полето :attribute може да содржи само букви.\",\n  alpha_dash: \"Полето :attribute може да содржи само букви, цифри, долна црта и тире.\",\n  alpha_num: \"Полето :attribute може да содржи само букви и цифри.\",\n  attributes: {},\n  array: \"Полето :attribute мора да биде низа.\",\n  before: \"Полето :attribute мора да биде датум пред :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Полето :attribute мора да биде помеѓу :min и :max.\",\n    file: \"Полето :attribute мора да биде помеѓу :min и :max килобајти.\",\n    string: \"Полето :attribute мора да биде помеѓу :min и :max карактери.\",\n    array: \"Полето :attribute мора да има помеѓу :min - :max карактери.\"\n  },\n  boolean: \"The :attribute field must be true or false\",\n  confirmed: \"Полето :attribute не е потврдено.\",\n  date: \"Полето :attribute не е валиден датум.\",\n  date_format: \"Полето :attribute не е во формат :format.\",\n  different: \"Полињата :attribute и :other треба да се различни.\",\n  digits: \"Полето :attribute треба да има :digits цифри.\",\n  digits_between: \"Полето :attribute треба да има помеѓу :min и :max цифри.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \"Полето :attribute не е во валиден формат.\",\n  exists: \"Избранато поле :attribute веќе постои.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Полето :attribute е задолжително.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Полето :attribute мора да биде слика.\",\n  in: \"Избраното поле :attribute е невалидно.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \"Полето :attribute мора да биде цел број.\",\n  ip: \"Полето :attribute мора да биде IP адреса.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"The :attribute must be a valid JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Полето :attribute мора да биде помало од :max.\",\n    file: \"Полето :attribute мора да биде помало од :max килобајти.\",\n    string: \"Полето :attribute мора да има помалку од :max карактери.\",\n    array: \"Полето :attribute не може да има повеќе од :max карактери.\"\n  },\n  mimes: \"Полето :attribute мора да биде фајл од типот: :values.\",\n  mimetypes: \"Полето :attribute мора да биде фајл од типот: :values.\",\n  min: {\n    numeric: \"Полето :attribute мора да биде минимум :min.\",\n    file: \"Полето :attribute мора да биде минимум :min килобајти.\",\n    string: \"Полето :attribute мора да има минимум :min карактери.\",\n    array: \"Полето :attribute мора да има минимум :min карактери.\"\n  },\n  not_in: \"Избраното поле :attribute е невалидно.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Полето :attribute мора да биде број.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Полето :attribute е во невалиден формат.\",\n  required: \"Полето :attribute е задолжително.\",\n  required_if: \"Полето :attribute е задолжително, кога :other е :value.\",\n  required_unless: \"The :attribute field is required unless :other is in :values.\",\n  required_with: \"Полето :attribute е задолжително, кога е внесено :values.\",\n  required_with_all: \"The :attribute field is required when :values is present.\",\n  required_without: \"Полето :attribute е задолжително, кога не е внесено :values.\",\n  required_without_all: \"The :attribute field is required when none of :values are present.\",\n  same: \"Полињата :attribute и :other треба да совпаѓаат.\",\n  size: {\n    numeric: \"Полето :attribute мора да биде :size.\",\n    file: \"Полето :attribute мора да биде :size килобајти.\",\n    string: \"Полето :attribute мора да има :size карактери.\",\n    array: \"Полето :attribute мора да има :size карактери.\"\n  },\n  string: \"The :attribute must be a string.\",\n  timezone: \"The :attribute must be a valid zone.\",\n  unique: \"Полето :attribute веќе постои.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Полето :attribute не е во валиден формат.\"\n};\n","module.exports = {\n  accepted: \":Attribute баталсан байх шаардлагатай.\",\n  active_url: \":Attribute талбарт зөв URL хаяг оруулна уу.\",\n  after: \":Attribute талбарт :date-с хойш огноо оруулна уу.\",\n  after_or_equal: \":Attribute талбарт :date эсвэл түүнээс хойш огноо оруулна уу.\",\n  alpha: \":Attribute талбарт латин үсэг оруулна уу.\",\n  alpha_dash: \":Attribute талбарт латин үсэг, тоо болон зураас оруулах боломжтой.\",\n  alpha_num: \":Attribute талбарт латин үсэг болон тоо оруулах боломжтой.\",\n  attributes: {},\n  array: \":Attribute талбар массив байх шаардлагатай.\",\n  before: \":Attribute талбарт :date-с өмнөх огноо оруулна уу.\",\n  before_or_equal: \":attribute талбарт :date эсвэл түүнээс өмнөх огноо оруулна уу.\",\n  between: {\n    numeric: \":Attribute талбарт :min-:max хооронд тоо оруулна уу.\",\n    file: \":Attribute талбарт :min-:max килобайт хэмжээтэй файл оруулна уу.\",\n    string: \":Attribute талбарт :min-:max урттай текст оруулна уу.\",\n    array: \":Attribute массивт :min-:max элемэнт байх шаардлагатай.\"\n  },\n  boolean: \":Attribute талбарын утга үнэн эсвэл худал байх шаардлагатай.\",\n  confirmed: \":Attribute талбарын баталагажуулалт тохирохгүй байна.\",\n  date: \":Attribute талбарт оруулсан огноо буруу байна.\",\n  date_format: \":Attribute талбарт :format хэлбэртэй огноо оруулна уу.\",\n  different: \":Attribute талбарт :other -с өөр утга оруулах шаардлагатай.\",\n  digits: \":Attribute талбарт дараах цифрүүдээс оруулах боломжтой. :digits.\",\n  digits_between: \":Attribute талбарт :min-:max хоорондох цифр оруулах боломжтой.\",\n  dimensions: \":Attribute талбарийн зургийн хэмжээс буруу байна.\",\n  distinct: \":Attribute талбарт ялгаатай утга оруулах шаардлагатай.\",\n  email: \":Attribute талбарт зөв и-мэйл хаяг оруулах шаардлагатай.\",\n  exists: \"Сонгогдсон :attribute буруу байна.\",\n  file: \":Attribute талбарт файл оруулах шаардлагатай.\",\n  filled: \":Attribute талбар шаардлагатай.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":Attribute талбарт зураг оруулна уу.\",\n  in: \"Сонгогдсон :attribute буруу байна.\",\n  in_array: \":Attribute талбарт оруулсан утга :other -д байхгүй байна.\",\n  integer: \":Attribute талбарт бүхэл тоо оруулах шаардлагатай.\",\n  ip: \":Attribute талбарт зөв IP хаяг оруулах шаардлагатай.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \":Attribute талбарт зөв JSON тэмдэгт мөр оруулах шаардлагатай.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":Attribute талбарт :max буюу түүнээс бага утга оруулна уу.\",\n    file: \":Attribute талбарт :max килобайтаас бага хэмжээтэй файл оруулна уу.\",\n    string: \":Attribute талбарт :max-с бага урттай текст оруулна уу.\",\n    array: \":Attribute талбарт хамгийн ихдээ :max элемэнт оруулах боломжтой.\"\n  },\n  mimes: \":Attribute талбарт дараах төрлийн файл оруулах боломжтой: :values.\",\n  mimetypes: \":Attribute талбарт дараах төрлийн файл оруулах боломжтой: :values.\",\n  min: {\n    numeric: \":Attribute талбарт :min буюу түүнээс их тоо оруулна уу.\",\n    file: \":Attribute талбарт :min килобайтаас их хэмжээтэй файл оруулна уу.\",\n    string: \":Attribute талбарт :min буюу түүнээс их үсэг бүхий текст оруулна уу.\",\n    array: \":Attribute талбарт хамгийн багадаа :min элемэнт оруулах боломжтой.\"\n  },\n  not_in: \"Буруу :attribute сонгогдсон байна.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":Attribute талбарт тоон утга оруулна уу.\",\n  present: \":Attribute талбар байх шаардлагатай.\",\n  regex: \":Attribute талбарт оруулсан утга буруу байна.\",\n  required: \":Attribute талбар шаардлагатай.\",\n  required_if: \"Хэрэв :other :value бол :attribute табларт утга оруулах шаардлагатай.\",\n  required_unless: \":other :values дотор байхгүй бол :attribute талбарт утга оруулах шаардлагатай.\",\n  required_with: \":values утгуудийн аль нэг байвал :attribute талбар шаардлагатай.\",\n  required_with_all: \":values утгууд байвал :attribute талбар шаардлагатай.\",\n  required_without: \"The :attribute field is required when :values is not present.\",\n  required_without_all: \"The :attribute field is required when none of :values are present.\",\n  same: \"The :attribute and :other must match.\",\n  size: {\n    numeric: \":Attribute :size хэмжээтэй байх шаардлагатай.\",\n    file: \":Attribute :size килобайт хэмжээтэй байх шаардлагатай.\",\n    string: \":Attribute :size тэмдэгтийн урттай байх шаардлагатай.\",\n    array: \":Attribute :size элемэнттэй байх шаардлагатай.\"\n  },\n  string: \":Attribute талбарт текст оруулна уу.\",\n  timezone: \":Attribute талбарт зөв цагийн бүс оруулна уу.\",\n  unique: \"Оруулсан :attribute аль хэдий нь бүртгэгдсэн байна.\",\n  uploaded: \":Attribute талбарт оруулсан файлыг хуулхад алдаа гарлаа.\",\n  url: \":Attribute зөв url хаяг оруулна уу.\"\n};\n","module.exports = {\n  accepted: \":attribute mesti diterima pakai.\",\n  active_url: \":attribute bukan URL yang sah.\",\n  after: \":attribute mesti tarikh selepas :date.\",\n  after_or_equal: \":attribute mesti tarikh selepas atau sama dengan :date.\",\n  alpha: \":attribute hanya boleh mengandungi huruf.\",\n  alpha_dash: \":attribute boleh mengandungi huruf, nombor, dan sengkang.\",\n  alpha_num: \":attribute boleh mengandungi huruf dan nombor.\",\n  attributes: {},\n  array: \":attribute mesti jujukan.\",\n  before: \":attribute mesti tarikh sebelum :date.\",\n  before_or_equal: \":attribute mesti tarikh sebelum atau sama dengan :date.\",\n  between: {\n    numeric: \":attribute mesti mengandungi antara :min dan :max.\",\n    file: \":attribute mesti mengandungi antara :min dan :max kilobait.\",\n    string: \":attribute mesti mengandungi antara :min dan :max aksara.\",\n    array: \":attribute mesti mengandungi antara :min dan :max perkara.\"\n  },\n  boolean: \":attribute mesti benar atau salah.\",\n  confirmed: \":attribute pengesahan yang tidak sepadan.\",\n  date: \":attribute bukan tarikh yang sah.\",\n  date_format: \":attribute tidak mengikut format :format.\",\n  different: \":attribute dan :other mesti berlainan.\",\n  dimensions: \":attribute tidak sah\",\n  digits: \":attribute mesti :digits.\",\n  digits_between: \":attribute mesti mengandungi antara :min dan :max digits.\",\n  distinct: \":attribute adalah nilai yang berulang\",\n  email: \":attribute tidak sah.\",\n  exists: \":attribute tidak sah.\",\n  file: \":attribute mesti fail yang sah.\",\n  filled: \":attribute diperlukan.\",\n  gt: {\n    numeric: \":attribute mesti melebihi :value.\",\n    file: \":attribute mesti melebihi :value kilobait.\",\n    string: \":attribute mesti melebihi :value aksara.\",\n    array: \":attribute mesti mengandungi lebih daripada :value perkara.\"\n  },\n  gte: {\n    numeric: \":attribute mesti melebihi atau bersamaan :value.\",\n    file: \":attribute mesti melebihi atau bersamaan :value kilobait.\",\n    string: \":attribute mesti melebihi atau bersamaan :value aksara.\",\n    array: \":attribute mesti mengandungi :value perkara atau lebih.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute mesti imej.\",\n  in: \":attribute tidak sah.\",\n  in_array: \":attribute tidak wujud dalam :other.\",\n  integer: \":attribute mesti integer.\",\n  ip: \":attribute mesti alamat IP yang sah.\",\n  ipv4: \":attribute mesti alamat IPv4 yang sah.\",\n  ipv6: \":attribute mesti alamat IPv6 yang sah\",\n  json: \":attribute mesti JSON yang sah.\",\n  lt: {\n    numeric: \":attribute mesti kurang daripada :value.\",\n    file: \":attribute mesti kurang daripada :value kilobait.\",\n    string: \":attribute mesti kurang daripada :value aksara.\",\n    array: \":attribute mesti mengandungi kurang daripada :value perkara.\"\n  },\n  lte: {\n    numeric: \":attribute mesti kurang daripada atau bersamaan dengan :value.\",\n    file: \":attribute mesti kurang daripada atau bersamaan dengan :value kilobait.\",\n    string: \":attribute mesti kurang daripada atau bersamaan dengan :value aksara.\",\n    array: \":attribute mesti mengandungi kurang daripada atau bersamaan dengan :value perkara.\"\n  },\n  max: {\n    numeric: \"Jumlah :attribute mesti tidak melebihi :max.\",\n    file: \"Jumlah :attribute mesti tidak melebihi :max kilobait.\",\n    string: \"Jumlah :attribute mesti tidak melebihi :max aksara.\",\n    array: \"Jumlah :attribute mesti tidak melebihi :max perkara.\"\n  },\n  mimes: \":attribute mesti fail type: :values.\",\n  mimetypes: \":attribute mesti fail type: :values.\",\n  min: {\n    numeric: \"Jumlah :attribute mesti sekurang-kurangnya :min.\",\n    file: \"Jumlah :attribute mesti sekurang-kurangnya :min kilobait.\",\n    string: \"Jumlah :attribute mesti sekurang-kurangnya :min aksara.\",\n    array: \"Jumlah :attribute mesti sekurang-kurangnya :min perkara.\"\n  },\n  not_in: \":attribute tidak sah.\",\n  not_regex: \"Format :attribute adalah tidak sah.\",\n  numeric: \":attribute mesti nombor.\",\n  present: \":attribute mesti wujud.\",\n  regex: \"Format :attribute tidak sah.\",\n  required: \"Ruangan :attribute diperlukan.\",\n  required_if: \"Ruangan :attribute diperlukan bila :other sama dengan :value.\",\n  required_unless: \"Ruangan :attribute diperlukan sekiranya :other ada dalam :values.\",\n  required_with: \"Ruangan :attribute diperlukan bila :values wujud.\",\n  required_with_all: \"Ruangan :attribute diperlukan bila :values wujud.\",\n  required_without: \"Ruangan :attribute diperlukan bila :values tidak wujud.\",\n  required_without_all: \"Ruangan :attribute diperlukan bila kesemua :values wujud.\",\n  same: \"Ruangan :attribute dan :other mesti sepadan.\",\n  size: {\n    numeric: \"Saiz :attribute mesti :size.\",\n    file: \"Saiz :attribute mesti :size kilobait.\",\n    string: \"Saiz :attribute mesti :size aksara.\",\n    array: \"Saiz :attribute mesti mengandungi :size perkara.\"\n  },\n  string: \":attribute mesti aksara.\",\n  timezone: \":attribute mesti zon masa yang sah.\",\n  unique: \":attribute telah wujud.\",\n  uploaded: \":attribute gagal dimuat naik.\",\n  url: \":attribute format tidak sah.\"\n};\n","module.exports = {\n  accepted: ':attribute må være akseptert.',\n  alpha: ':attribute feltet kan kun inneholde alfabetiske tegn.',\n  alpha_dash: ':attribute feltet kan kun inneholde alfanumeriske tegn, i tillegg til bindestreker og understreker.',\n  alpha_num: ':attribute feltet må være alfanumerisk.',\n  between: ':attribute feltet må være mellom :min og :max.',\n  confirmed: ':attribute feltet stemmer ikke overens med bekreftelsen.',\n  email: ':attribute formatet er ugyldig.',\n  date: ':attribute er et ugyldig datoformat.',\n  def: ':attribute attributtet har feil.',\n  digits: ':attribute må være på :digits siffer.',\n  digits_between: ':attribute må være mellom :min og :max siffer.',\n  different: ':attribute og :different må være forskjellige.',\n  in: 'Den oppgitte verdien for :attribute er ugyldig.',\n  integer: ':attribute må være et heltall.',\n  hex: 'The :attribute should have hexadecimal format',\n  min: {\n    numeric: ':attribute må minst være :min.',\n    string: ':attribute må være på minst :min tegn.'\n  },\n  max: {\n    numeric: ':attribute kan ikke være større enn :max.',\n    string: ':attribute kan maks ha :max tegn.'\n  },\n  not_in: 'Den oppgitte verdien for :attribute er ugyldig.',\n  numeric: ':attribute må være et tall.',\n  present: 'The :attribute field must be present (but can be empty).',\n  required: ':attribute feltet er påkrevd.',\n  required_if: ':attribute er påkrevd når :other er :value.',\n  same: ':attribute og :same må være like.',\n  size: {\n    numeric: ':attribute må ha størrelsen :size.',\n    string: ':attribute må ha :size tegn.'\n  },\n  string: ':attribute må være tekst.',\n  url: ':attribute formatet er ugyldig.',\n  regex: ':attribute formatet er ugyldig.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Het :attribute veld moet geaccepteerd worden.',\n  after: ':attribute moet een datum na :after zijn.',\n  after_or_equal: 'De :attribute datum moet op of na :after_or_equal zijn.',\n  alpha: 'Het :attribute veld mag alleen maar letters bevatten.',\n  alpha_dash: 'Het :attribute veld mag alleen maar letters, cijfers en (liggende) streepjes bevatten.',\n  alpha_num: 'Het :attribute veld mag alleen maar letters en cijfers bevatten.',\n  before: ':attribute moet vòòr :before zijn.',\n  before_or_equal: ':attribute moet vòòr of op :before_or_equal zijn.',\n  between: 'Het :attribute veld moet tussen :min en :max liggen.',\n  confirmed: 'Het :attribute veld komt niet met de bevestiging overeen.',\n  email: 'Het :attribute formaat is ongeldig.',\n  date: 'Het :attribute veld moet een geldige datum zijn.',\n  def: 'Het :attribute veld bevat fouten.',\n  digits: 'Het :attribute veld moet :digits cijfers hebben.',\n  digits_between: ':attribute moet bestaan uit minimaal :min en maximaal :max cijfers.',\n  different: 'Het :attribute en :different veld moeten verschillend zijn.',\n  in: 'De gekozen waarde voor :attribute is ongeldig.',\n  integer: 'Het :attribute veld moet een geheel getal zijn.',\n  hex: 'Het :attribute veld moet hexadecimaal zijn',\n  min: {\n    numeric: 'Het :attribute veld moet minstens :min zijn.',\n    string: 'Het :attribute veld moet minstens :min karakters bevatten.'\n  },\n  max: {\n    numeric: 'Het :attribute veld mag maximaal :max zijn.',\n    string: 'Het :attribute veld mag niet meer dan :max karakters bevatten.'\n  },\n  not_in: 'De gekozen waarde voor :attribute is ongeldig.',\n  numeric: 'Het :attribute veld moet een getal zijn.',\n  present: 'Het :attribute veld moet aanwezig zijn (maar mag leeg zijn).',\n  required: 'Het :attribute veld moet ingevuld zijn.',\n  required_if: 'Het :attribute veld moet ingevuld zijn, wanneer :other :value is.',\n  required_unless: 'Het :attribute veld moet ingevuld zijn, wanneer :other niet :value is.',\n  required_with: 'Het :attribute veld moet ingevuld zijn, wanneer :field niet leeg is.',\n  required_with_all: 'Het :attribute veld moet ingevuld zijn, wanneer :fields niet leeg zijn.',\n  required_without: 'Het :attribute veld moet ingevuld zijn, wanneer :field leeg is.',\n  required_without_all: 'Het :attribute veld moet ingevuld zijn, wanneer :fields leeg zijn.',\n  same: 'De :attribute en :same velden moeten overeenkomen.',\n  size: {\n    numeric: 'Het :attribute veld moet :size zijn.',\n    string: 'Het :attribute veld moet :size karakters bevatten.'\n  },\n  string: 'Het :attribute veld moet een woord of zin zijn.',\n  url: 'Het :attribute veld heeft een ongeldig formaat.',\n  regex: 'Het :attribute veld heeft een ongeldig formaat.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Pole :attribute musi być zaakceptowane.',\n  alpha: 'Pole :attribute może zawierać tylko litery.',\n  alpha_dash: 'Pole :attribute moze zawierać tylko litery, myślnik i podrkeślenie.',\n  alpha_num: 'Pole :attribute moze zawierac tylko znaki alfanumeryczne.',\n  between: 'Pole :attribute musi mieć długość od :min do :max.',\n  confirmed: 'Pole :attribute nie spełnia warunku potwierdzenia.',\n  email: 'Pole :attribute ma niepoprawny format adresu email.',\n  date: 'Pole :attribute musi mieć poprawny format daty.',\n  def: 'Pole :attribute zawiera błędy.',\n  digits: 'Pole :attribute może zawierać tylko cyfry ze zbioru :digits.',\n  digits_between: 'Pole :attribute musi mieć od :min do :max cyfr.',\n  different: 'Pola :attribute i :different muszą się różnić.',\n  in: 'Pole :attribute musi należeć do zbioru :in.',\n  integer: 'Pole :attribute musi być liczbą całkowitą.',\n  hex: 'The :attribute should have hexadecimal format',\n  min: {\n    numeric: 'Pole :attribute musi być równe conajmniej :min.',\n    string: 'Pole :attribute musi zawierać conajmniej :min znaków.'\n  },\n  max: {\n    numeric: 'Pole :attribute nie moze być większe :max.',\n    string: 'Pole :attribute nie moze być dłuższe niż :max znaków.'\n  },\n  not_in: 'Pole :attribute nie może należeć do zbioru :not_in.',\n  numeric: 'Pole :attribute musi być liczbą.',\n  present: 'Polu :attribute musi być obecny (ale może być pusta).',\n  required: 'Pole :attribute jest wymagane.',\n  required_if: 'Pole :attribute jest wymagane jeśli pole :other jest równe :value.',\n  same: 'Pola :attribute i :same muszą być takie same.',\n  size: {\n    numeric: 'Pole :attribute musi być równe :size.',\n    string: 'Pole :attribute musi zawierać :size znaków.'\n  },\n  string: 'Pole :attribute musi być ciągiem znaków.',\n  url: 'Pole :attribute musi być poprawnym adresem URL.',\n  regex: 'Pole :attribute nie spełnia warunku.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: \"O campo :attribute deverá ser aceite.\",\n  active_url: \"O campo :attribute não contém um URL válido.\",\n  after: \"O campo :attribute deverá conter uma data posterior a :date.\",\n  after_or_equal: \"O campo :attribute deverá conter uma data posterior ou igual a :date.\",\n  alpha: \"O campo :attribute deverá conter apenas letras.\",\n  alpha_dash: \"O campo :attribute deverá conter apenas letras, números e traços.\",\n  alpha_num: \"O campo :attribute deverá conter apenas letras e números .\",\n  attributes: {},\n  array: \"O campo :attribute deverá conter uma coleção de elementos.\",\n  before: \"O campo :attribute deverá conter uma data anterior a :date.\",\n  before_or_equal: \"O Campo :attribute deverá conter uma data anterior ou igual a :date.\",\n  between: {\n    numeric: \"O campo :attribute deverá ter um valor entre :min - :max.\",\n    file: \"O campo :attribute deverá ter um tamanho entre :min - :max kilobytes.\",\n    string: \"O campo :attribute deverá conter entre :min - :max caracteres.\",\n    array: \"O campo :attribute deverá conter entre :min - :max elementos.\"\n  },\n  boolean: \"O campo :attribute deverá conter o valor verdadeiro ou falso.\",\n  confirmed: \"A confirmação para o campo :attribute não coincide.\",\n  date: \"O campo :attribute não contém uma data válida.\",\n  date_format: \"A data indicada para o campo :attribute não respeita o formato :format.\",\n  different: \"Os campos :attribute e :other deverão conter valores diferentes.\",\n  digits: \"O campo :attribute deverá conter :digits caracteres.\",\n  digits_between: \"O campo :attribute deverá conter entre :min a :max caracteres.\",\n  dimensions: \"O campo :attribute deverá conter uma dimensão de imagem válida.\",\n  distinct: \"O campo :attribute contém um valor duplicado.\",\n  email: \"O campo :attribute não contém um endereço de correio eletrónico válido.\",\n  exists: \"O valor selecionado para o campo :attribute é inválido.\",\n  file: \"O campo :attribute deverá conter um ficheiro.\",\n  filled: \"É obrigatória a indicação de um valor para o campo :attribute.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"O campo :attribute deverá conter uma imagem.\",\n  in: \"O campo :attribute não contém um valor válido.\",\n  in_array: \"O campo :attribute não existe em :other.\",\n  integer: \"O campo :attribute deverá conter um número inteiro.\",\n  ip: \"O campo :attribute deverá conter um IP válido.\",\n  ipv4: \"O campo :attribute deverá conter um IPv4 válido.\",\n  ipv6: \"O campo :attribute deverá conter um IPv6 válido.\",\n  json: \"O campo :attribute deverá conter um texto JSON válido.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"O campo :attribute não deverá conter um valor superior a :max.\",\n    file: \"O campo :attribute não deverá ter um tamanho superior a :max kilobytes.\",\n    string: \"O campo :attribute não deverá conter mais de :max caracteres.\",\n    array: \"O campo :attribute não deverá conter mais de :max elementos.\"\n  },\n  mimes: \"O campo :attribute deverá conter um ficheiro do tipo: :values.\",\n  mimetypes: \"O campo :attribute deverá conter um ficheiro do tipo: :values.\",\n  min: {\n    numeric: \"O campo :attribute deverá ter um valor superior ou igual a :min.\",\n    file: \"O campo :attribute deverá ter no mínimo :min kilobytes.\",\n    string: \"O campo :attribute deverá conter no mínimo :min caracteres.\",\n    array: \"O campo :attribute deverá conter no mínimo :min elementos.\"\n  },\n  not_in: \"O campo :attribute contém um valor inválido.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"O campo :attribute deverá conter um valor numérico.\",\n  present: \"O campo :attribute deverá estar presente.\",\n  regex: \"O formato do valor para o campo :attribute é inválido.\",\n  required: \"É obrigatória a indicação de um valor para o campo :attribute.\",\n  required_if:\n    \"É obrigatória a indicação de um valor para o campo :attribute quando o valor do campo :other é igual a :value.\",\n  required_unless:\n    \"É obrigatória a indicação de um valor para o campo :attribute a menos que :other esteja presente em :values.\",\n  required_with: \"É obrigatória a indicação de um valor para o campo :attribute quando :values está presente.\",\n  required_with_all:\n    \"É obrigatória a indicação de um valor para o campo :attribute quando um dos :values está presente.\",\n  required_without: \"É obrigatória a indicação de um valor para o campo :attribute quando :values não está presente.\",\n  required_without_all:\n    \"É obrigatória a indicação de um valor para o campo :attribute quando nenhum dos :values está presente.\",\n  same: \"Os campos :attribute e :other deverão conter valores iguais.\",\n  size: {\n    numeric: \"O campo :attribute deverá conter o valor :size.\",\n    file: \"O campo :attribute deverá ter o tamanho de :size kilobytes.\",\n    string: \"O campo :attribute deverá conter :size caracteres.\",\n    array: \"O campo :attribute deverá conter :size elementos.\"\n  },\n  string: \"O campo :attribute deverá conter texto.\",\n  timezone: \"O campo :attribute deverá ter um fuso horário válido.\",\n  unique: \"O valor indicado para o campo :attribute já se encontra registado.\",\n  uploaded: \"O upload do ficheiro :attribute falhou.\",\n  url: \"O formato do URL indicado para o campo :attribute é inválido.\"\n};\n","module.exports = {\n  accepted: \"O campo :attribute deve ser aceito.\",\n  active_url: \"O campo :attribute deve conter uma URL válida.\",\n  after: \"O campo :attribute deve conter uma data posterior a :date.\",\n  after_or_equal: \"O campo :attribute deve conter uma data superior ou igual a :date.\",\n  alpha: \"O campo :attribute deve conter apenas letras.\",\n  alpha_dash: \"O campo :attribute deve conter apenas letras, números e traços.\",\n  alpha_num: \"O campo :attribute deve conter apenas letras e números .\",\n  array: \"O campo :attribute deve conter um array.\",\n  before: \"O campo :attribute deve conter uma data anterior a :date.\",\n  before_or_equal: \"O campo :attribute deve conter uma data inferior ou igual a :date.\",\n  between: {\n    numeric: \"O campo :attribute deve conter um número entre :min e :max.\",\n    file: \"O campo :attribute deve conter um arquivo de :min a :max kilobytes.\",\n    string: \"O campo :attribute deve conter entre :min a :max caracteres.\",\n    array: \"O campo :attribute deve conter de :min a :max itens.\"\n  },\n  boolean: \"O campo :attribute deve conter o valor verdadeiro ou falso.\",\n  confirmed: \"A confirmação para o campo :attribute não coincide.\",\n  date: \"O campo :attribute não contém uma data válida.\",\n  date_format: \"A data informada para o campo :attribute não respeita o formato :format.\",\n  different: \"Os campos :attribute e :other devem conter valores diferentes.\",\n  digits: \"O campo :attribute deve conter :digits dígitos.\",\n  digits_between: \"O campo :attribute deve conter entre :min a :max dígitos.\",\n  dimensions: \"O valor informado para o campo :attribute não é uma dimensão de imagem válida.\",\n  distinct: \"O campo :attribute contém um valor duplicado.\",\n  email: \"O campo :attribute não contém um endereço de email válido.\",\n  exists: \"O valor selecionado para o campo :attribute é inválido.\",\n  file: \"O campo :attribute deve conter um arquivo.\",\n  filled: \"O campo :attribute é obrigatório.\",\n  gt: {\n    numeric: \"O campo :attribute deve ser maior que :value.\",\n    file: \"O arquivo :attribute deve ser maior que :value kilobytes.\",\n    string: \"O campo :attribute deve ser maior que :value caracteres.\",\n    array: \"O campo :attribute deve ter mais que :value itens.\"\n  },\n  gte: {\n    numeric: \"O campo :attribute deve ser maior ou igual a :value.\",\n    file: \"O arquivo :attribute deve ser maior ou igual a :value kilobytes.\",\n    string: \"O campo :attribute deve ser maior ou igual a :value caracteres.\",\n    array: \"O campo :attribute deve ter :value itens ou mais.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"O campo :attribute deve conter uma imagem.\",\n  in: \"O campo :attribute não contém um valor válido.\",\n  in_array: \"O campo :attribute não existe em :other.\",\n  integer: \"O campo :attribute deve conter um número inteiro.\",\n  ip: \"O campo :attribute deve conter um IP válido.\",\n  ipv4: \"O campo :attribute deve conter um IPv4 válido.\",\n  ipv6: \"O campo :attribute deve conter um IPv6 válido.\",\n  json: \"O campo :attribute deve conter uma string JSON válida.\",\n  lt: {\n    numeric: \"O campo :attribute deve ser menor que :value.\",\n    file: \"O arquivo :attribute ser menor que :value kilobytes.\",\n    string: \"O campo :attribute deve ser menor que :value caracteres.\",\n    array: \"O campo :attribute deve ter menos que :value itens.\"\n  },\n  lte: {\n    numeric: \"O campo :attribute deve ser menor ou igual a :value.\",\n    file: \"O arquivo :attribute ser menor ou igual a :value kilobytes.\",\n    string: \"O campo :attribute deve ser menor ou igual a :value caracteres.\",\n    array: \"O campo :attribute não deve ter mais que :value itens.\"\n  },\n  max: {\n    numeric: \"O campo :attribute não pode conter um valor superior a :max.\",\n    file: \"O campo :attribute não pode conter um arquivo com mais de :max kilobytes.\",\n    string: \"O campo :attribute não pode conter mais de :max caracteres.\",\n    array: \"O campo :attribute deve conter no máximo :max itens.\"\n  },\n  mimes: \"O campo :attribute deve conter um arquivo do tipo: :values.\",\n  mimetypes: \"O campo :attribute deve conter um arquivo do tipo: :values.\",\n  min: {\n    numeric: \"O campo :attribute deve conter um número superior ou igual a :min.\",\n    file: \"O campo :attribute deve conter um arquivo com no mínimo :min kilobytes.\",\n    string: \"O campo :attribute deve conter no mínimo :min caracteres.\",\n    array: \"O campo :attribute deve conter no mínimo :min itens.\"\n  },\n  not_in: \"O campo :attribute contém um valor inválido.\",\n  not_regex: \"O formato do valor :attribute é inválido.\",\n  numeric: \"O campo :attribute deve conter um valor numérico.\",\n  present: \"O campo :attribute deve estar presente.\",\n  regex: \"O formato do valor informado no campo :attribute é inválido.\",\n  required: \"O campo :attribute é obrigatório.\",\n  required_if: \"O campo :attribute é obrigatório quando o valor do campo :other é igual a :value.\",\n  required_unless: \"O campo :attribute é obrigatório a menos que :other esteja presente em :values.\",\n  required_with: \"O campo :attribute é obrigatório quando :values está presente.\",\n  required_with_all: \"O campo :attribute é obrigatório quando um dos :values está presente.\",\n  required_without: \"O campo :attribute é obrigatório quando :values não está presente.\",\n  required_without_all: \"O campo :attribute é obrigatório quando nenhum dos :values está presente.\",\n  same: \"Os campos :attribute e :other devem conter valores iguais.\",\n  size: {\n    numeric: \"O campo :attribute deve conter o número :size.\",\n    file: \"O campo :attribute deve conter um arquivo com o tamanho de :size kilobytes.\",\n    string: \"O campo :attribute deve conter :size caracteres.\",\n    array: \"O campo :attribute deve conter :size itens.\"\n  },\n  string: \"O campo :attribute deve ser uma string.\",\n  timezone: \"O campo :attribute deve conter um fuso horário válido.\",\n  unique: \"O valor informado para o campo :attribute já está em uso.\",\n  uploaded: \"Falha no Upload do arquivo :attribute.\",\n  url: \"O formato da URL informada para o campo :attribute é inválido.\"\n};\n","module.exports = {\n  accepted: ':attribute trebuie acceptat.',\n  after: ':attribute trebuie să fie după :after.',\n  after_or_equal: ':attribute trebuie să fie egal sau după :after_or_equal.',\n  alpha: 'Câmpul :attribute rebuie să conțină numai caractere alfabetice.',\n  alpha_dash: 'Câmpul:attribute poate conține numai caractere alfanumerice, precum și liniuțe și subliniere.',\n  alpha_num: 'Câmpul :attribute trebuie să fie alfanumeric.',\n  before: ':attribute trebuie să fie înainte :before.',\n  before_or_equal: ':attribute trebuie să fie egal sau înainte :before_or_equal.',\n  between: ':attribute trebuie să fie între :min și :max.',\n  confirmed: 'Confirmarea :attribute nu se potrivește.',\n  email: 'Formatul :attribute nu este valid.',\n  date: ':attribute nu este un format de dată valid.',\n  def: 'Atributul :attribute are erori.',\n  digits: ':attribute trebuie să aibă  :digits cifre.',\n  digits_between: 'Câmpul :attribute trebuie să aibă între :min și :max cifre.',\n  different: ':attribute și :different trebuie sa fie diferite.',\n  in: 'Atributul selectat :attribute nu este valid.',\n  integer: ':attribute trebuie să fie un număr întreg.',\n  hex: 'Câmpul :attribute trebuie să aibă format hexazecimal.',\n  min: {\n    numeric: ':attribute trebuie să fie mai mare de :min.',\n    string: ':attribute trebuie să contină cel puțin :min caractere.'\n  },\n  max: {\n    numeric: ':attribute nu trebuie să fie mai mare de :max.',\n    string: ':attribute poate să contină maxim :max caractere.'\n  },\n  not_in: ':attribute selectat nu este valid.',\n  numeric: ':attribute trebuie sa fie un număr.',\n  present: ':attribute trebuie sa fie prezent(dar poate fi gol).',\n  required: ' Câmpul :attribute este obligatoriu.',\n  required_if: 'Câmpul :attribute este obligatoriu cănd :other este :value.',\n  required_unless: 'Câmpul :attribute este obligatoriu cănd :other nu este :value.',\n  required_with: 'Câmpul :attribute este obligatoriu cănd :field este completat.',\n  required_with_all: 'Câmpul :attribute este obligatoriu cănd :fields sunt completate.',\n  required_without: 'Câmpul :attribute este obligatoriu cănd :field nu este completat.',\n  required_without_all: 'Câmpul :attribute este obligatoriu cănd :fields nu sunt completate.',\n  same: 'Câmpurile :attribute și :same trebuie să fie egale.',\n  size: {\n    numeric: ':attribute trebuie să fie :size.',\n    string: ':attribute trebuie să contina :size caractere.'\n  },\n  string: ':attribute trebuie să fie un contina doar caractere alfabetice.',\n  url: 'Formatul :attribute nu este valid.',\n  regex: 'Formatul :attribute nu este valid.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: 'Вы должны принять :attribute.',\n  alpha: 'Поле :attribute может содержать только буквы.',\n  alpha_dash: 'Поле :attribute может содержать только буквы, цифры, дефисы и символы подчёркивания.',\n  alpha_num: 'Поле :attribute может содержать только буквы и цифры.',\n  between: 'Поле :attribute должно быть между :min и :max.',\n  confirmed: 'Поле :attribute не совпадает с подтверждением.',\n  email: 'Поле :attribute должно быть действительным электронным адресом.',\n  def: 'Поле :attribute содержит ошибки.',\n  digits: 'Длина цифрового поля :attribute должна быть :digits.',\n  digits_between: 'Длинна цифрового поля :attribute должна быть от :min до :max знаков.',\n  different: 'Поля :attribute и :different должны различаться.',\n  in: 'Выбранное значение для :attribute ошибочно.',\n  integer: 'Поле :attribute должно быть целым числом.',\n  hex: 'Поле :attribute должно иметь шестнадцатеричный формат',\n  min: {\n    numeric: 'Значение поля :attribute должно быть больше или равно :min.',\n    string: 'Количество символов в поле :attribute должно быть не менее :min.'\n  },\n  max: {\n    numeric: 'Значение поля :attribute должно быть меньше или равно :max.',\n    string: 'Количество символов в поле :attribute не может превышать :max.'\n  },\n  not_in: 'Выбранное значение для :attribute ошибочно.',\n  numeric: 'Поле :attribute должно быть числом.',\n  present: 'Поле :attribute должно присутствовать (но может быть пустым).',\n  required: 'Поле :attribute обязательно для заполнения.',\n  required_if: 'Поле :attribute требуется когда значения поля :other равно :value.',\n  same: 'Значение :attribute должно совпадать с :same.',\n  size: {\n    numeric: 'Значение поля :attribute должно быть равным :size.',\n    string: 'Количество символов в поле :attribute должно быть равно :size.'\n  },\n  url: 'Поле :attribute должно содержать валидный URL.',\n  regex: 'Неверный формат поля :attribute.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attribute måste vara accepterat.',\n  after: ':attribute måste vara efter :after.',\n  after_or_equal: ':attribute måste vara samtidigt eller efter :after_or_equal.',\n  alpha: ':attribute får bara bestå av bokstäver.',\n  alpha_dash: ':attribute får bara bestå av alfanumeriska tecken, bindestreck och understreck.',\n  alpha_num: ':attribute får bara bestå av alfanumeriska tecken',\n  before: ':attribute måste vara före :before.',\n  before_or_equal: ':attribute måste vara samtidigt eller före :before_or_equal.',\n  between: ':attribute måste vara mellan :min och :max.',\n  confirmed: ':attribute stämmer inte överens med bekräftelsefältet.',\n  email: 'Felaktigt format för :attribute.',\n  date: ':attribute är inte ett giltigt datum.',\n  def: 'Attributet :attribute innehåller fel.',\n  digits: ':attribute ska innehålla :digits siffror.',\n  different: ':attribute och :different måste vara olika.',\n  in: 'Det valda :attribute är ogiltigt.',\n  integer: ':attribute måste vara ett heltal.',\n  hex: ':attribute måste vara i hexadecimalt format',\n  min: {\n    numeric: ':attribute måste vara minst :min.',\n    string: ':attribute måste vara minst :min tecken.'\n  },\n  max: {\n    numeric: ':attribute får inte vara högre än :max.',\n    string: ':attribute får inte innehålla fler än :max tecken.'\n  },\n  not_in: 'Det valda attributet :attribute är ogiltigt',\n  numeric: ':attribute måste vara en siffra.',\n  present: ':attribute måste vara tillgängligt.',\n  required: ':attribute måste vara ifyllt.',\n  required_if: ':attribute måste vara ifyllt när :other är :value.',\n  required_unless: ':attribute måste vara ifyllt när :other inte är :value.',\n  required_with: ':attribute måste vara ifyllt när :field är ifyllt.',\n  required_with_all: ':attribute måste vara ifyllt när :fields är ifyllda.',\n  required_without: ':attribute måste vara ifyllt när :field inte är ifyllt.',\n  required_without_all: ':attribute måste vara ifyllt när ingen av :fields är ifyllda.',\n  same: ':attribute och :same måste matcha.',\n  size: {\n    numeric: ':attribute måste vara :size.',\n    string: ':attribute måste vara :size tecken lång.'\n  },\n  string: ':attribute måste vara en sträng.',\n  url: ':attribute formatet är ogiltigt.',\n  regex: ':attribute formatet är ogiltigt.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: \":attribute mora biti sprejet.\",\n  active_url: \":attribute ni pravilen.\",\n  after: \":attribute mora biti za datumom :date.\",\n  after_or_equal: \":attribute mora biti za ali enak :date.\",\n  alpha: \":attribute lahko vsebuje samo črke.\",\n  alpha_dash: \":attribute lahko vsebuje samo črke, številke in črtice.\",\n  alpha_num: \":attribute lahko vsebuje samo črke in številke.\",\n  attributes: {},\n  array: \":attribute mora biti polje.\",\n  before: \":attribute mora biti pred datumom :date.\",\n  before_or_equal: \":attribute mora biti pred ali enak :date.\",\n  between: {\n    numeric: \":attribute mora biti med :min in :max.\",\n    file: \":attribute mora biti med :min in :max kilobajti.\",\n    string: \":attribute mora biti med :min in :max znaki.\",\n    array: \":attribute mora imeti med :min in :max elementov.\"\n  },\n  boolean: \":attribute polje mora biti 1 ali 0\",\n  confirmed: \":attribute potrditev se ne ujema.\",\n  date: \":attribute ni veljaven datum.\",\n  date_format: \":attribute se ne ujema z obliko :format.\",\n  different: \":attribute in :other mora biti drugačen.\",\n  digits: \":attribute mora imeti :digits cifer.\",\n  digits_between: \":attribute mora biti med :min in :max ciframi.\",\n  dimensions: \":attribute ima napačne dimenzije slike.\",\n  distinct: \":attribute je duplikat.\",\n  email: \":attribute mora biti veljaven e-poštni naslov.\",\n  exists: \"izbran :attribute je neveljaven.\",\n  file: \":attribute mora biti datoteka.\",\n  filled: \":attribute mora biti izpolnjen.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute mora biti slika.\",\n  in: \"izbran :attribute je neveljaven.\",\n  in_array: \":attribute ne obstaja v :other.\",\n  integer: \":attribute mora biti število.\",\n  ip: \":attribute mora biti veljaven IP naslov.\",\n  ipv4: \":attribute mora biti veljaven IPv4 naslov.\",\n  ipv6: \":attribute mora biti veljaven IPv6 naslov.\",\n  json: \":attribute mora biti veljaven JSON tekst.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":attribute ne sme biti večje od :max.\",\n    file: \":attribute ne sme biti večje :max kilobajtov.\",\n    string: \":attribute ne sme biti večje :max znakov.\",\n    array: \":attribute ne smejo imeti več kot :max elementov.\"\n  },\n  mimes: \":attribute mora biti datoteka tipa: :values.\",\n  mimetypes: \":attribute mora biti datoteka tipa: :values.\",\n  min: {\n    numeric: \":attribute mora biti vsaj dolžine :min.\",\n    file: \":attribute mora imeti vsaj :min kilobajtov.\",\n    string: \":attribute mora imeti vsaj :min znakov.\",\n    array: \":attribute mora imeti vsaj :min elementov.\"\n  },\n  not_in: \"izbran :attribute je neveljaven.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":attribute mora biti število.\",\n  present: \"Polje :attribute mora biti prisotno.\",\n  regex: \"Format polja :attribute je neveljaven.\",\n  required: \"Polje :attribute je obvezno.\",\n  required_if: \"Polje :attribute je obvezno, če je :other enak :value.\",\n  required_unless: \"Polje :attribute je obvezno, razen če je :other v :values.\",\n  required_with: \"Polje :attribute je obvezno, če je :values prisoten.\",\n  required_with_all: \"Polje :attribute je obvezno, če so :values prisoten.\",\n  required_without: \"Polje :attribute je obvezno, če :values ni prisoten.\",\n  required_without_all: \"Polje :attribute je obvezno, če :values niso prisotni.\",\n  same: \"Polje :attribute in :other se morata ujemati.\",\n  size: {\n    numeric: \":attribute mora biti :size.\",\n    file: \":attribute mora biti :size kilobajtov.\",\n    string: \":attribute mora biti :size znakov.\",\n    array: \":attribute mora vsebovati :size elementov.\"\n  },\n  string: \":attribute mora biti tekst.\",\n  timezone: \":attribute mora biti časovna cona.\",\n  unique: \":attribute je že zaseden.\",\n  uploaded: \"Nalaganje :attribute ni uspelo.\",\n  url: \":attribute format je neveljaven.\"\n};\n","module.exports = {\n  accepted: \":attribute duhet të pranohet.\",\n  active_url: \":attribute nuk është adresë e saktë.\",\n  after: \":attribute duhet të jetë datë pas :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \":attribute mund të përmbajë vetëm shkronja.\",\n  alpha_dash: \":attribute mund të përmbajë vetëm shkronja, numra, dhe viza.\",\n  alpha_num: \":attribute mund të përmbajë vetëm shkronja dhe numra.\",\n  attributes: {},\n  array: \":attribute duhet të jetë një bashkësi (array).\",\n  before: \":attribute duhet të jetë datë para :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \":attribute duhet të jetë midis :min - :max.\",\n    file: \":attribute duhet të jetë midis :min - :max kilobajtëve.\",\n    string: \":attribute duhet të jetë midis :min - :max karaktereve.\",\n    array: \":attribute duhet të jetë midis :min - :max elementëve.\"\n  },\n  boolean: \"Fusha :attribute duhet të jetë e vërtetë ose e gabuar\",\n  confirmed: \":attribute konfirmimi nuk përputhet.\",\n  date: \":attribute nuk është një datë e saktë.\",\n  date_format: \":attribute nuk i përshtatet formatit :format.\",\n  different: \":attribute dhe :other duhet të jenë të ndryshme.\",\n  digits: \":attribute duhet të jetë :digits shifra.\",\n  digits_between: \":attribute duhet të jetë midis :min dhe :max shifra.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \":attribute formati është i pasaktë.\",\n  exists: \":attribute përzgjedhur është i/e pasaktë.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Fusha :attribute është e kërkuar.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute duhet të jetë imazh.\",\n  in: \":attribute përzgjedhur është i/e pasaktë.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \":attribute duhet të jetë numër i plotë.\",\n  ip: \":attribute duhet të jetë një IP adresë e saktë.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"The :attribute must be a valid JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \":attribute nuk mund të jetë më tepër se :max.\",\n    file: \":attribute nuk mund të jetë më tepër se :max kilobajtë.\",\n    string: \":attribute nuk mund të jetë më tepër se :max karaktere.\",\n    array: \":attribute nuk mund të ketë më tepër se :max elemente.\"\n  },\n  mimes: \":attribute duhet të jetë një dokument i tipit: :values.\",\n  mimetypes: \":attribute duhet të jetë një dokument i tipit: :values.\",\n  min: {\n    numeric: \":attribute nuk mund të jetë më pak se :min.\",\n    file: \":attribute nuk mund të jetë më pak se :min kilobajtë.\",\n    string: \":attribute nuk mund të jetë më pak se :min karaktere.\",\n    array: \":attribute nuk mund të ketë më pak se :min elemente.\"\n  },\n  not_in: \":attribute përzgjedhur është i/e pasaktë.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \":attribute duhet të jetë një numër.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Formati i :attribute është i pasaktë.\",\n  required: \"Fusha :attribute është e kërkuar.\",\n  required_if: \"Fusha :attribute është e kërkuar kur :other është :value.\",\n  required_unless: \"The :attribute field is required unless :other is in :values.\",\n  required_with: \"Fusha :attribute është e kërkuar kur :values ekziston.\",\n  required_with_all: \"Fusha :attribute është e kërkuar kur :values ekziston.\",\n  required_without: \"Fusha :attribute është e kërkuar kur :values nuk ekziston.\",\n  required_without_all: \"Fusha :attribute është e kërkuar kur nuk ekziston asnjë nga :values.\",\n  same: \":attribute dhe :other duhet të përputhen.\",\n  size: {\n    numeric: \":attribute duhet të jetë :size.\",\n    file: \":attribute duhet të jetë :size kilobajtë.\",\n    string: \":attribute duhet të jetë :size karaktere.\",\n    array: \":attribute duhet të ketë :size elemente.\"\n  },\n  string: \":attribute duhet të jetë varg.\",\n  timezone: \":attribute duhet të jetë zonë e saktë.\",\n  unique: \":attribute është marrë tashmë.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Formati i :attribute është i pasaktë.\"\n};\n","module.exports = {\n  accepted: \"Polje :attribute mora biti prihvaćeno.\",\n  active_url: \"Polje :attribute nije validan URL.\",\n  after: \"Polje :attribute mora biti datum posle :date.\",\n  after_or_equal: \"The :attribute must be a date after or equal to :date.\",\n  alpha: \"Polje :attribute može sadržati samo slova.\",\n  alpha_dash: \"Polje :attribute može sadržati samo slova, brojeve i povlake.\",\n  alpha_num: \"Polje :attribute može sadržati samo slova i brojeve.\",\n  attributes: {},\n  array: \"Polje :attribute mora sadržati nekih niz stavki.\",\n  before: \"Polje :attribute mora biti datum pre :date.\",\n  before_or_equal: \"The :attribute must be a date before or equal to :date.\",\n  between: {\n    numeric: \"Polje :attribute mora biti između :min - :max.\",\n    file: \"Fajl :attribute mora biti između :min - :max kilobajta.\",\n    string: \"Polje :attribute mora biti između :min - :max karaktera.\",\n    array: \"Polje :attribute mora biti između :min - :max stavki.\"\n  },\n  boolean: \"Polje :attribute mora biti tačno ili netačno\",\n  confirmed: \"Potvrda polja :attribute se ne poklapa.\",\n  date: \"Polje :attribute nije važeći datum.\",\n  date_format: \"Polje :attribute ne odgovora prema formatu :format.\",\n  different: \"Polja :attribute i :other moraju biti različita.\",\n  digits: \"Polje :attribute mora sadržati :digits šifri.\",\n  digits_between: \"Polje :attribute mora biti izemđu :min i :max šifri.\",\n  dimensions: \"The :attribute has invalid image dimensions.\",\n  distinct: \"The :attribute field has a duplicate value.\",\n  email: \"Format polja :attribute nije validan.\",\n  exists: \"Odabrano polje :attribute nije validno.\",\n  file: \"The :attribute must be a file.\",\n  filled: \"Polje :attribute je obavezno.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Polje :attribute mora biti slika.\",\n  in: \"Odabrano polje :attribute nije validno.\",\n  in_array: \"The :attribute field does not exist in :other.\",\n  integer: \"Polje :attribute mora biti broj.\",\n  ip: \"Polje :attribute mora biti validna IP adresa.\",\n  ipv4: \"The :attribute must be a valid IPv4 address.\",\n  ipv6: \"The :attribute must be a valid IPv6 address.\",\n  json: \"The :attribute must be a valid JSON string.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Polje :attribute mora biti manje od :max.\",\n    file: \"Polje :attribute mora biti manje od :max kilobajta.\",\n    string: \"Polje :attribute mora sadržati manje od :max karaktera.\",\n    array: \"Polje :attribute ne smije da image više od :max stavki.\"\n  },\n  mimes: \"Polje :attribute mora biti fajl tipa: :values.\",\n  mimetypes: \"Polje :attribute mora biti fajl tipa: :values.\",\n  min: {\n    numeric: \"Polje :attribute mora biti najmanje :min.\",\n    file: \"Fajl :attribute mora biti najmanje :min kilobajta.\",\n    string: \"Polje :attribute mora sadržati najmanje :min karaktera.\",\n    array: \"Polje :attribute mora sadrzati najmanje :min stavku.\"\n  },\n  not_in: \"Odabrani element polja :attribute nije validan.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Polje :attribute mora biti broj.\",\n  present: \"The :attribute field must be present.\",\n  regex: \"Format polja :attribute nije validan.\",\n  required: \"Polje :attribute je obavezno.\",\n  required_if: \"Polje :attribute je potrebno kada polje :other sadrži :value.\",\n  required_unless: \"The :attribute field is required unless :other is in :values.\",\n  required_with: \"Polje :attribute je potrebno kada polje :values je prisutan.\",\n  required_with_all: \"Polje :attribute je obavezno kada je :values prikazano.\",\n  required_without: \"Polje :attribute je potrebno kada polje :values nije prisutan.\",\n  required_without_all: \"Polje :attribute je potrebno kada nijedan od sledeći polja :values nisu prisutni.\",\n  same: \"Polja :attribute i :other se moraju poklapati.\",\n  size: {\n    numeric: \"Polje :attribute mora biti :size.\",\n    file: \"Fajl :attribute mora biti :size kilobajta.\",\n    string: \"Polje :attribute mora biti :size karaktera.\",\n    array: \"Polje :attribute mora sadržati :size stavki.\"\n  },\n  string: \"Polje :attribute mora sadržati slova.\",\n  timezone: \"Polje :attribute mora biti ispravna vremenska zona.\",\n  unique: \"Polje :attribute već postoji.\",\n  uploaded: \"The :attribute failed to upload.\",\n  url: \"Format polja :attribute ne važi.\"\n};\n","module.exports = {\n  accepted: \":attribute måste accepteras.\",\n  active_url: \":attribute är inte en giltig webbadress.\",\n  after: \":attribute måste vara ett datum efter den :date.\",\n  after_or_equal: \":attribute måste vara ett datum senare eller samma dag som :date.\",\n  alpha: \":attribute får endast innehålla bokstäver.\",\n  alpha_dash: \":attribute får endast innehålla bokstäver, siffror och bindestreck.\",\n  alpha_num: \":attribute får endast innehålla bokstäver och siffror.\",\n  array: \":attribute måste vara en array.\",\n  before: \":attribute måste vara ett datum innan den :date.\",\n  before_or_equal: \":attribute måste vara ett datum före eller samma dag som :date.\",\n  between: {\n    numeric: \":attribute måste vara en siffra mellan :min och :max.\",\n    file: \":attribute måste vara mellan :min till :max kilobyte stor.\",\n    string: \":attribute måste innehålla :min till :max tecken.\",\n    array: \":attribute måste innehålla mellan :min - :max objekt.\"\n  },\n  boolean: \":attribute måste vara sant eller falskt.\",\n  confirmed: \":attribute bekräftelsen matchar inte.\",\n  date: \":attribute är inte ett giltigt datum.\",\n  date_format: \":attribute matchar inte formatet :format.\",\n  different: \":attribute och :other får inte vara lika.\",\n  digits: \":attribute måste vara :digits tecken.\",\n  digits_between: \":attribute måste vara mellan :min och :max tecken.\",\n  dimensions: \":attribute har felaktiga bilddimensioner.\",\n  distinct: \":attribute innehåller fler än en repetition av samma element.\",\n  email: \":attribute måste innehålla en korrekt e-postadress.\",\n  exists: \":attribute är ogiltigt.\",\n  file: \":attribute måste vara en fil.\",\n  filled: \":attribute är obligatoriskt.\",\n  gt: {\n    numeric: \":attribute måste vara större än :value.\",\n    file: \":attribute måste vara större än :value kilobyte stor.\",\n    string: \":attribute måste vara längre än :value tecken.\",\n    array: \":attribute måste innehålla fler än :value objekt.\"\n  },\n  gte: {\n    numeric: \":attribute måste vara lika med eller större än :value.\",\n    file: \":attribute måste vara lika med eller större än :value kilobyte stor.\",\n    string: \":attribute måste vara lika med eller längre än :value tecken.\",\n    array: \":attribute måste innehålla lika många eller fler än :value objekt.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \":attribute måste vara en bild.\",\n  in: \":attribute är ogiltigt.\",\n  in_array: \":attribute finns inte i :other.\",\n  integer: \":attribute måste vara en siffra.\",\n  ip: \":attribute måste vara en giltig IP-adress.\",\n  ipv4: \":attribute måste vara en giltig IPv4-adress.\",\n  ipv6: \":attribute måste vara en giltig IPv6-adress.\",\n  json: \":attribute måste vara en giltig JSON-sträng.\",\n  lt: {\n    numeric: \":attribute måste vara mindre än :value.\",\n    file: \":attribute måste vara mindre än :value kilobyte stor.\",\n    string: \":attribute måste vara kortare än :value tecken.\",\n    array: \":attribute måste innehålla färre än :value objekt.\"\n  },\n  lte: {\n    numeric: \":attribute måste vara lika med eller mindre än :value.\",\n    file: \":attribute måste vara lika med eller mindre än :value kilobyte stor.\",\n    string: \":attribute måste vara lika med eller kortare än :value tecken.\",\n    array: \":attribute måste innehålla lika många eller färre än :value objekt.\"\n  },\n  max: {\n    numeric: \":attribute får inte vara större än :max.\",\n    file: \":attribute får max vara :max kilobyte stor.\",\n    string: \":attribute får max innehålla :max tecken.\",\n    array: \":attribute får inte innehålla mer än :max objekt.\"\n  },\n  mimes: \":attribute måste vara en fil av typen: :values.\",\n  mimetypes: \":attribute måste vara en fil av typen: :values.\",\n  min: {\n    numeric: \":attribute måste vara större än :min.\",\n    file: \":attribute måste vara minst :min kilobyte stor.\",\n    string: \":attribute måste innehålla minst :min tecken.\",\n    array: \":attribute måste innehålla minst :min objekt.\"\n  },\n  not_in: \":attribute är ogiltigt.\",\n  not_regex: \"Formatet för :attribute är ogiltigt.\",\n  numeric: \":attribute måste vara en siffra.\",\n  present: \":attribute måste finnas med.\",\n  regex: \":attribute har ogiltigt format.\",\n  required: \":attribute är obligatoriskt.\",\n  required_if: \":attribute är obligatoriskt när :other är :value.\",\n  required_unless: \":attribute är obligatoriskt när inte :other finns bland :values.\",\n  required_with: \":attribute är obligatoriskt när :values är ifyllt.\",\n  required_with_all: \":attribute är obligatoriskt när :values är ifyllt.\",\n  required_without: \":attribute är obligatoriskt när :values ej är ifyllt.\",\n  required_without_all: \":attribute är obligatoriskt när ingen av :values är ifyllt.\",\n  same: \":attribute och :other måste vara lika.\",\n  size: {\n    numeric: \":attribute måste vara :size.\",\n    file: \":attribute får endast vara :size kilobyte stor.\",\n    string: \":attribute måste innehålla :size tecken.\",\n    array: \":attribute måste innehålla :size objekt.\"\n  },\n  string: \":attribute måste vara en sträng.\",\n  timezone: \":attribute måste vara en giltig tidszon.\",\n  unique: \":attribute används redan.\",\n  uploaded: \":attribute kunde inte laddas upp.\",\n  url: \":attribute har ett ogiltigt format.\"\n};\n","module.exports = {\n  accepted: ':attribute kabul edilmeli.',\n  after: ':attribute alanı :after alanından sonra olmalıdır.',\n  after_or_equal: ':attribute alanı :after_or_equal alanına eşit veya sonra olmalıdır.',\n  alpha: ':attribute alanı sadece harflerden oluşabilir.',\n  alpha_dash: ':attribute alanı sadece alfa-nümerik, tire ve alt çizgi karakterlerden oluşabilir.',\n  alpha_num: ':attribute alanı alfa-nümerik olmalıdır.',\n  before: ':attribute alanı :before alanından önce olmalıdır.',\n  before_or_equal: ':attribute alanı :before_or_equal alanına eşit veya önce olmalıdır.',\n  between: ':attribute alanı :min ile :max arasında olabilir.',\n  confirmed: ':attribute uyuşmuyor.',\n  email: ':attribute formatı geçersiz.',\n  date: ':attribute geöerli bir tarih alanı değil.',\n  def: ':attribute hatalar içeriyor.',\n  digits: ':attribute sadece rakamlardan oluşabilir.',\n  digits_between: ':attribute :min ile :max arasında rakam olmalıdır.',\n  different: ':attribute ve :different farklı olmalı.',\n  in: 'Seçilen :attribute geçerli değil.',\n  integer: ':attribute tam sayı olmalı.',\n  hex: ':attribute onaltılık formatta olmalı.',\n  min: {\n    numeric: ':attribute en az :min olmalı.',\n    string: ':attribute en az :min karakter uzunluğunda olmalı.'\n  },\n  max: {\n    numeric: ':attribute en çok :max olabilir.',\n    string: ':attribute uzunluğu en çok :max karakter uzunluğunda olabilir.'\n  },\n  not_in: 'Seçilen :attribute geçerli değil.',\n  numeric: ':attribute sayı olmalı.',\n  present: ':attribute alanı bulunmalıdır (ancak boş olabilir).',\n  required: ':attribute alanı gerekli.',\n  required_if: ':attribute alanı :other alanı :value olduğunda gerekli.',\n  required_unless: ':attribute alanı :other alanı :value değilse gereklidir.',\n  required_with: ':attribute alanı :field boş değilse gereklidir.',\n  required_with_all: ':attribute alanı :fields alanları boş değilse gereklidir.',\n  required_without: ':attribute alanı :field alanı boşsa gereklidir.',\n  required_without_all: ':attribute alanı :fields alanları boşsa gereklidir.',\n  same: ':attribute ve :same aynı olmalı.',\n  size: {\n    numeric: ':attribute :size olmalı.',\n    string: ':attribute :size karakter uzunluğunda olmalı.'\n  },\n  string: ':attribute alfa-numerik olmalı.',\n  url: ':attribute formatı geçersiz.',\n  regex: ':attribute formatı geçersiz.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attribute повиннен бути прийнятий.',\n  alpha: 'Поле :attribute може складатись тільки з літер.',\n  alpha_dash: 'Поле :attribute може складатись тільки з літер, чисел, дефісів та символів підкреслення.',\n  alpha_num: 'Поле :attribute може складатись тільки з літер та чисел.',\n  between: 'Значення поля :attribute повинно знаходитись між :min і :max.',\n  confirmed: 'Поле :attribute не співпадає з підтвердженням.',\n  email: 'Значення поля :attribute повинно бути існуючою електронною адресою.',\n  def: 'Поле :attribute містить помилки.',\n  digits: 'Довжина числового поля :attribute повинна бути :digits.',\n  digits_between: 'Довжина цифрового поля :attribute повинна бути від :min до :max.',\n  different: 'Поля :attribute і :different повинні відрізнятись.',\n  in: 'Обране значення для :attribute помилкове.',\n  integer: 'Значення поля :attribute повинно бути цілим числом.',\n  hex: 'Значення поля :attribute повинно бути шістнадцяткового формату',\n  min: {\n    numeric: 'Значення поля :attribute повинно бути більшим або рівним :min.',\n    string: 'Кількість символів в полі :attribute повинна бути не менше :min.'\n  },\n  max: {\n    numeric: 'Значення поля :attribute повинно бути менше або рівне :max.',\n    string: 'Кількість символів в полі :attribute не може превищувати :max.'\n  },\n  not_in: 'Обране значення для :attribute помилкове.',\n  numeric: 'Значення поля :attribute повинно бути числом.',\n  present: 'Поле :attribute повинно бути присутнім (але може бути пустим).',\n  required: 'Поле :attribute обов\\'язкове для заповнення.',\n  required_if: 'Поле :attribute потрібне у випадку коли значення поля :other рівне :value.',\n  same: 'Значеня поля :attribute повинно співпадати з :same.',\n  size: {\n    numeric: 'Значення поля :attribute повинно бути рівним :size.',\n    string: 'Кількість символів в полі :attribute повинна бути рівною :size.'\n  },\n  url: 'Поле :attribute повинне містити валідний URL.',\n  regex: 'Неправильний формат значення :attribute.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: \"Ви повинні прийняти :attribute.\",\n  active_url: \"Поле :attribute не є правильним URL.\",\n  after: \"Поле :attribute має містити дату не раніше :date.\",\n  after_or_equal: \"Поле :attribute має містити дату не раніше або дорівнюватися :date.\",\n  alpha: \"Поле :attribute має містити лише літери.\",\n  alpha_dash: \"Поле :attribute має містити лише літери, цифри та підкреслення.\",\n  alpha_num: \"Поле :attribute має містити лише літери та цифри.\",\n  attributes: {},\n  array: \"Поле :attribute має бути масивом.\",\n  before: \"Поле :attribute має містити дату не пізніше :date.\",\n  before_or_equal: \"Поле :attribute має містити дату не пізніше або дорівнюватися :date.\",\n  between: {\n    numeric: \"Поле :attribute має бути між :min та :max.\",\n    file: \"Розмір файлу в полі :attribute має бути не менше :min та не більше :max кілобайт.\",\n    string: \"Текст в полі :attribute має бути не менше :min та не більше :max символів.\",\n    array: \"Поле :attribute має містити від :min до :max елементів.\"\n  },\n  boolean: \"Поле :attribute повинне містити логічний тип.\",\n  confirmed: \"Поле :attribute не збігається з підтвердженням.\",\n  date: \"Поле :attribute не є датою.\",\n  date_format: \"Поле :attribute не відповідає формату :format.\",\n  different: \"Поля :attribute та :other повинні бути різними.\",\n  digits: \"Довжина цифрового поля :attribute повинна дорівнювати :digits.\",\n  digits_between: \"Довжина цифрового поля :attribute повинна бути від :min до :max.\",\n  dimensions: \"Поле :attribute містіть неприпустимі розміри зображення.\",\n  distinct: \"Поле :attribute містить значення, яке дублюється.\",\n  email: \"Поле :attribute повинне містити коректну електронну адресу.\",\n  file: \"Поле :attribute має містити файл.\",\n  filled: \"Поле :attribute є обов'язковим для заповнення.\",\n  exists: \"Вибране для :attribute значення не коректне.\",\n  gt: {\n    numeric: \"The :attribute must be greater than :value.\",\n    file: \"The :attribute must be greater than :value kilobytes.\",\n    string: \"The :attribute must be greater than :value characters.\",\n    array: \"The :attribute must have more than :value items.\"\n  },\n  gte: {\n    numeric: \"The :attribute must be greater than or equal :value.\",\n    file: \"The :attribute must be greater than or equal :value kilobytes.\",\n    string: \"The :attribute must be greater than or equal :value characters.\",\n    array: \"The :attribute must have :value items or more.\"\n  },\n  hex: \"The :attribute field should have hexadecimal format\",\n  image: \"Поле :attribute має містити зображення.\",\n  in: \"Вибране для :attribute значення не коректне.\",\n  in_array: \"Значення поля :attribute не міститься в :other.\",\n  integer: \"Поле :attribute має містити ціле число.\",\n  ip: \"Поле :attribute має містити IP адресу.\",\n  ipv4: \"Поле :attribute має містити IPv4 адресу.\",\n  ipv6: \"Поле :attribute має містити IPv6 адресу.\",\n  json: \"Дані поля :attribute мають бути в форматі JSON.\",\n  lt: {\n    numeric: \"The :attribute must be less than :value.\",\n    file: \"The :attribute must be less than :value kilobytes.\",\n    string: \"The :attribute must be less than :value characters.\",\n    array: \"The :attribute must have less than :value items.\"\n  },\n  lte: {\n    numeric: \"The :attribute must be less than or equal :value.\",\n    file: \"The :attribute must be less than or equal :value kilobytes.\",\n    string: \"The :attribute must be less than or equal :value characters.\",\n    array: \"The :attribute must not have more than :value items.\"\n  },\n  max: {\n    numeric: \"Поле :attribute має бути не більше :max.\",\n    file: \"Файл в полі :attribute має бути не більше :max кілобайт.\",\n    string: \"Текст в полі :attribute повинен мати довжину не більшу за :max.\",\n    array: \"Поле :attribute повинне містити не більше :max елементів.\"\n  },\n  mimes: \"Поле :attribute повинне містити файл одного з типів: :values.\",\n  mimetypes: \"Поле :attribute повинне містити файл одного з типів: :values.\",\n  min: {\n    numeric: \"Поле :attribute повинне бути не менше :min.\",\n    file: \"Розмір файлу в полі :attribute має бути не меншим :min кілобайт.\",\n    string: \"Текст в полі :attribute повинен містити не менше :min символів.\",\n    array: \"Поле :attribute повинне містити не менше :min елементів.\"\n  },\n  not_in: \"Вибране для :attribute значення не коректне.\",\n  not_regex: \"The :attribute format is invalid.\",\n  numeric: \"Поле :attribute повинно містити число.\",\n  present: \"Поле :attribute повинне бути присутнє.\",\n  regex: \"Поле :attribute має хибний формат.\",\n  required: \"Поле :attribute є обов'язковим для заповнення.\",\n  required_if: \"Поле :attribute є обов'язковим для заповнення, коли :other є рівним :value.\",\n  required_unless: \"Поле :attribute є обов'язковим для заповнення, коли :other відрізняється від :values\",\n  required_with: \"Поле :attribute є обов'язковим для заповнення, коли :values вказано.\",\n  required_with_all: \"Поле :attribute є обов'язковим для заповнення, коли :values вказано.\",\n  required_without: \"Поле :attribute є обов'язковим для заповнення, коли :values не вказано.\",\n  required_without_all: \"Поле :attribute є обов'язковим для заповнення, коли :values не вказано.\",\n  same: \"Поля :attribute та :other мають співпадати.\",\n  size: {\n    numeric: \"Поле :attribute має бути довжини :size.\",\n    file: \"Файл в полі :attribute має бути розміром :size кілобайт.\",\n    string: \"Текст в полі :attribute повинен містити :size символів.\",\n    array: \"Поле :attribute повинне містити :size елементів.\"\n  },\n  string: \"Поле :attribute повинне містити текст.\",\n  timezone: \"Поле :attribute повинне містити коректну часову зону.\",\n  unique: \"Таке значення поля :attribute вже існує.\",\n  uploaded: \"Завантаження поля :attribute не вдалося.\",\n  url: \"Формат поля :attribute неправильний.\"\n};\n","module.exports = {\n  accepted: ':attribute phải được chấp nhận.',\n  alpha: 'Trường :attribute phải là ký tự',\n  alpha_dash: ':attribute chỉ chấp nhận ký tự chữ cái, số, dấu gạch chéo và gạch dưới.',\n  alpha_num: ':attribute phải là ký tự chữ cái hoặc chữ số.',\n  between: ':attribute phải nằm trong khoảng :min và :max.',\n  confirmed: ':attribute xác nhận không trùng khớp.',\n  email: ':attribute không phải là email.',\n  date: ':attribute không phải là ngày hợp lệ',\n  def: 'Thuộc tính :attribute có lỗi.',\n  digits: ':attribute phải là số và có chiều dài bằng :digits.',\n  digits_between: 'Độ dài của trường :attribute phải nằm trong khoảng :min and :max chữ số.',\n  different: 'Giá trị của hai trường :attribute và :different phải khác nhau.',\n  in: 'Giá trị được chọn của :attribute không hợp lệ.',\n  integer: ':attribute phải là số nguyên.',\n  hex: 'The :attribute should have hexadecimal format',\n  min: {\n    numeric: ':attribute phải lớn hơn hoặc bằng :min.',\n    string: ':attribute phải có ít nhất :min ký tự.'\n  },\n  max: {\n    numeric: ':attribute phải nhỏ hơn hoặc bằng :max.',\n    string: ':attribute phải có ít hơn :max ký tự.'\n  },\n  not_in: 'Giá trị được chọn của trường :attribute không hợp lệ.',\n  numeric: ':attribute phải là số.',\n  present: 'Trường :attribute phải có mặt (nhưng có thể để trống).',\n  required: ':attribute bắt buộc nhập.',\n  required_if: ':attribute là bắt buộc khi :other có giá trị :value.',\n  same: 'Giá trị của :attribute và :same phải như nhau.',\n  size: {\n    numeric: ':attribute phải có chiều dài của bằng :size.',\n    string: 'Số ký tự của :attribute phải là :size ký tự.'\n  },\n  string: ':attribute không phải là một chuỗi',\n  url: ':attribute không phải là một Url hợp lệ.',\n  regex: ':attribute không đúng định dạng',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attribute必须是可接受的.',\n  alpha: ':attribute只能包含字母.',\n  alpha_dash: ':attribute只能包含字母,连字符和下划线.',\n  alpha_num: ':attribute只能包含字母和数字.',\n  between: ':attribute的(大小,长度等)只能在:min和:max之间.',\n  confirmed: ':attribute确认不一致.',\n  email: ':attribute格式不正确.',\n  date: ':attribute日期格式错误.',\n  def: ':attribute属性错误.',\n  digits: ':attribute必须是:digits位小数.',\n  digits_between: ':attribute 必须是介于 :min 和 :max 位的数字。',\n  different: ':attribute和:different必须不同.',\n  in: '选择的:attribute无效',\n  integer: ':attribute必须是一个整数.',\n  hex: 'The :attribute should have hexadecimal format',\n  min: {\n    numeric: ':attribute不能小于:min.',\n    string: ':attribute长度不能小于:min.'\n  },\n  max: {\n    numeric: ':attribute不能大于:max.',\n    string: ':attribute长度不能大于:max.'\n  },\n  not_in: '所选的:attribute无效.',\n  numeric: ':attribute必须是一个数字.',\n  present: 'The :attribute field must be present (but can be empty).',\n  required: ':attribute不能为空.',\n  required_if: '当:other是:value时,:attribute不能为空.',\n  same: ':attribute和:same必须一致.',\n  size: {\n    numeric: ':attribute必须等于:size.',\n    string: ':attribute的长度必须等于:size.'\n  },\n  string: ':attribute必须是一个字符串.',\n  url: ':attribute格式不正确.',\n  regex: ':attribute格式不正确.',\n  attributes: {}\n};\n","module.exports = {\n  accepted: ':attribute必須接受。',\n  alpha: ':attribute只能包含字母。',\n  alpha_dash: ':attribute只能包含字母，連字符和下划線。',\n  alpha_num: ':attribute只能包含字母和數字。',\n  between: ':attribute的值只能在:min和:max之間。',\n  confirmed: ':attribute與確認輸入不一致。',\n  email: ':attribute的格式錯誤。',\n  date: ':attribute的日期格式錯誤。',\n  def: ':attribute屬性錯誤。',\n  digits: ':attribute必須是:digits位小數。',\n  digits_between: ':attribute 必須介於 :min 至 :max 位數字。',\n  different: ':attribute和:different必須不同。',\n  in: '選擇的:attribute無效',\n  integer: ':attribute必須是一個整數。',\n  hex: ':attribute 必須是十六進位格式',\n  min: {\n    numeric: ':attribute不能小於:min。',\n    string: ':attribute的長度不能小於:min.'\n  },\n  max: {\n    numeric: ':attribute不能大於:max。',\n    string: ':attribute的長度不能大於:max.'\n  },\n  not_in: '所選的:attribute無效。',\n  numeric: ':attribute必須是一個數字。',\n  present: ':attribute 一定要有值 (可以是空值)。',\n  required: ':attribute不能空白。',\n  required_if: '當:other是:value時,:attribute不能空白。',\n  same: ':attribute和:same必須一致。',\n  size: {\n    numeric: ':attribute必須等於:size。',\n    string: ':attribute的長度必須等於:size.'\n  },\n  string: ':attribute必須是一個字串。',\n  url: ':attribute格式不正確。',\n  regex: ':attribute格式不正確。',\n  attributes: {}\n};\n","var map = {\n\t\"./ar\": \"./node_modules/validatorjs/src/lang/ar.js\",\n\t\"./ar.js\": \"./node_modules/validatorjs/src/lang/ar.js\",\n\t\"./az\": \"./node_modules/validatorjs/src/lang/az.js\",\n\t\"./az.js\": \"./node_modules/validatorjs/src/lang/az.js\",\n\t\"./be\": \"./node_modules/validatorjs/src/lang/be.js\",\n\t\"./be.js\": \"./node_modules/validatorjs/src/lang/be.js\",\n\t\"./bg\": \"./node_modules/validatorjs/src/lang/bg.js\",\n\t\"./bg.js\": \"./node_modules/validatorjs/src/lang/bg.js\",\n\t\"./bs\": \"./node_modules/validatorjs/src/lang/bs.js\",\n\t\"./bs.js\": \"./node_modules/validatorjs/src/lang/bs.js\",\n\t\"./ca\": \"./node_modules/validatorjs/src/lang/ca.js\",\n\t\"./ca.js\": \"./node_modules/validatorjs/src/lang/ca.js\",\n\t\"./cs\": \"./node_modules/validatorjs/src/lang/cs.js\",\n\t\"./cs.js\": \"./node_modules/validatorjs/src/lang/cs.js\",\n\t\"./cy\": \"./node_modules/validatorjs/src/lang/cy.js\",\n\t\"./cy.js\": \"./node_modules/validatorjs/src/lang/cy.js\",\n\t\"./da\": \"./node_modules/validatorjs/src/lang/da.js\",\n\t\"./da.js\": \"./node_modules/validatorjs/src/lang/da.js\",\n\t\"./de\": \"./node_modules/validatorjs/src/lang/de.js\",\n\t\"./de.js\": \"./node_modules/validatorjs/src/lang/de.js\",\n\t\"./el\": \"./node_modules/validatorjs/src/lang/el.js\",\n\t\"./el.js\": \"./node_modules/validatorjs/src/lang/el.js\",\n\t\"./en\": \"./node_modules/validatorjs/src/lang/en.js\",\n\t\"./en.js\": \"./node_modules/validatorjs/src/lang/en.js\",\n\t\"./es\": \"./node_modules/validatorjs/src/lang/es.js\",\n\t\"./es.js\": \"./node_modules/validatorjs/src/lang/es.js\",\n\t\"./et\": \"./node_modules/validatorjs/src/lang/et.js\",\n\t\"./et.js\": \"./node_modules/validatorjs/src/lang/et.js\",\n\t\"./eu\": \"./node_modules/validatorjs/src/lang/eu.js\",\n\t\"./eu.js\": \"./node_modules/validatorjs/src/lang/eu.js\",\n\t\"./fa\": \"./node_modules/validatorjs/src/lang/fa.js\",\n\t\"./fa.js\": \"./node_modules/validatorjs/src/lang/fa.js\",\n\t\"./fi\": \"./node_modules/validatorjs/src/lang/fi.js\",\n\t\"./fi.js\": \"./node_modules/validatorjs/src/lang/fi.js\",\n\t\"./fr\": \"./node_modules/validatorjs/src/lang/fr.js\",\n\t\"./fr.js\": \"./node_modules/validatorjs/src/lang/fr.js\",\n\t\"./hr\": \"./node_modules/validatorjs/src/lang/hr.js\",\n\t\"./hr.js\": \"./node_modules/validatorjs/src/lang/hr.js\",\n\t\"./hu\": \"./node_modules/validatorjs/src/lang/hu.js\",\n\t\"./hu.js\": \"./node_modules/validatorjs/src/lang/hu.js\",\n\t\"./id\": \"./node_modules/validatorjs/src/lang/id.js\",\n\t\"./id.js\": \"./node_modules/validatorjs/src/lang/id.js\",\n\t\"./it\": \"./node_modules/validatorjs/src/lang/it.js\",\n\t\"./it.js\": \"./node_modules/validatorjs/src/lang/it.js\",\n\t\"./ja\": \"./node_modules/validatorjs/src/lang/ja.js\",\n\t\"./ja.js\": \"./node_modules/validatorjs/src/lang/ja.js\",\n\t\"./ka\": \"./node_modules/validatorjs/src/lang/ka.js\",\n\t\"./ka.js\": \"./node_modules/validatorjs/src/lang/ka.js\",\n\t\"./ko\": \"./node_modules/validatorjs/src/lang/ko.js\",\n\t\"./ko.js\": \"./node_modules/validatorjs/src/lang/ko.js\",\n\t\"./lt\": \"./node_modules/validatorjs/src/lang/lt.js\",\n\t\"./lt.js\": \"./node_modules/validatorjs/src/lang/lt.js\",\n\t\"./lv\": \"./node_modules/validatorjs/src/lang/lv.js\",\n\t\"./lv.js\": \"./node_modules/validatorjs/src/lang/lv.js\",\n\t\"./mk\": \"./node_modules/validatorjs/src/lang/mk.js\",\n\t\"./mk.js\": \"./node_modules/validatorjs/src/lang/mk.js\",\n\t\"./mn\": \"./node_modules/validatorjs/src/lang/mn.js\",\n\t\"./mn.js\": \"./node_modules/validatorjs/src/lang/mn.js\",\n\t\"./ms\": \"./node_modules/validatorjs/src/lang/ms.js\",\n\t\"./ms.js\": \"./node_modules/validatorjs/src/lang/ms.js\",\n\t\"./nb_NO\": \"./node_modules/validatorjs/src/lang/nb_NO.js\",\n\t\"./nb_NO.js\": \"./node_modules/validatorjs/src/lang/nb_NO.js\",\n\t\"./nl\": \"./node_modules/validatorjs/src/lang/nl.js\",\n\t\"./nl.js\": \"./node_modules/validatorjs/src/lang/nl.js\",\n\t\"./pl\": \"./node_modules/validatorjs/src/lang/pl.js\",\n\t\"./pl.js\": \"./node_modules/validatorjs/src/lang/pl.js\",\n\t\"./pt\": \"./node_modules/validatorjs/src/lang/pt.js\",\n\t\"./pt.js\": \"./node_modules/validatorjs/src/lang/pt.js\",\n\t\"./pt_BR\": \"./node_modules/validatorjs/src/lang/pt_BR.js\",\n\t\"./pt_BR.js\": \"./node_modules/validatorjs/src/lang/pt_BR.js\",\n\t\"./ro\": \"./node_modules/validatorjs/src/lang/ro.js\",\n\t\"./ro.js\": \"./node_modules/validatorjs/src/lang/ro.js\",\n\t\"./ru\": \"./node_modules/validatorjs/src/lang/ru.js\",\n\t\"./ru.js\": \"./node_modules/validatorjs/src/lang/ru.js\",\n\t\"./se\": \"./node_modules/validatorjs/src/lang/se.js\",\n\t\"./se.js\": \"./node_modules/validatorjs/src/lang/se.js\",\n\t\"./sl\": \"./node_modules/validatorjs/src/lang/sl.js\",\n\t\"./sl.js\": \"./node_modules/validatorjs/src/lang/sl.js\",\n\t\"./sq\": \"./node_modules/validatorjs/src/lang/sq.js\",\n\t\"./sq.js\": \"./node_modules/validatorjs/src/lang/sq.js\",\n\t\"./sr\": \"./node_modules/validatorjs/src/lang/sr.js\",\n\t\"./sr.js\": \"./node_modules/validatorjs/src/lang/sr.js\",\n\t\"./sv\": \"./node_modules/validatorjs/src/lang/sv.js\",\n\t\"./sv.js\": \"./node_modules/validatorjs/src/lang/sv.js\",\n\t\"./tr\": \"./node_modules/validatorjs/src/lang/tr.js\",\n\t\"./tr.js\": \"./node_modules/validatorjs/src/lang/tr.js\",\n\t\"./ua\": \"./node_modules/validatorjs/src/lang/ua.js\",\n\t\"./ua.js\": \"./node_modules/validatorjs/src/lang/ua.js\",\n\t\"./uk\": \"./node_modules/validatorjs/src/lang/uk.js\",\n\t\"./uk.js\": \"./node_modules/validatorjs/src/lang/uk.js\",\n\t\"./vi\": \"./node_modules/validatorjs/src/lang/vi.js\",\n\t\"./vi.js\": \"./node_modules/validatorjs/src/lang/vi.js\",\n\t\"./zh\": \"./node_modules/validatorjs/src/lang/zh.js\",\n\t\"./zh.js\": \"./node_modules/validatorjs/src/lang/zh.js\",\n\t\"./zh_TW\": \"./node_modules/validatorjs/src/lang/zh_TW.js\",\n\t\"./zh_TW.js\": \"./node_modules/validatorjs/src/lang/zh_TW.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/validatorjs/src/lang sync recursive ^\\\\.\\\\/.*$\";","var Attributes = require('./attributes');\n\nvar Messages = function(lang, messages) {\n  this.lang = lang;\n  this.messages = messages;\n  this.customMessages = {};\n  this.attributeNames = {};\n};\n\nMessages.prototype = {\n  constructor: Messages,\n\n  /**\n   * Set custom messages\n   *\n   * @param {object} customMessages\n   * @return {void}\n   */\n  _setCustom: function(customMessages) {\n    this.customMessages = customMessages || {};\n  },\n\n  /**\n   * Set custom attribute names.\n   *\n   * @param {object} attributes\n   */\n  _setAttributeNames: function(attributes) {\n    this.attributeNames = attributes;\n  },\n\n  /**\n   * Set the attribute formatter.\n   *\n   * @param {fuction} func\n   * @return {void}\n   */\n  _setAttributeFormatter: function(func) {\n    this.attributeFormatter = func;\n  },\n\n  /**\n   * Get attribute name to display.\n   *\n   * @param  {string} attribute\n   * @return {string}\n   */\n  _getAttributeName: function(attribute) {\n    var name = attribute;\n    if (this.attributeNames.hasOwnProperty(attribute)) {\n      return this.attributeNames[attribute];\n    } else if (this.messages.attributes.hasOwnProperty(attribute)) {\n      name = this.messages.attributes[attribute];\n    }\n\n    if (this.attributeFormatter) {\n      name = this.attributeFormatter(name);\n    }\n\n    return name;\n  },\n\n  /**\n   * Get all messages\n   *\n   * @return {object}\n   */\n  all: function() {\n    return this.messages;\n  },\n\n  /**\n   * Render message\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  render: function(rule) {\n    if (rule.customMessage) {\n      return rule.customMessage;\n    }\n    var template = this._getTemplate(rule);\n\n    var message;\n    if (Attributes.replacements[rule.name]) {\n      message = Attributes.replacements[rule.name].apply(this, [template, rule]);\n    } else {\n      message = this._replacePlaceholders(rule, template, {});\n    }\n\n    return message;\n  },\n\n  /**\n   * Get the template to use for given rule\n   *\n   * @param  {Rule} rule\n   * @return {string}\n   */\n  _getTemplate: function(rule) {\n\n    var messages = this.messages;\n    var template = messages.def;\n    var customMessages = this.customMessages;\n    var formats = [rule.name + '.' + rule.attribute, rule.name];\n\n    for (var i = 0, format; i < formats.length; i++) {\n      format = formats[i];\n      if (customMessages.hasOwnProperty(format)) {\n        template = customMessages[format];\n        break;\n      } else if (messages.hasOwnProperty(format)) {\n        template = messages[format];\n        break;\n      }\n    }\n\n    if (typeof template === 'object') {\n      template = template[rule._getValueType()];\n    }\n\n    return template;\n  },\n\n  /**\n   * Replace placeholders in the template using the data object\n   *\n   * @param  {Rule} rule\n   * @param  {string} template\n   * @param  {object} data\n   * @return {string}\n   */\n  _replacePlaceholders: function(rule, template, data) {\n    var message, attribute;\n\n    data.attribute = this._getAttributeName(rule.attribute);\n    data[rule.name] = data[rule.name] || rule.getParameters().join(',');\n\n    if (typeof template === 'string' && typeof data === 'object') {\n      message = template;\n\n      for (attribute in data) {\n        message = message.replace(new RegExp(':' + attribute, 'g'), data[attribute]);\n      }\n    }\n\n    return message;\n  }\n\n};\n\nmodule.exports = Messages;\n","\n// https://docs.microsoft.com/en-us/office/troubleshoot/excel/determine-a-leap-year\nfunction leapYear(year) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nfunction checkFalsePositiveDates(dateString = '') {\n\n  if (dateString.length === 10) {\n\n    // massage input to use yyyy-mm-dd format\n    // we support yyyy/mm/dd or yyyy.mm.dd\n    let normalizedDate = dateString.replace('.', '-').replace('/', '-');\n    let parts = normalizedDate.split('-');\n    if (parts.length === 3) {\n      if (parts[0].length === 4) {\n        // yyyy-mm-dd format\n        let y = parseInt(parts[0]);\n        let m = parseInt(parts[1]);\n        let d = parseInt(parts[2]);\n        if (m === 2) {\n          // return leapYear(y) ? d <= 29 : d <= 28;\n          if (leapYear(y)) {\n            if (d > 29) {\n              return false;\n            }\n          } else {\n            if (d > 28) {\n              return false;\n            }\n          }\n        }\n        if (m === 4 || m === 6 || m === 9 || m === 11) {\n          if (d > 30) {\n            return false;\n          }\n        }\n      }\n    }\n    return true; // we are not in feburary, proceed\n  }\n  return true; // we are not testing formatted date, proceed to rest of validation\n}\n\nfunction isValidDate(dateString) {\n  let testDate;\n  if (typeof dateString === 'number') {\n    testDate = new Date(dateString);\n    if (typeof testDate === 'object') {\n      return true;\n    }\n  }\n  // first convert incoming string to date object and see if it correct date and format\n  testDate = new Date(dateString);\n  if (typeof testDate === 'object') {\n    if (testDate.toString() === 'Invalid Date') {\n      return false;\n    }\n\n    /**\n     * Check for false positive dates\n     * perform special check on february as JS `new Date` incorrectly returns valid date\n     * Eg.  let newDate = new Date('2020-02-29')  // returns as March 02 2020\n     * Eg.  let newDate = new Date('2019-02-29')  // returns as March 01 2020\n     * Eg.  let newDate = new Date('2019-04-31')  // returns as April 30 2020\n     */\n    if (!checkFalsePositiveDates(dateString)) {\n      return false;\n    }\n\n    // valid date object and not a february date\n    return true;\n  }\n\n  // First check for the pattern\n  var regex_date = /^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/;\n\n  if (!regex_date.test(dateString)) {\n    return false;\n  }\n\n  // Parse the date parts to integers\n  var parts = dateString.split(\"-\");\n  var day = parseInt(parts[2], 10);\n  var month = parseInt(parts[1], 10);\n  var year = parseInt(parts[0], 10);\n\n  // Check the ranges of month and year\n  if (year < 1000 || year > 3000 || month == 0 || month > 12) {\n    return false;\n  }\n\n  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  // Adjust for leap years\n  if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0)) {\n    monthLength[1] = 29;\n  }\n\n  // Check the range of the day\n  return day > 0 && day <= monthLength[month - 1];\n}\n\nvar rules = {\n  required: function (val) {\n    var str;\n\n    if (val === undefined || val === null) {\n      return false;\n    }\n\n    str = String(val).replace(/\\s/g, \"\");\n    return str.length > 0 ? true : false;\n  },\n\n  required_if: function (val, req, attribute) {\n    req = this.getParameters();\n    if (this.validator._objectPath(this.validator.input, req[0]) === req[1]) {\n      return this.validator.getRule(\"required\").validate(val);\n    }\n\n    return true;\n  },\n\n  required_unless: function (val, req, attribute) {\n    req = this.getParameters();\n    if (this.validator._objectPath(this.validator.input, req[0]) !== req[1]) {\n      return this.validator.getRule(\"required\").validate(val);\n    }\n\n    return true;\n  },\n\n  required_with: function (val, req, attribute) {\n    if (this.validator._objectPath(this.validator.input, req)) {\n      return this.validator.getRule(\"required\").validate(val);\n    }\n\n    return true;\n  },\n\n  required_with_all: function (val, req, attribute) {\n    req = this.getParameters();\n\n    for (var i = 0; i < req.length; i++) {\n      if (!this.validator._objectPath(this.validator.input, req[i])) {\n        return true;\n      }\n    }\n\n    return this.validator.getRule(\"required\").validate(val);\n  },\n\n  required_without: function (val, req, attribute) {\n    if (this.validator._objectPath(this.validator.input, req)) {\n      return true;\n    }\n\n    return this.validator.getRule(\"required\").validate(val);\n  },\n\n  required_without_all: function (val, req, attribute) {\n    req = this.getParameters();\n\n    for (var i = 0; i < req.length; i++) {\n      if (this.validator._objectPath(this.validator.input, req[i])) {\n        return true;\n      }\n    }\n\n    return this.validator.getRule(\"required\").validate(val);\n  },\n\n  boolean: function (val) {\n    return (\n      val === true ||\n      val === false ||\n      val === 0 ||\n      val === 1 ||\n      val === \"0\" ||\n      val === \"1\" ||\n      val === \"true\" ||\n      val === \"false\"\n    );\n  },\n\n  // compares the size of strings\n  // with numbers, compares the value\n  size: function (val, req, attribute) {\n    if (val) {\n      req = parseFloat(req);\n\n      var size = this.getSize();\n\n      return size === req;\n    }\n\n    return true;\n  },\n\n  string: function (val, req, attribute) {\n    return typeof val === \"string\";\n  },\n\n  sometimes: function (val) {\n    return true;\n  },\n\n  /**\n   * Compares the size of strings or the value of numbers if there is a truthy value\n   */\n  min: function (val, req, attribute) {\n    var size = this.getSize();\n    return size >= req;\n  },\n\n  /**\n   * Compares the size of strings or the value of numbers if there is a truthy value\n   */\n  max: function (val, req, attribute) {\n    var size = this.getSize();\n    return size <= req;\n  },\n\n  between: function (val, req, attribute) {\n    req = this.getParameters();\n    var size = this.getSize();\n    var min = parseFloat(req[0], 10);\n    var max = parseFloat(req[1], 10);\n    return size >= min && size <= max;\n  },\n\n  email: function (val) {\n    // Added umlaut support https://github.com/skaterdav85/validatorjs/issues/308\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!re.test(val)) {\n      // added support domain 3-n level https://github.com/skaterdav85/validatorjs/issues/384\n      re = /^((?:[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]|[^\\u0000-\\u007F])+@(?:[a-zA-Z0-9]|[^\\u0000-\\u007F])(?:(?:[a-zA-Z0-9-]|[^\\u0000-\\u007F]){0,61}(?:[a-zA-Z0-9]|[^\\u0000-\\u007F]))?(?:\\.(?:[a-zA-Z0-9]|[^\\u0000-\\u007F])(?:(?:[a-zA-Z0-9-]|[^\\u0000-\\u007F]){0,61}(?:[a-zA-Z0-9]|[^\\u0000-\\u007F]))?)+)*$/;\n    }\n    return re.test(val);\n  },\n\n  numeric: function (val) {\n    var num;\n\n    num = Number(val); // tries to convert value to a number. useful if value is coming from form element\n\n    if (typeof num === \"number\" && !isNaN(num) && typeof val !== \"boolean\") {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  array: function (val) {\n    return val instanceof Array;\n  },\n\n  url: function (url) {\n    return /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)/i.test(url);\n  },\n\n  alpha: function (val) {\n    return /^[a-zA-Z]+$/.test(val);\n  },\n\n  alpha_dash: function (val) {\n    return /^[a-zA-Z0-9_\\-]+$/.test(val);\n  },\n\n  alpha_num: function (val) {\n    return /^[a-zA-Z0-9]+$/.test(val);\n  },\n\n  same: function (val, req) {\n    var val1 = this.validator._flattenObject(this.validator.input)[req];\n    var val2 = val;\n\n    if (val1 === val2) {\n      return true;\n    }\n\n    return false;\n  },\n\n  different: function (val, req) {\n    var val1 = this.validator._flattenObject(this.validator.input)[req];\n    var val2 = val;\n\n    if (val1 !== val2) {\n      return true;\n    }\n\n    return false;\n  },\n\n  in: function (val, req) {\n    var list, i;\n\n    if (val) {\n      list = this.getParameters();\n    }\n\n    if (val && !(val instanceof Array)) {\n      var localValue = val;\n\n      for (i = 0; i < list.length; i++) {\n        if (typeof list[i] === \"string\") {\n          localValue = String(val);\n        }\n\n        if (localValue === list[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    if (val && val instanceof Array) {\n      for (i = 0; i < val.length; i++) {\n        if (list.indexOf(val[i]) < 0) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  not_in: function (val, req) {\n    var list = this.getParameters();\n    var len = list.length;\n    var returnVal = true;\n\n    for (var i = 0; i < len; i++) {\n      var localValue = val;\n\n      if (typeof list[i] === \"string\") {\n        localValue = String(val);\n      }\n\n      if (localValue === list[i]) {\n        returnVal = false;\n        break;\n      }\n    }\n\n    return returnVal;\n  },\n\n  accepted: function (val) {\n    if (val === \"on\" || val === \"yes\" || val === 1 || val === \"1\" || val === true) {\n      return true;\n    }\n\n    return false;\n  },\n\n  confirmed: function (val, req, key) {\n    var confirmedKey = key + \"_confirmation\";\n\n    if (this.validator.input[confirmedKey] === val) {\n      return true;\n    }\n\n    return false;\n  },\n\n  integer: function (val) {\n    return String(parseInt(val, 10)) === String(val);\n  },\n\n  digits: function (val, req) {\n    var numericRule = this.validator.getRule('numeric');\n    if (numericRule.validate(val) && String(val.trim()).length === parseInt(req)) {\n      return true;\n    }\n\n    return false;\n  },\n\n  digits_between: function (val) {\n    var numericRule = this.validator.getRule(\"numeric\");\n    var req = this.getParameters();\n    var valueDigitsCount = String(val).length;\n    var min = parseFloat(req[0], 10);\n    var max = parseFloat(req[1], 10);\n\n    if (numericRule.validate(val) && valueDigitsCount >= min && valueDigitsCount <= max) {\n      return true;\n    }\n\n    return false;\n  },\n\n  regex: function (val, req) {\n    let reqPattern = req;\n    var mod = /[g|i|m]{1,3}$/;\n    var flag = req.match(mod);\n    flag = flag ? flag[0] : \"\";\n\n    req = req.replace(mod, \"\").slice(1, -1);\n    req = new RegExp(req, flag);\n    return !!req.test(val);\n  },\n\n  date: function (val, format) {\n    return isValidDate(val);\n  },\n\n  present: function (val) {\n    return typeof val !== \"undefined\";\n  },\n\n  after: function (val, req) {\n    var val1 = this.validator.input[req];\n    var val2 = val;\n\n    if (!isValidDate(val1)) {\n      return false;\n    }\n    if (!isValidDate(val2)) {\n      return false;\n    }\n\n    if (new Date(val1).getTime() < new Date(val2).getTime()) {\n      return true;\n    }\n\n    return false;\n  },\n\n  after_or_equal: function (val, req) {\n    var val1 = this.validator.input[req];\n    var val2 = val;\n\n    if (!isValidDate(val1)) {\n      return false;\n    }\n    if (!isValidDate(val2)) {\n      return false;\n    }\n\n    if (new Date(val1).getTime() <= new Date(val2).getTime()) {\n      return true;\n    }\n\n    return false;\n  },\n\n  before: function (val, req) {\n    var val1 = this.validator.input[req];\n    var val2 = val;\n\n    if (!isValidDate(val1)) {\n      return false;\n    }\n    if (!isValidDate(val2)) {\n      return false;\n    }\n\n    if (new Date(val1).getTime() > new Date(val2).getTime()) {\n      return true;\n    }\n\n    return false;\n  },\n\n  before_or_equal: function (val, req) {\n    var val1 = this.validator.input[req];\n    var val2 = val;\n\n    if (!isValidDate(val1)) {\n      return false;\n    }\n    if (!isValidDate(val2)) {\n      return false;\n    }\n\n    if (new Date(val1).getTime() >= new Date(val2).getTime()) {\n      return true;\n    }\n\n    return false;\n  },\n\n  hex: function (val) {\n    return /^[0-9a-f]+$/i.test(val);\n  },\n\n  ipv4: function (val, req, attribute) {\n    if (typeof val != 'string')\n      return false;\n\n    // regex to check that each octet is valid\n    var er = /^[0-9]+$/;\n    // ipv4 octets are delimited by dot\n    octets = val.split('.');\n    // check 1: ipv4 address should contains 4 octets\n    if (octets.length != 4)\n      return false;\n\n    for (let i = 0; i < octets.length; i++) {\n      const element = octets[i];\n      // check 2: each octet should be integer bigger than 0\n      if (!er.test(element))\n        return false;\n\n      // check 3: each octet value should be less than 256\n      var octetValue = parseInt(element);\n      if (octetValue >= 256)\n        return false;\n    }\n\n    // if all checks passed, we know it's valid IPv4 address!\n    return true;\n  },\n\n  ipv6: function (val, req, attribute) {\n    if (typeof val != 'string')\n      return false;\n\n    // regex to check that each hextet is valid\n    var er = /^[0-9a-f]+$/;\n    // ipv6 hextets are delimited by colon\n    hextets = val.split(':');\n\n    // check 1: ipv6 should contain only one consecutive colons\n    colons = val.match(/::/);\n    if (colons != null && val.match(/::/g).length > 1)\n      return false;\n\n    // check 2: ipv6 should not be ending or starting with colon\n    //          edge case: not with consecutive colons\n    if (val[0] == ':' && (colons == null || (colons != null && colons.index != 0)))\n      return false;\n    if (val[val.length - 1] == ':' && (colons == null || (colons != null && colons.index != val.length - 2)))\n      return false;\n\n    // check 3: ipv6 should contain no less than 3 sector\n    //         minimum ipv6 addres - ::1\n    if (3 > hextets.length)\n      return false;\n\n    // check 4: ipv6 should contain no more than 8 sectors\n    //         only 1 edge case: when first or last sector is ommited\n    var isEdgeCase = (hextets.length == 9 && colons != null && (colons.index == 0 || colons.index == val.length - 2));\n    if (hextets.length > 8 && !isEdgeCase)\n      return false;\n\n    // check 5: ipv6 should contain exactly one consecutive colons if it has less than 8 sectors\n    if (hextets.length != 8 && colons == null)\n      return false;\n\n    for (let i = 0; i < hextets.length; i++) {\n      const element = hextets[i];\n\n      if (element.length == 0)\n        continue;\n\n      // check 6: all of hextets should contain numbers from 0 to f (in hexadecimal)\n      if (!er.test(element))\n        return false;\n\n      // check 7: all of hextet values should be less then ffff (in hexadeimal)\n      //          checking using length of hextet. lowest invalid value's length is 5.\n      //          so all valid hextets are length of 4 or less\n      if (element.length > 4)\n        return false;\n    }\n    return true;\n  },\n\n  ip: function (val, req, attribute) {\n    return rules['ipv4'](val, req, attribute) || rules['ipv6'](val, req, attribute);\n  }\n\n};\n\nvar missedRuleValidator = function () {\n  throw new Error(\"Validator `\" + this.name + \"` is not defined!\");\n};\nvar missedRuleMessage;\n\nfunction Rule(name, fn, async) {\n  this.name = name;\n  this.fn = fn;\n  this.passes = null;\n  this._customMessage = undefined;\n  this.async = async;\n}\n\nRule.prototype = {\n  /**\n   * Validate rule\n   *\n   * @param  {mixed} inputValue\n   * @param  {mixed} ruleValue\n   * @param  {string} attribute\n   * @param  {function} callback\n   * @return {boolean|undefined}\n   */\n  validate: function (inputValue, ruleValue, attribute, callback) {\n    var _this = this;\n    this._setValidatingData(attribute, inputValue, ruleValue);\n    if (typeof callback === \"function\") {\n      this.callback = callback;\n      var handleResponse = function (passes, message) {\n        _this.response(passes, message);\n      };\n\n      if (this.async) {\n        return this._apply(inputValue, ruleValue, attribute, handleResponse);\n      } else {\n        return handleResponse(this._apply(inputValue, ruleValue, attribute));\n      }\n    }\n    return this._apply(inputValue, ruleValue, attribute);\n  },\n\n  /**\n   * Apply validation function\n   *\n   * @param  {mixed} inputValue\n   * @param  {mixed} ruleValue\n   * @param  {string} attribute\n   * @param  {function} callback\n   * @return {boolean|undefined}\n   */\n  _apply: function (inputValue, ruleValue, attribute, callback) {\n    var fn = this.isMissed() ? missedRuleValidator : this.fn;\n\n    return fn.apply(this, [inputValue, ruleValue, attribute, callback]);\n  },\n\n  /**\n   * Set validating data\n   *\n   * @param {string} attribute\n   * @param {mixed} inputValue\n   * @param {mixed} ruleValue\n   * @return {void}\n   */\n  _setValidatingData: function (attribute, inputValue, ruleValue) {\n    this.attribute = attribute;\n    this.inputValue = inputValue;\n    this.ruleValue = ruleValue;\n  },\n\n  /**\n   * Get parameters\n   *\n   * @return {array}\n   */\n  getParameters: function () {\n    var value = [];\n\n    if (typeof this.ruleValue === \"string\") {\n      value = this.ruleValue.split(\",\");\n    }\n\n    if (typeof this.ruleValue === \"number\") {\n      value.push(this.ruleValue);\n    }\n\n    if (this.ruleValue instanceof Array) {\n      value = this.ruleValue;\n    }\n\n    return value;\n  },\n\n  /**\n   * Get true size of value\n   *\n   * @return {integer|float}\n   */\n  getSize: function () {\n    var value = this.inputValue;\n\n    if (value instanceof Array) {\n      return value.length;\n    }\n\n    if (typeof value === \"number\") {\n      return value;\n    }\n\n    if (this.validator._hasNumericRule(this.attribute)) {\n      return parseFloat(value, 10);\n    }\n\n    return value.length;\n  },\n\n  /**\n   * Get the type of value being checked; numeric or string.\n   *\n   * @return {string}\n   */\n  _getValueType: function () {\n    if (typeof this.inputValue === \"number\" || this.validator._hasNumericRule(this.attribute)) {\n      return \"numeric\";\n    }\n\n    return \"string\";\n  },\n\n  /**\n   * Set the async callback response\n   *\n   * @param  {boolean|undefined} passes  Whether validation passed\n   * @param  {string|undefined} message Custom error message\n   * @return {void}\n   */\n  response: function (passes, message) {\n    this.passes = passes === undefined || passes === true;\n    this._customMessage = message;\n    this.callback(this.passes, message);\n  },\n\n  /**\n   * Set validator instance\n   *\n   * @param {Validator} validator\n   * @return {void}\n   */\n  setValidator: function (validator) {\n    this.validator = validator;\n  },\n\n  /**\n   * Check if rule is missed\n   *\n   * @return {boolean}\n   */\n  isMissed: function () {\n    return typeof this.fn !== \"function\";\n  },\n\n  get customMessage() {\n    return this.isMissed() ? missedRuleMessage : this._customMessage;\n  }\n};\n\nvar manager = {\n  /**\n   * List of async rule names\n   *\n   * @type {Array}\n   */\n  asyncRules: [],\n\n  /**\n   * Implicit rules (rules to always validate)\n   *\n   * @type {Array}\n   */\n  implicitRules: [\n    \"required\",\n    \"required_if\",\n    \"required_unless\",\n    \"required_with\",\n    \"required_with_all\",\n    \"required_without\",\n    \"required_without_all\",\n    \"accepted\",\n    \"present\"\n  ],\n\n  /**\n   * Get rule by name\n   *\n   * @param  {string} name\n   * @param {Validator}\n   * @return {Rule}\n   */\n  make: function (name, validator) {\n    var async = this.isAsync(name);\n    var rule = new Rule(name, rules[name], async);\n    rule.setValidator(validator);\n    return rule;\n  },\n\n  /**\n   * Determine if given rule is async\n   *\n   * @param  {string}  name\n   * @return {boolean}\n   */\n  isAsync: function (name) {\n    for (var i = 0, len = this.asyncRules.length; i < len; i++) {\n      if (this.asyncRules[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Determine if rule is implicit (should always validate)\n   *\n   * @param {string} name\n   * @return {boolean}\n   */\n  isImplicit: function (name) {\n    return this.implicitRules.indexOf(name) > -1;\n  },\n\n  /**\n   * Register new rule\n   *\n   * @param  {string}   name\n   * @param  {function} fn\n   * @return {void}\n   */\n  register: function (name, fn) {\n    rules[name] = fn;\n  },\n\n  /**\n   * Register new implicit rule\n   *\n   * @param  {string}   name\n   * @param  {function} fn\n   * @return {void}\n   */\n  registerImplicit: function (name, fn) {\n    this.register(name, fn);\n    this.implicitRules.push(name);\n  },\n\n  /**\n   * Register async rule\n   *\n   * @param  {string}   name\n   * @param  {function} fn\n   * @return {void}\n   */\n  registerAsync: function (name, fn) {\n    this.register(name, fn);\n    this.asyncRules.push(name);\n  },\n\n  /**\n   * Register implicit async rule\n   *\n   * @param  {string}   name\n   * @param  {function} fn\n   * @return {void}\n   */\n  registerAsyncImplicit: function (name, fn) {\n    this.registerImplicit(name, fn);\n    this.asyncRules.push(name);\n  },\n\n  registerMissedRuleValidator: function (fn, message) {\n    missedRuleValidator = fn;\n    missedRuleMessage = message;\n  }\n};\n\nmodule.exports = manager;\n","var Rules = require('./rules');\nvar Lang = require('./lang');\nvar Errors = require('./errors');\nvar Attributes = require('./attributes');\nvar AsyncResolvers = require('./async');\n\nvar Validator = function (input, rules, customMessages) {\n  var lang = Validator.getDefaultLang();\n  this.input = input || {};\n\n  this.messages = Lang._make(lang);\n  this.messages._setCustom(customMessages);\n  this.setAttributeFormatter(Validator.prototype.attributeFormatter);\n\n  this.errors = new Errors();\n  this.errorCount = 0;\n\n  this.hasAsync = false;\n  this.rules = this._parseRules(rules);\n};\n\nValidator.prototype = {\n\n  constructor: Validator,\n\n  /**\n   * Default language\n   *\n   * @type {string}\n   */\n  lang: 'en',\n\n  /**\n   * Numeric based rules\n   *\n   * @type {array}\n   */\n  numericRules: ['integer', 'numeric'],\n\n  /**\n   * Attribute formatter.\n   *\n   * @type {function}\n   */\n  attributeFormatter: Attributes.formatter,\n\n  /**\n   * Run validator\n   *\n   * @return {boolean} Whether it passes; true = passes, false = fails\n   */\n  check: function () {\n    var self = this;\n\n    for (var attribute in this.rules) {\n      var attributeRules = this.rules[attribute];\n      var inputValue = this._objectPath(this.input, attribute);\n\n      if (this._hasRule(attribute, ['sometimes']) && !this._suppliedWithData(attribute)) {\n        continue;\n      }\n\n      for (var i = 0, len = attributeRules.length, rule, ruleOptions, rulePassed; i < len; i++) {\n        ruleOptions = attributeRules[i];\n        rule = this.getRule(ruleOptions.name);\n\n        if (!this._isValidatable(rule, inputValue)) {\n          continue;\n        }\n\n        rulePassed = rule.validate(inputValue, ruleOptions.value, attribute);\n        if (!rulePassed) {\n          this._addFailure(rule);\n        }\n\n        if (this._shouldStopValidating(attribute, rulePassed)) {\n          break;\n        }\n      }\n    }\n\n    return this.errorCount === 0;\n  },\n\n  /**\n   * Run async validator\n   *\n   * @param {function} passes\n   * @param {function} fails\n   * @return {void}\n   */\n  checkAsync: function (passes, fails) {\n    var _this = this;\n    passes = passes || function () {};\n    fails = fails || function () {};\n\n    var failsOne = function (rule, message) {\n      _this._addFailure(rule, message);\n    };\n\n    var resolvedAll = function (allPassed) {\n      if (allPassed) {\n        passes();\n      } else {\n        fails();\n      }\n    };\n\n    var asyncResolvers = new AsyncResolvers(failsOne, resolvedAll);\n\n    var validateRule = function (inputValue, ruleOptions, attribute, rule) {\n      return function () {\n        var resolverIndex = asyncResolvers.add(rule);\n        rule.validate(inputValue, ruleOptions.value, attribute, function () {\n          asyncResolvers.resolve(resolverIndex);\n        });\n      };\n    };\n\n    for (var attribute in this.rules) {\n      var attributeRules = this.rules[attribute];\n      var inputValue = this._objectPath(this.input, attribute);\n\n      if (this._hasRule(attribute, ['sometimes']) && !this._suppliedWithData(attribute)) {\n        continue;\n      }\n\n      for (var i = 0, len = attributeRules.length, rule, ruleOptions; i < len; i++) {\n        ruleOptions = attributeRules[i];\n\n        rule = this.getRule(ruleOptions.name);\n\n        if (!this._isValidatable(rule, inputValue)) {\n          continue;\n        }\n\n        validateRule(inputValue, ruleOptions, attribute, rule)();\n      }\n    }\n\n    asyncResolvers.enableFiring();\n    asyncResolvers.fire();\n  },\n\n  /**\n   * Add failure and error message for given rule\n   *\n   * @param {Rule} rule\n   */\n  _addFailure: function (rule) {\n    var msg = this.messages.render(rule);\n    this.errors.add(rule.attribute, msg);\n    this.errorCount++;\n  },\n\n  /**\n   * Flatten nested object, normalizing { foo: { bar: 1 } } into: { 'foo.bar': 1 }\n   *\n   * @param  {object} nested object\n   * @return {object} flattened object\n   */\n  _flattenObject: function (obj) {\n    var flattened = {};\n\n    function recurse(current, property) {\n      if (!property && Object.getOwnPropertyNames(current).length === 0) {\n        return;\n      }\n      if (Object(current) !== current || Array.isArray(current)) {\n        flattened[property] = current;\n      } else {\n        var isEmpty = true;\n        for (var p in current) {\n          isEmpty = false;\n          recurse(current[p], property ? property + '.' + p : p);\n        }\n        if (isEmpty) {\n          flattened[property] = {};\n        }\n      }\n    }\n    if (obj) {\n      recurse(obj);\n    }\n    return flattened;\n  },\n\n  /**\n   * Extract value from nested object using string path with dot notation\n   *\n   * @param  {object} object to search in\n   * @param  {string} path inside object\n   * @return {any|void} value under the path\n   */\n  _objectPath: function (obj, path) {\n    if (Object.prototype.hasOwnProperty.call(obj, path)) {\n      return obj[path];\n    }\n\n    var keys = path.replace(/\\[(\\w+)\\]/g, '.$1').replace(/^\\./, '').split('.');\n    var copy = {};\n    for (var attr in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, attr)) {\n        copy[attr] = obj[attr];\n      }\n    }\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (typeof copy === 'object' && copy !== null && Object.hasOwnProperty.call(copy, keys[i])) {\n        copy = copy[keys[i]];\n      } else {\n        return;\n      }\n    }\n    return copy;\n  },\n\n  /**\n   * Parse rules, normalizing format into: { attribute: [{ name: 'age', value: 3 }] }\n   *\n   * @param  {object} rules\n   * @return {object}\n   */\n  _parseRules: function (rules) {\n\n    var parsedRules = {};\n    rules = this._flattenObject(rules);\n\n    for (var attribute in rules) {\n\n      var rulesArray = rules[attribute];\n\n      this._parseRulesCheck(attribute, rulesArray, parsedRules);\n    }\n    return parsedRules;\n\n\n  },\n\n  _parseRulesCheck: function (attribute, rulesArray, parsedRules, wildCardValues) {\n    if (attribute.indexOf('*') > -1) {\n      this._parsedRulesRecurse(attribute, rulesArray, parsedRules, wildCardValues);\n    } else {\n      this._parseRulesDefault(attribute, rulesArray, parsedRules, wildCardValues);\n    }\n  },\n\n  _parsedRulesRecurse: function (attribute, rulesArray, parsedRules, wildCardValues) {\n    var parentPath = attribute.substr(0, attribute.indexOf('*') - 1);\n    var propertyValue = this._objectPath(this.input, parentPath);\n\n    if (propertyValue) {\n      for (var propertyNumber = 0; propertyNumber < propertyValue.length; propertyNumber++) {\n        var workingValues = wildCardValues ? wildCardValues.slice() : [];\n        workingValues.push(propertyNumber);\n        this._parseRulesCheck(attribute.replace('*', propertyNumber), rulesArray, parsedRules, workingValues);\n      }\n    }\n  },\n\n  _parseRulesDefault: function (attribute, rulesArray, parsedRules, wildCardValues) {\n    var attributeRules = [];\n\n    if (rulesArray instanceof Array) {\n      rulesArray = this._prepareRulesArray(rulesArray);\n    }\n\n    if (typeof rulesArray === 'string') {\n      rulesArray = rulesArray.split('|');\n    }\n\n    for (var i = 0, len = rulesArray.length, rule; i < len; i++) {\n      rule = typeof rulesArray[i] === 'string' ? this._extractRuleAndRuleValue(rulesArray[i]) : rulesArray[i];\n      if (rule.value) {\n        rule.value = this._replaceWildCards(rule.value, wildCardValues);\n        this._replaceWildCardsMessages(wildCardValues);\n      }\n\n      if (Rules.isAsync(rule.name)) {\n        this.hasAsync = true;\n      }\n      attributeRules.push(rule);\n    }\n\n    parsedRules[attribute] = attributeRules;\n  },\n\n  _replaceWildCards: function (path, nums) {\n\n    if (!nums) {\n      return path;\n    }\n\n    var path2 = path;\n    nums.forEach(function (value) {\n      if(Array.isArray(path2)){\n        path2 = path2[0];\n      }\n      const pos = path2.indexOf('*');\n      if (pos === -1) {\n        return path2;\n      }\n      path2 = path2.substr(0, pos) + value + path2.substr(pos + 1);\n    });\n    if(Array.isArray(path)){\n      path[0] = path2;\n      path2 = path;\n    }\n    return path2;\n  },\n\n  _replaceWildCardsMessages: function (nums) {\n    var customMessages = this.messages.customMessages;\n    var self = this;\n    Object.keys(customMessages).forEach(function (key) {\n      if (nums) {\n        var newKey = self._replaceWildCards(key, nums);\n        customMessages[newKey] = customMessages[key];\n      }\n    });\n\n    this.messages._setCustom(customMessages);\n  },\n  /**\n   * Prepare rules if it comes in Array. Check for objects. Need for type validation.\n   *\n   * @param  {array} rulesArray\n   * @return {array}\n   */\n  _prepareRulesArray: function (rulesArray) {\n    var rules = [];\n\n    for (var i = 0, len = rulesArray.length; i < len; i++) {\n      if (typeof rulesArray[i] === 'object') {\n        for (var rule in rulesArray[i]) {\n          rules.push({\n            name: rule,\n            value: rulesArray[i][rule]\n          });\n        }\n      } else {\n        rules.push(rulesArray[i]);\n      }\n    }\n\n    return rules;\n  },\n\n  /**\n   * Determines if the attribute is supplied with the original data object.\n   *\n   * @param  {array} attribute\n   * @return {boolean}\n   */\n  _suppliedWithData: function (attribute) {\n    return this.input.hasOwnProperty(attribute);\n  },\n\n  /**\n   * Extract a rule and a value from a ruleString (i.e. min:3), rule = min, value = 3\n   *\n   * @param  {string} ruleString min:3\n   * @return {object} object containing the name of the rule and value\n   */\n  _extractRuleAndRuleValue: function (ruleString) {\n    var rule = {},\n      ruleArray;\n\n    rule.name = ruleString;\n\n    if (ruleString.indexOf(':') >= 0) {\n      ruleArray = ruleString.split(':');\n      rule.name = ruleArray[0];\n      rule.value = ruleArray.slice(1).join(':');\n    }\n\n    return rule;\n  },\n\n  /**\n   * Determine if attribute has any of the given rules\n   *\n   * @param  {string}  attribute\n   * @param  {array}   findRules\n   * @return {boolean}\n   */\n  _hasRule: function (attribute, findRules) {\n    var rules = this.rules[attribute] || [];\n    for (var i = 0, len = rules.length; i < len; i++) {\n      if (findRules.indexOf(rules[i].name) > -1) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Determine if attribute has any numeric-based rules.\n   *\n   * @param  {string}  attribute\n   * @return {Boolean}\n   */\n  _hasNumericRule: function (attribute) {\n    return this._hasRule(attribute, this.numericRules);\n  },\n\n  /**\n   * Determine if rule is validatable\n   *\n   * @param  {Rule}   rule\n   * @param  {mixed}  value\n   * @return {boolean}\n   */\n  _isValidatable: function (rule, value) {\n    if (Array.isArray(value)) {\n      return true;\n    }\n    if (Rules.isImplicit(rule.name)) {\n      return true;\n    }\n\n    return this.getRule('required').validate(value);\n  },\n\n  /**\n   * Determine if we should stop validating.\n   *\n   * @param  {string} attribute\n   * @param  {boolean} rulePassed\n   * @return {boolean}\n   */\n  _shouldStopValidating: function (attribute, rulePassed) {\n\n    var stopOnAttributes = this.stopOnAttributes;\n    if (typeof stopOnAttributes === 'undefined' || stopOnAttributes === false || rulePassed === true) {\n      return false;\n    }\n\n    if (stopOnAttributes instanceof Array) {\n      return stopOnAttributes.indexOf(attribute) > -1;\n    }\n\n    return true;\n  },\n\n  /**\n   * Set custom attribute names.\n   *\n   * @param {object} attributes\n   * @return {void}\n   */\n  setAttributeNames: function (attributes) {\n    this.messages._setAttributeNames(attributes);\n  },\n\n  /**\n   * Set the attribute formatter.\n   *\n   * @param {fuction} func\n   * @return {void}\n   */\n  setAttributeFormatter: function (func) {\n    this.messages._setAttributeFormatter(func);\n  },\n\n  /**\n   * Get validation rule\n   *\n   * @param  {string} name\n   * @return {Rule}\n   */\n  getRule: function (name) {\n    return Rules.make(name, this);\n  },\n\n  /**\n   * Stop on first error.\n   *\n   * @param  {boolean|array} An array of attributes or boolean true/false for all attributes.\n   * @return {void}\n   */\n  stopOnError: function (attributes) {\n    this.stopOnAttributes = attributes;\n  },\n\n  /**\n   * Determine if validation passes\n   *\n   * @param {function} passes\n   * @return {boolean|undefined}\n   */\n  passes: function (passes) {\n    var async = this._checkAsync('passes', passes);\n    if (async) {\n      return this.checkAsync(passes);\n    }\n    return this.check();\n  },\n\n  /**\n   * Determine if validation fails\n   *\n   * @param {function} fails\n   * @return {boolean|undefined}\n   */\n  fails: function (fails) {\n    var async = this._checkAsync('fails', fails);\n    if (async) {\n      return this.checkAsync(function () {}, fails);\n    }\n    return !this.check();\n  },\n\n  /**\n   * Check if validation should be called asynchronously\n   *\n   * @param  {string}   funcName Name of the caller\n   * @param  {function} callback\n   * @return {boolean}\n   */\n  _checkAsync: function (funcName, callback) {\n    var hasCallback = typeof callback === 'function';\n    if (this.hasAsync && !hasCallback) {\n      throw funcName + ' expects a callback when async rules are being tested.';\n    }\n\n    return this.hasAsync || hasCallback;\n  }\n\n};\n\n/**\n * Set messages for language\n *\n * @param {string} lang\n * @param {object} messages\n * @return {this}\n */\nValidator.setMessages = function (lang, messages) {\n  Lang._set(lang, messages);\n  return this;\n};\n\n/**\n * Get messages for given language\n *\n * @param  {string} lang\n * @return {Messages}\n */\nValidator.getMessages = function (lang) {\n  return Lang._get(lang);\n};\n\n/**\n * Set default language to use\n *\n * @param {string} lang\n * @return {void}\n */\nValidator.useLang = function (lang) {\n  this.prototype.lang = lang;\n};\n\n/**\n * Get default language\n *\n * @return {string}\n */\nValidator.getDefaultLang = function () {\n  return this.prototype.lang;\n};\n\n/**\n * Set the attribute formatter.\n *\n * @param {fuction} func\n * @return {void}\n */\nValidator.setAttributeFormatter = function (func) {\n  this.prototype.attributeFormatter = func;\n};\n\n/**\n * Stop on first error.\n *\n * @param  {boolean|array} An array of attributes or boolean true/false for all attributes.\n * @return {void}\n */\nValidator.stopOnError = function (attributes) {\n  this.prototype.stopOnAttributes = attributes;\n};\n\n/**\n * Register custom validation rule\n *\n * @param  {string}   name\n * @param  {function} fn\n * @param  {string}   message\n * @return {void}\n */\nValidator.register = function (name, fn, message, fnReplacement) {\n  var lang = Validator.getDefaultLang();\n  Rules.register(name, fn);\n  Lang._setRuleMessage(lang, name, message);\n};\n\n/**\n * Register custom validation rule\n *\n * @param  {string}   name\n * @param  {function} fn\n * @param  {string}   message\n * @param  {function} fnReplacement\n * @return {void}\n */\nValidator.registerImplicit = function (name, fn, message, fnReplacement) {\n  var lang = Validator.getDefaultLang();\n  Rules.registerImplicit(name, fn);\n  Lang._setRuleMessage(lang, name, message);\n};\n\n/**\n * Register asynchronous validation rule\n *\n * @param  {string}   name\n * @param  {function} fn\n * @param  {string}   message\n * @return {void}\n */\nValidator.registerAsync = function (name, fn, message, fnReplacement) {\n  var lang = Validator.getDefaultLang();\n  Rules.registerAsync(name, fn);\n  Lang._setRuleMessage(lang, name, message);\n};\n\n/**\n * Register asynchronous validation rule\n *\n * @param  {string}   name\n * @param  {function} fn\n * @param  {string}   message\n * @return {void}\n */\nValidator.registerAsyncImplicit = function (name, fn, message) {\n  var lang = Validator.getDefaultLang();\n  Rules.registerAsyncImplicit(name, fn);\n  Lang._setRuleMessage(lang, name, message);\n};\n\n/**\n * Register validator for missed validation rule\n *\n * @param  {string}   name\n * @param  {function} fn\n * @param  {string}   message\n * @return {void}\n */\nValidator.registerMissedRuleValidator = function(fn, message) {\n  Rules.registerMissedRuleValidator(fn, message);\n};\n\nmodule.exports = Validator;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from \"react\";\r\nimport Validator from \"validatorjs\";\r\nimport { validationMessages } from \"./constant/validationMessages\";\r\n\r\nfunction formatBytes(bytes, decimals = 2) {\r\n  if (!+bytes) return '0 Bytes'\r\n\r\n  const k = 1024\r\n  const dm = decimals < 0 ? 0 : decimals\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n\r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\r\n}\r\n\r\nconst _registerConfirmPasswordValidations = (password) => {\r\n  Validator.register(\r\n    \"confirm_password\",\r\n    function (value) {\r\n      return value === password;\r\n    },\r\n    \"Password and confirm password should must match\"\r\n  );\r\n};\r\n\r\nconst _registerFileuploadValidations = () => {\r\n  Validator.register(\r\n    \"mimes\",\r\n    function (value, requirement, attribute) {\r\n      if (typeof value === 'string') {\r\n        return true;\r\n      }\r\n\r\n      const allowedExtensions = requirement ? requirement.split(','): [];\r\n      const fileExtension = value.name.split('.').pop();\r\n      if (!allowedExtensions.includes(fileExtension)) {\r\n        return false; // Invalid file type\r\n      }\r\n      return true;\r\n    },\r\n    \"The :attribute must be a file of type :mime_types\"\r\n  );\r\n\r\nValidator.register(\r\n    \"max_file_size\",\r\n    function (value, requirement, attribute) {\r\n        if (typeof value === 'string') {\r\n          return true;\r\n        }\r\n\r\n        if (value.size > Number(requirement)) {\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    },\r\n    \"Max file size is :max_size\"\r\n  );\r\n\r\n  Validator.register(\r\n    \"min_file_size\",\r\n    function (value, requirement, attribute) {\r\n        if (typeof value === 'string') {\r\n          return true;\r\n        }\r\n\r\n        if (value.size < Number(requirement)) {\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    },\r\n    \"Min file size is :min_size\"\r\n  );\r\n};\r\n\r\nconst imageValidationMessagesModification = (errors, rules) => {\r\n  for (let [field, errorMsgs] of Object.entries(errors)) {\r\n      errors[field] = errorMsgs.map(messages => {\r\n          if (messages.includes(':mime_types')) {\r\n\r\n              let attributeMimeTypes = rules[field].split('|').find(e => e.includes('mimes')).replace('mimes:', '')\r\n              messages = messages.replace(':mime_types', attributeMimeTypes).replace(':attribute', field)\r\n          }\r\n\r\n          if (messages.includes(':max_size')) {\r\n              let attributeValue = rules[field].split('|').find(e => e.includes('max_file_size')).replace('max_file_size:', '')\r\n              messages = messages.replace(':max_size', formatBytes(attributeValue))\r\n          }\r\n\r\n          if (messages.includes(':min_size')) {\r\n              let attributeValue = rules[field].split('|').find(e => e.includes('min_file_size')).replace('min_file_size:', '')\r\n              messages = messages.replace(':min_size', formatBytes(attributeValue))\r\n          }\r\n\r\n          return messages;\r\n      });\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nconst _registerValidations = (formState, rules) => {\r\n  _registerConfirmPasswordValidations(formState && formState.password != undefined ? formState.password : null)\r\n  _registerFileuploadValidations()\r\n}\r\n\r\nexport default function Validators({\r\n  setErrors: errorsData = null,\r\n  customValidationMessages = {},\r\n  formData = {},\r\n  rules = {},\r\n  children,\r\n}) {\r\n  let _formData = {...formData}\r\n  \r\n  const [submitted, setIsSubmitted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (submitted) {\r\n      let _isValidationFail = isValidationFail();\r\n      if (false === _isValidationFail) {\r\n        setErrors({});\r\n      }\r\n    }\r\n  }, [formData]);\r\n\r\n  const [errors, setErrors] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    if (errorsData) {\r\n      setErrors(errorsData);\r\n    }\r\n  }, [errorsData]);\r\n\r\n  const onSubmit = (callback) => {\r\n    let isValidationFailed = isValidationFail();\r\n    if (false === isValidationFailed) {\r\n      setErrors({});\r\n      callback(_formData);\r\n      setIsSubmitted(false);\r\n    } else {\r\n      setIsSubmitted(true);\r\n    }\r\n  };\r\n\r\n  const resetValidation = () => {\r\n    setErrors({})\r\n    setIsSubmitted(false);\r\n  }\r\n\r\n  const isValidationFail = () => {\r\n    Validator.setMessages(\"en\", validationMessages);\r\n\r\n    _registerValidations(_formData, rules);\r\n\r\n    let validation = new Validator(_formData, rules, customValidationMessages);\r\n    validation.setAttributeFormatter(function (attribute) {\r\n      return attribute;\r\n    });\r\n\r\n    if (validation.fails()) {\r\n      let validationErrors = imageValidationMessagesModification(validation.errors.errors, rules);\r\n      setErrors(validationErrors);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return <div className=\"dd\">{children({ onSubmit, errors, resetValidation })}</div>;\r\n}\r\n"],"names":[],"sourceRoot":""}